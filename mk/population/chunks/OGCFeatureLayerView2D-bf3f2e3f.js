import{V as e,W as i,X as a,a as r}from"../main.js";import{Z as s}from"./FeatureLayerView2D-30dbfea6.js";import"./clickToleranceUtils-32aa5a86.js";import"./definitions-bd7968b3.js";import"./LayerView-63b9e31b.js";import"./Container-f03aad03.js";import"./mat4f32-2521725d.js";import"./schemaUtils-de46570b.js";import"./Utils-c52d8073.js";import"./Texture-e92108c0.js";import"./MaterialKey-efe53db3.js";import"./visualVariablesUtils-887ee144.js";import"./CIMSymbolHelper-08e81b2e.js";import"./Rect-46a6423d.js";import"./BidiEngine-a3336f07.js";import"./MD5-73ac3f43.js";import"./popupUtils-cb5617cf.js";import"./drapedUtils-5cedfdde.js";const t=s=>{let t=class extends s{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new r("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([a("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(s)){};l=e([a("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export{o as default};
