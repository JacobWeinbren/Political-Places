import{gj as e,gl as t,d2 as o,d3 as r,gk as i,d4 as s,d8 as l,cR as a,r as n,cq as p,L as y,l as d,V as u,W as c,cT as S,gD as h,gN as g,d7 as v,X as m,gO as f,gP as b,gQ as R,gR as C,gS as j}from"../main.js";const x=["atom","xml"],F={base:f,key:"type",typeMap:{"simple-line":b},errorContext:"symbol"},k={base:f,key:"type",typeMap:{"picture-marker":R,"simple-marker":C},errorContext:"symbol"},w={base:f,key:"type",typeMap:{"simple-fill":j},errorContext:"symbol"};let O=class extends(e(t(o(r(i(s(l))))))){constructor(...e){super(...e),this.description=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.outSpatialReference=null,this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?a(this.url,x)||"GeoRSS":e||""}set title(e){this._set("title",e)}readFeatureCollections(e,t){return t.featureCollection.layers.forEach((e=>{const t=e.layerDefinition.drawingInfo.renderer.symbol;t&&"esriSFS"===t.type&&t.outline&&-1!==t.outline.style.indexOf("esriSFS")&&(t.outline.style="esriSLSSolid")})),t.featureCollection.layers}load(e){const t=n(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(p).then((()=>this._fetchService(t)))),Promise.resolve(this)}async _fetchService(e){const{data:t}=await y(d.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:this.outSpatialReference?JSON.stringify(this.outSpatialReference.toJSON()):void 0},signal:e});this.read(t,{origin:"service"})}};u([c()],O.prototype,"description",void 0),u([c({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],O.prototype,"title",null),u([c()],O.prototype,"featureCollections",void 0),u([S("service","featureCollections",["featureCollection.layers"])],O.prototype,"readFeatureCollections",null),u([c(h)],O.prototype,"id",void 0),u([c(g)],O.prototype,"legendEnabled",void 0),u([c({types:F,json:{write:!0}})],O.prototype,"lineSymbol",void 0),u([c({type:["show","hide"]})],O.prototype,"listMode",void 0),u([c({types:k,json:{write:!0}})],O.prototype,"pointSymbol",void 0),u([c({types:w,json:{write:!0}})],O.prototype,"polygonSymbol",void 0),u([c({type:["GeoRSS"]})],O.prototype,"operationalLayerType",void 0),u([c()],O.prototype,"outSpatialReference",void 0),u([c(v)],O.prototype,"url",void 0),u([c({readOnly:!0,json:{read:!1},value:"geo-rss"})],O.prototype,"type",void 0),O=u([m("esri.layers.GeoRSSLayer")],O);var L=O;export default L;
