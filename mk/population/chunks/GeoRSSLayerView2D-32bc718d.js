import{cU as e,c2 as i,c5 as s,d$ as t,e0 as r,F as o,bD as a,V as p,X as l}from"../main.js";import{l as n,d as h}from"./LayerView-d567179c.js";import{i as m}from"./GraphicContainer-8c071470.js";import{i as c}from"./BaseGraphicContainer-8562b77d.js";import"./Container-529d87ac.js";import"./mat4f32-da8dff1b.js";import"./Utils-8f3351b9.js";import"./Texture-4f49b301.js";import"./quantizationUtils-ca7a46a0.js";import"./json-03b80e6a.js";import"./Matcher-de09045b.js";import"./definitions-9b706c30.js";import"./TileStore-73d2195c.js";import"./FeatureSetReader-a515279f.js";import"./centroid-fb917684.js";import"./visualVariablesUtils-0b33240f.js";import"./visualVariablesUtils-8b028813.js";import"./quickselect-213714bb.js";import"./tileUtils-d767ea9e.js";import"./schemaUtils-2b6452bd.js";import"./MaterialKey-a0ce035e.js";import"./CIMSymbolHelper-48c73628.js";import"./Rect-0833d92c.js";import"./BidiEngine-aedaa270.js";import"./MD5-d159e5d6.js";import"./GeometryUtils-c573938c.js";import"./earcut-fdc0e191.js";import"./TileClipper-575654f9.js";import"./VertexArrayObject-24b79200.js";import"./FeatureContainer-fbac6a95.js";import"./TileContainer-edc01541.js";import"./WGLContainer-624bf74e.js";import"./ShaderCompiler-d1213600.js";import"./config-ce383fc5.js";let y=class extends(n(h)){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}hitTest(e,i){if(this.suspended||!this.graphicsViews.length)return Promise.resolve(null);const s=this.graphicsViews.reverse().map((s=>s.hitTest(e,i)));return Promise.all(s).then((e=>e.filter(((e,i)=>(e&&(e.popupTemplate=this._popupTemplates.get(this.graphicsViews[i]),e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){if(this.graphicsViews)for(const i of this.graphicsViews)i.processUpdate(e)}attach(){this.layer.featureCollections.forEach((o=>{const a=e.fromJSON(o.featureSet),p=new(i.ofType(s))(a.features);let l;if(this._graphicsViewMap[a.geometryType])l=this._graphicsViewMap[a.geometryType],l.graphics.addMany(p);else{const e=o.layerDefinition.drawingInfo,i=o.popupInfo?t.fromJSON(o.popupInfo):null,s=r(e.renderer);l=new c({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:s,container:new m(this.view.featuresTilingScheme)}),this._graphicsViewMap[a.geometryType]=l,this._popupTemplates.set(l,i),"polygon"!==a.geometryType||this.layer.polygonSymbol?"polyline"!==a.geometryType||this.layer.lineSymbol?"point"!==a.geometryType||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}})),this.handles.add([o(this.layer,"polygonSymbol",(e=>{this._graphicsViewMap.polygon.renderer=new a({symbol:e})})),o(this.layer,"lineSymbol",(e=>{this._graphicsViewMap.polyline.renderer=new a({symbol:e})})),o(this.layer,"pointSymbol",(e=>{this._graphicsViewMap.point.renderer=new a({symbol:e})}))])}detach(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this.graphicsViews.length=0}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}};y=p([l("esri.views.2d.layers.GeoRSSLayerView2D")],y);var d=y;export default d;
