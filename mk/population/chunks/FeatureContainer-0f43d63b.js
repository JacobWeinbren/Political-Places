import{L as t,c1 as e,a_ as s,O as i,M as r,b6 as a,y as n,r as o,t as d,s as h,bW as u,B as l,d as _,g as c,e as p,bg as E,bX as x,c2 as f,D as R,aQ as v,x as g,c3 as m,V as b,bf as y,c4 as T}from"../main.js";import{p as S,_ as k,a2 as C,A as D,B as z,a8 as w,a9 as M,ac as O,ad as F,L as V,K as A,ae as P,af as L}from"./enums-35498f65.js";import{r as N,o as I}from"./TileContainer-2c829a9c.js";import{n as U,l as B,f as q}from"./visualVariablesUtils-1950dc71.js";import{e as K,f as j,K as Y,Z as Q}from"./Utils-c08a2f63.js";import{D as G,P as X,G as $,L as Z,M as H,Y as W,V as J}from"./enums-23145ba2.js";import{D as tt}from"./VertexArrayObject-f8d16690.js";import{u as et}from"./Texture-5f8b05e1.js";class st extends N{constructor(t,e,s){super(t,e,s,S,S)}destroy(){super.destroy(),this._transforms&&st.TransformCache.release(this.key.hash)}setTransform(t,o){const d=o/(t.resolution*t.pixelRatio),h=this.transforms.tileMat3,[u,l]=t.toScreenNoRotation([0,0],[this.x,this.y]),_=this.width/this.rangeX*d,c=this.height/this.rangeY*d;e(h,_,0,0,0,c,0,u,l,1),s(this.transforms.dvs,t.displayViewMat3,h);const p=this.transforms.labelMat2d,E=t.getScreenTransform(p,o),x=n();i(x,[this.x,this.y],E),r(p,x),a(p,t.viewMat2d,p)}_createTransforms(){return st.TransformCache.acquire(this.key.hash)}}st.TransformCache=new class{acquire(e){return{refCount:1,version:-1,labelMat2d:t(),tileMat3:t(),dvs:t()}}release(t){}};const it=2147483647;class rt{constructor(t){this._head=t,this._cursor=t}static from(t,e=0,s=t.byteLength/at.BYTES_PER_RECORD-e){const i=new at(new Int32Array(t,e*at.BYTES_PER_RECORD,s*at.ELEMENTS_PER_RECORD));return new rt(i)}size(){let t=this._cursor,e=0;for(;t;)e+=t.size(),t=t._link;return e}get id(){return this._cursor.id}set id(t){this._cursor.id=t}get materialKey(){return this._cursor.materialKey}set materialKey(t){this._cursor.materialKey=t}get insertAfter(){return this._cursor.insertAfter}get indexFrom(){return this._cursor.indexFrom}set indexFrom(t){this._cursor.indexFrom=t}get indexCount(){return this._cursor.indexCount}set indexCount(t){this._cursor.indexCount=t}get vertexFrom(){return this._cursor.vertexFrom}set vertexFrom(t){this._cursor.vertexFrom=t}get vertexCount(){return this._cursor.vertexCount}set vertexCount(t){this._cursor.vertexCount=t}get sortKey(){return this._cursor.sortKey}set sortKey(t){this._cursor.sortKey=t}get index(){return this._cursor._indexStart+this._cursor._index}seekIndex(t){let e=t;for(this._cursor=this._head;this._cursor;){const t=this._cursor.size();if(e<t)return this._cursor._index=e,!0;e-=t,this._cursor=this._cursor._link}return!1}forEach(t){const e=this.getCursor();for(;e.next();)t(e)}link(t){if(!this._head)return void(this._head=t._head);let e=this._head;for(;e._link;)e=e._link;e._link=t._head,e._link._indexStart=e._indexStart+e.size()}getCursor(){return this.copy()}lookup(t){for(this._cursor=this._head;this._cursor&&!this._cursor.lookup(t);){if(!this._cursor._link)return!1;this._cursor=this._cursor._link}return!!this._cursor}copy(){var t;const e=new rt(null==(t=this._head)?void 0:t.copy());if(!e._head)return e;let s=e._head,i=e._head._link;for(;i;)s._link=i.copy(),s=i,i=s._link;return e}next(){return!!this._cursor&&(!!this._cursor.next()||!!this._cursor._link&&(this._cursor=this._cursor._link,this.next()))}peekId(){var t;return null!=(t=this._cursor.peekId())?t:this._cursor._link.peekId()}delete(t){let e=this._head,s=null;for(;e;){if(e.delete(t))return e.isEmpty()&&(o(s)&&(s._link=e._link),e===this._head&&(this._head=e._link),e===this._cursor&&(this._cursor=e._link)),!0;s=e,e=e._link}return!1}}rt.ELEMENTS_PER_RECORD=k,rt.BYTES_PER_RECORD=rt.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;class at{constructor(t){this._link=null,this._index=-1,this._indexStart=0,this._deletedCount=0,this._offsets={instance:null},this._packedRecords=t}static from(t,e=0,s=t.byteLength/this.BYTES_PER_RECORD-e){return new at(new Int32Array(t,e*this.BYTES_PER_RECORD,s*this.ELEMENTS_PER_RECORD))}delete(t){const e=this._index,s=this.lookup(t);if(s)for(this.id=it,++this._deletedCount;this.next()&&this.id===t;)this.id=it,++this._deletedCount;return this._index=e,s}isEmpty(){return this._deletedCount===this.size()}link(t){this._link?this._link.link(t):this._link=t}lookup(t){if(d(this._offsets.instance)){this._offsets.instance=new Map;const t=this.copy();t._index=-1;let e=0;for(;t.next();)t.id!==e&&(this._offsets.instance.set(t.id,t._index),e=t.id)}if(!this._offsets.instance.has(t))return!1;const e=this._index;return this._index=this._offsets.instance.get(t),this.id!==it||(this._index=e,!1)}get id(){return this._packedRecords[this._index*at.ELEMENTS_PER_RECORD]}set id(t){this._packedRecords[this._index*at.ELEMENTS_PER_RECORD]=t}get materialKey(){return this._packedRecords[this._index*at.ELEMENTS_PER_RECORD+1]}set materialKey(t){this._packedRecords[this._index*at.ELEMENTS_PER_RECORD+1]=t}get insertAfter(){return this._packedRecords[this._index*at.ELEMENTS_PER_RECORD+2]}get indexFrom(){return this._packedRecords[this._index*at.ELEMENTS_PER_RECORD+3]}set indexFrom(t){this._packedRecords[this._index*at.ELEMENTS_PER_RECORD+3]=t}get indexCount(){return this._packedRecords[this._index*at.ELEMENTS_PER_RECORD+4]}set indexCount(t){this._packedRecords[this._index*at.ELEMENTS_PER_RECORD+4]=t}get vertexFrom(){return this._packedRecords[this._index*at.ELEMENTS_PER_RECORD+5]}set vertexFrom(t){this._packedRecords[this._index*at.ELEMENTS_PER_RECORD+5]=t}get vertexCount(){return this._packedRecords[this._index*at.ELEMENTS_PER_RECORD+6]}set vertexCount(t){this._packedRecords[this._index*at.ELEMENTS_PER_RECORD+6]=t}get sortKey(){return this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*at.ELEMENTS_PER_RECORD+7]}set sortKey(t){this._packedRecordsF32||(this._packedRecordsF32=new Float32Array(this._packedRecords.buffer)),this._packedRecordsF32[this._index*at.ELEMENTS_PER_RECORD+7]=t}get index(){return this._index}size(){return this._packedRecords.length/at.ELEMENTS_PER_RECORD}next(){for(;++this._index<this.size()&&this.id===it;);return this._index<this.size()}peekId(){const t=(this._index+1)*at.ELEMENTS_PER_RECORD;return t>=this._packedRecords.length?0:this._packedRecords[t]}getCursor(){return this.copy()}copy(){const t=new at(this._packedRecords);return t._indexStart=this._indexStart,t._link=this._link,t._index=this._index,t._offsets=this._offsets,t._deletedCount=this._deletedCount,t}}at.ELEMENTS_PER_RECORD=k,at.BYTES_PER_RECORD=at.ELEMENTS_PER_RECORD*Int32Array.BYTES_PER_ELEMENT;const nt=h.getLogger("esri.views.2d.engine.webgl.AttributeStoreView"),ot=U(B,nt);class dt{constructor(t,e,s){this._texture=null,this._lastTexture=null,this._fbos={},this.texelSize=4;const{buffer:i,pixelType:r,textureOnly:a}=t,n=K(r);this.shared=s,this.pixelType=r,this.size=e,this.textureOnly=a,a||(this.data=new n(c(i))),this._resetRange()}destroy(){l(this._texture,(t=>t.dispose()));for(const t in this._fbos)l(this._fbos[t],(e=>{"0"===t&&e.detachColorTexture(),e.dispose()})),this._fbos[t]=null;this._texture=null}get _textureDesc(){return{target:H.TEXTURE_2D,wrapMode:G.CLAMP_TO_EDGE,pixelFormat:X.RGBA,dataType:this.pixelType,samplingMode:Z.NEAREST,width:this.size,height:this.size}}setData(t,e,s){const i=q(t),r=c(this.data),a=i*this.texelSize+e;!r||a>=r.length||(r[a]=s,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i))}getData(t,e){if(d(this.data))return null;const s=q(t)*this.texelSize+e;return!this.data||s>=this.data.length?null:this.data[s]}getTexture(t){return R(this._texture,(()=>this._initTexture(t)))}getFBO(t,e=0){if(d(this._fbos[e])){const s={colorTarget:W.TEXTURE,depthStencilTarget:J.NONE},i=0===e?this.getTexture(t):this._textureDesc;this._fbos[e]=new tt(t,s,i)}return this._fbos[e]}get locked(){return!(this.pixelType!==$.UNSIGNED_BYTE||!this.shared||this.textureOnly||!_("esri-atomics")||!this.data)&&1===Atomics.load(this.data,0)}get hasDirty(){const t=this.dirtyStart;return this.dirtyEnd>=t}updateTexture(t,e){if(!this.locked){try{const e=this.dirtyStart,s=this.dirtyEnd;if(!this.hasDirty)return;this._resetRange();const i=c(this.data).buffer,r=this.getTexture(t),a=4,n=(e-e%this.size)/this.size,o=(s-s%this.size)/this.size,d=n,h=this.size,u=o,l=n*this.size*a,_=(h+u*this.size)*a-l,E=K(this.pixelType),x=new E(i,l*E.BYTES_PER_ELEMENT,_),f=this.size,R=u-d+1;if(R>this.size)return void nt.error(new p("mapview-webgl","Out-of-bounds index when updating AttributeData"));r.updateData(0,0,d,f,R,x)}catch(t){}e()}}update(t){const{data:e,start:s,end:i}=t;if(o(e)){const i=this.data,r=s*this.texelSize;for(let s=0;s<e.length;s++){const a=1<<s%this.texelSize;t.layout&a&&(i[r+s]=e[s])}}this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,i)}resize(t,e){const s=this.size;if(this.size=e,this.textureOnly)return void(s!==this.size&&(this._lastTexture=this._texture,this._texture=null));const i=K(this.pixelType);this.destroy(),this.data=new i(c(t.buffer))}_resetRange(){this.dirtyStart=2147483647,this.dirtyEnd=0}_initTexture(t){const e=new et(t,this._textureDesc,R(this.data,void 0));if(o(this._lastTexture)&&this._fbos[0]){const s=this._lastTexture.descriptor.width,i=this._lastTexture.descriptor.height,r=this._lastTexture.descriptor.dataType,a=this._lastTexture.descriptor.pixelFormat,n=this.getFBO(t),o=j(r),d=new(K(r))(new ArrayBuffer(s*i*o*this.texelSize)),h=t.getBoundFramebufferObject(),{x:u,y:l,width:_,height:c}=t.getViewport();t.bindFramebuffer(n),n.readPixels(0,0,s,i,a,r,d),e.updateData(0,0,0,2*s,i/2,d),t.setViewport(u,l,_,c),t.bindFramebuffer(h)}return this.destroy(),this._texture=e,this._texture}}class ht{constructor(t){this._onUpdate=t,this._initialized=!1,this._forceNextUpload=!1,this._locked=!1}initialize(t){const{blocks:e,shared:s,size:i}=t;if(this.shared=s,this.size=i,ot("Initializing AttributeStoreView",t),d(this._data))this._data=u(e,(t=>new dt(t,i,s)));else for(let t=0;t<this._data.length;t++){const r=this._data[t],a=e[t];o(a)&&(d(r)?this._data[t]=new dt(a,i,s):r.resize(a,i))}this._initialized=!0}destroy(){l(this._data,(t=>u(t,(t=>t.destroy())))),l(this._defaultTexture,(t=>t.dispose()))}isEmpty(){const t=this._data;return d(t)}isUpdating(){const t=o(this._pendingAttributeUpdate),e=t;return _("esri-2d-log-updating")&&console.log(`Updating AttributeStoreView ${e}\n  -> hasPendingUpdate ${t}`),e}getBlock(t){return d(this._data)?null:this._data[t]}setLabelMinZoom(t,e){this.setData(t,0,1,e)}getLabelMinZoom(t){return this.getData(t,0,1,255)}getFilterFlags(t){return this.getData(t,0,0,0)}getVVSize(t){return this.getData(t,C,0,0)}getData(t,e,s,i){if(!this._data)return 0;const r=c(this._data)[e];if(d(r))return 0;const a=r.getData(t,s);return o(a)?a:i}setData(t,e,s,i){const r=c(this._data)[e];c(r).setData(t,s,i)}lockTextureUpload(){this._locked=!0}unlockTextureUpload(){this._locked=!1}forceTextureUpload(){this._forceNextUpload=!0}async requestUpdate(t){if(this._pendingAttributeUpdate)return void nt.error(new p("mapview-webgl","Tried to update attribute data with a pending update"));const e=E();return ot("AttributeStoreView Update Requested",t),this._pendingAttributeUpdate={data:t,resolver:e},e.promise}update(){if(this._initialized&&o(this._pendingAttributeUpdate)){const{data:t,resolver:e}=this._pendingAttributeUpdate,s=c(this._data);for(let e=0;e<t.blocks.length;e++){const i=t.blocks[e],r=s[e];l(r,(t=>l(i,(s=>{ot(`Updating block ${e}`,s),t.update(s)}))))}this._pendingAttributeUpdate=null,e(),this._onUpdate()}}bindTextures(t,e=!0){this.update();const s=this._getDefaultTexture(t);if(!this._initialized)return t.bindTexture(s,D),void(e&&(t.bindTexture(s,z),t.bindTexture(s,w),t.bindTexture(s,M),t.bindTexture(s,O)));const i=c(this._data);this._locked&&!this._forceNextUpload||(x(i,(e=>e.updateTexture(t,(()=>this._onUpdate())))),this._forceNextUpload=!1),t.bindTexture(f(i[F],s,(e=>e.getTexture(t))),D),e&&(t.bindTexture(f(i[V],s,(e=>e.getTexture(t))),O),t.bindTexture(f(i[A],s,(e=>e.getTexture(t))),z),t.bindTexture(f(i[C],s,(e=>e.getTexture(t))),w),t.bindTexture(f(i[P],s,(e=>e.getTexture(t))),M))}_getDefaultTexture(t){if(d(this._defaultTexture)){const e={wrapMode:G.CLAMP_TO_EDGE,pixelFormat:X.RGBA,dataType:$.UNSIGNED_BYTE,samplingMode:Z.NEAREST,width:1,height:1};this._defaultTexture=new et(t,e,new Uint8Array(4))}return this._defaultTexture}}function ut(t,e){const s=e.length;if(t<e[0].value||1===s)return e[0].size;for(let i=1;i<s;i++)if(t<e[i].value){const s=(t-e[i-1].value)/(e[i].value-e[i-1].value);return e[i-1].size+s*(e[i].size-e[i-1].size)}return e[s-1].size}function lt(t,e,s=0){if(d(e))return t[s+0]=0,t[s+1]=0,t[s+2]=0,void(t[s+3]=0);const{r:i,g:r,b:a,a:n}=e;t[s+0]=i*n/255,t[s+1]=r*n/255,t[s+2]=a*n/255,t[s+3]=n}class _t{constructor(){this.symbolLevels=[],this.vvColorValues=new Float32Array(8),this.vvColors=new Float32Array(32),this.vvOpacityValues=new Float32Array(8),this.vvOpacities=new Float32Array(8),this.vvSizeMinMaxValue=new Float32Array(4),this.ddColors=new Float32Array(32),this.ddBackgroundColor=new Float32Array(4),this.ddActiveDots=new Float32Array(8),this._vvMaterialParameters={vvSizeEnabled:!1,vvColorEnabled:!1,vvRotationEnabled:!1,vvRotationType:"geographic",vvOpacityEnabled:!1}}getSizeVVFieldStops(t){const e=this._vvSizeFieldStops;switch(e.type){case"static":return e;case"level-dependent":return R(e.levels[t],(()=>{let s=1/0,i=0;for(const r in e.levels){const e=parseFloat(r),a=Math.abs(t-e);a<s&&(s=a,i=e)}if(s===1/0)return{sizes:new Float32Array([0,0,0,0,0,0]),values:new Float32Array([0,0,0,0,0,0])};const r=2**((t-i)/2),a=c(e.levels[i]),n=new Float32Array(a.values);return n[2]*=r,n[3]*=r,{sizes:c(a.sizes),values:n}}))}}get vvMaterialParameters(){return this._vvMaterialParameters}update(t){o(this._vvInfo)&&this._updateVisualVariables(this._vvInfo.vvRanges,t)}setInfo(t,e,s){this._updateEffects(s),this._vvInfo=e,"dot-density"===t.type&&this._updateDotDensityInfo(t)}getVariation(){return{ddDotBlending:this.ddDotBlending,outsideLabelsVisible:this.outsideLabelsVisible,oesTextureFloat:v().supportsTextureFloat}}getVariationHash(){return(this.ddDotBlending?1:0)|(this.outsideLabelsVisible?1:0)<<1}_updateEffects(t){o(t)?this.outsideLabelsVisible=t.excludedLabelsVisible:this.outsideLabelsVisible=!1}_updateVisualVariables(t,e){const s=this._vvMaterialParameters;if(s.vvOpacityEnabled=!1,s.vvSizeEnabled=!1,s.vvColorEnabled=!1,s.vvRotationEnabled=!1,!t)return;const i=t.size;if(i){if(s.vvSizeEnabled=!0,i.minMaxValue){const t=i.minMaxValue;let s,r;if(Y(t.minSize)&&Y(t.maxSize))if(Q(t.minSize)&&Q(t.maxSize))s=g(t.minSize),r=g(t.maxSize);else{const i=e.scale;s=g(ut(i,t.minSize.stops)),r=g(ut(i,t.maxSize.stops))}this.vvSizeMinMaxValue.set([t.minDataValue,t.maxDataValue,s,r])}if(i.scaleStops&&(this.vvSizeScaleStopsValue=g(ut(e.scale,i.scaleStops.stops))),i.unitValue){const t=m(e.spatialReference)/b[i.unitValue.unit];this.vvSizeUnitValueToPixelsRatio=t/e.resolution}i.fieldStops&&(this._vvSizeFieldStops=i.fieldStops)}const r=t.color;r&&(s.vvColorEnabled=!0,this.vvColorValues.set(r.values),this.vvColors.set(r.colors));const a=t.opacity;a&&(s.vvOpacityEnabled=!0,this.vvOpacityValues.set(a.values),this.vvOpacities.set(a.opacities));const n=t.rotation;n&&(s.vvRotationEnabled=!0,s.vvRotationType=n.type)}_updateDotDensityInfo(t){const e=t.attributes;this.ddDotValue=t.dotValue,this.ddDotScale=t.referenceScale,this.ddDotSize=t.dotSize,this.ddDotBlending=t.dotBlendingEnabled,this.ddSeed=t.seed;for(let t=0;t<L;t++){const s=t>=e.length?new y([0,0,0,0]):e[t].color;lt(this.ddColors,s,4*t)}for(let e=0;e<8;e++)this.ddActiveDots[e]=e<t.attributes.length?1:0;lt(this.ddBackgroundColor,t.backgroundColor)}}class ct extends I{constructor(t){super(t),this._rendererInfo=new _t,this._materialItemsRequestQueue=new T,this.attributeView=new ht((()=>this.onAttributeStoreUpdate()))}destroy(){this.removeAllChildren(),this.children.forEach((t=>t.destroy())),this.attributeView.destroy(),this._materialItemsRequestQueue.clear()}setRendererInfo(t,e,s){this._rendererInfo.setInfo(t,e,s),this.requestRender()}async getMaterialItems(t,e){if(!t||0===t.length)return null;const s=E();return this._materialItemsRequestQueue.push({items:t,abortOptions:e,resolver:s}),this.requestRender(),s.promise}doRender(t){if(t.context.capabilities.enable("textureFloat"),t.context.capabilities.enable("vao"),this._materialItemsRequestQueue.length>0){let e=this._materialItemsRequestQueue.pop();for(;e;)this._processMaterialItemRequest(t,e),e=this._materialItemsRequestQueue.pop()}super.doRender(t)}renderChildren(t){for(const e of this.children)e.commit(t);this._rendererInfo.update(t.state),super.renderChildren(t)}createRenderParams(t){const e=super.createRenderParams(t);return e.rendererInfo=this._rendererInfo,e.attributeView=this.attributeView,e}onAttributeStoreUpdate(){}_processMaterialItemRequest(t,{items:e,abortOptions:s,resolver:i}){const{painter:r,pixelRatio:a}=t,n=e.map((t=>r.textureManager.rasterizeItem(t.symbol,a,t.glyphIds,s)));Promise.all(n).then((t=>{if(!this.stage)return void i.reject();const s=t.map(((t,s)=>({id:e[s].id,mosaicItem:t})));i.resolve(s)}),i.reject)}}export{st as c,rt as i,ct as o};
