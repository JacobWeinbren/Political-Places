import{Z as e,_ as i,dk as r,a0 as t,ch as s,cO as a}from"../main.js";import{b as l}from"./WGLContainer-c2de1b8f.js";import{L as n}from"./enums-23145ba2.js";import{u as o,f as d}from"./LayerView-de5b4b81.js";import"./pixelUtils-07299408.js";import"./Container-82e53333.js";import"./VertexArrayObject-f8d16690.js";import"./Texture-5f8b05e1.js";import"./VertexElementDescriptor-8df85f96.js";import"./enums-35498f65.js";import"./Utils-c08a2f63.js";import"./number-5bcfe158.js";import"./ProgramTemplate-851a81c4.js";import"./StyleDefinition-17b4b563.js";import"./config-39daa94e.js";import"./GeometryUtils-a028e364.js";import"./MaterialKey-d541ae9c.js";import"./alignmentUtils-24585d5f.js";import"./earcut-4b9fe621.js";class h extends l{constructor(){super(...arguments),this.requiresDedicatedFBO=!1}dispose(){}doRender(e){const i=this.createRenderParams(e),{context:r,painter:t,profiler:s}=i;this._prevFBO=r.getBoundFramebufferObject(),s.recordContainerStart(this.name);const a=this._getFbo(i),l=t.getRenderTarget();r.bindFramebuffer(a),t.setRenderTarget(a),r.setDepthWriteEnabled(!0),r.setColorMask(!0,!0,!0,!0),r.setClearColor(0,0,0,0),r.setClearDepth(1),r.clear(r.gl.COLOR_BUFFER_BIT|r.gl.DEPTH_BUFFER_BIT),r.setDepthWriteEnabled(!1);for(const i of this.children)i.beforeRender(e);for(const e of this.children)e.processRender(i);for(const i of this.children)i.afterRender(e);t.setRenderTarget(l),t.releaseFbo(a),r.bindFramebuffer(this._prevFBO),t.beforeRenderLayer(i,this._clippingInfos?255:0,this.computedOpacity),r.setStencilTestEnabled(!1),r.setStencilWriteMask(0),t.blitTexture(r,a.colorTexture,n.NEAREST),t.compositeLayer(i,this.computedOpacity),s.recordContainerEnd()}createRenderParams(e){return{...super.createRenderParams(e),blendMode:this.blendMode,effects:this.computedEffects,globalOpacity:1}}_getFbo(e){const{context:i,painter:r}=e,{width:t,height:s}=i.getViewport();return r.acquireFbo(t,s)}}let c=class extends o{constructor(e){super(e),this.type="group",this.layerViews=new s}initialize(){this.handles.add([this.layerViews.on("change",(e=>this._layerViewsChangeHandler(e))),this.layer.watch("visibilityMode",(()=>this._visibilityModeHandler()),!0),this.watch("visible",(()=>this._visibleHandler()),!0)],"grouplayerview"),this._layerViewsChangeHandler({target:null,added:this.layerViews.toArray(),removed:[],moved:[]})}set layerViews(e){this._set("layerViews",a(e,this._get("layerViews")))}get updatingProgress(){return 0===this.layerViews.length?1:this.layerViews.reduce(((e,i)=>e+i.updatingProgress),0)/this.layerViews.length}isUpdating(){return this.layerViews.some((e=>e.updating))}_hasLayerViewVisibleOverrides(){return this.layerViews.some((e=>e._isOverridden("visible")))}_findLayerViewForLayer(e){return e&&this.layerViews.find((i=>i.layer===e))}_firstVisibleOnLayerOrder(){const e=this.layer.layers.find((e=>{const i=this._findLayerViewForLayer(e);return i&&i.visible}));return e&&this._findLayerViewForLayer(e)}_enforceExclusiveVisibility(e){this._hasLayerViewVisibleOverrides()&&(e||!(e=this._firstVisibleOnLayerOrder())&&this.layerViews.length>0&&(e=this._findLayerViewForLayer(this.layer.layers.getItemAt(0))),this.layerViews.forEach((i=>{i.visible=i===e})))}_layerViewsChangeHandler(e){this.handles.remove("grouplayerview:visible"),this.handles.add(this.layerViews.map((e=>e.watch("visible",(i=>this._layerViewVisibleHandler(i,e)),!0))).toArray(),"grouplayerview:visible");const i=e.added[e.added.length-1];let r=null;i&&i.visible&&(r=i),this._enforceVisibility(r)}_enforceVisibility(e){if(this._hasLayerViewVisibleOverrides())switch(this.layer.visibilityMode){case"inherited":{const e=this.visible;this.layerViews.forEach((i=>{i.visible=e}));break}case"exclusive":this._enforceExclusiveVisibility(e)}}_visibilityModeHandler(){this._enforceVisibility()}_layerViewVisibleHandler(e,i){if(this._hasLayerViewVisibleOverrides())switch(this.layer.visibilityMode){case"inherited":e!==this.visible&&(i.visible=this.visible);break;case"exclusive":this._enforceExclusiveVisibility(e&&i)}}_visibleHandler(){var e;this._hasLayerViewVisibleOverrides()&&"inherited"===(null==(e=this.layer)?void 0:e.visibilityMode)&&this._enforceVisibility()}};e([i({cast:r})],c.prototype,"layerViews",null),e([i({readOnly:!0})],c.prototype,"updatingProgress",null),e([i()],c.prototype,"view",void 0),c=e([t("esri.views.layers.GroupLayerView")],c);const y=c;let p=class extends(d(y)){constructor(){super(...arguments),this.container=new h}attach(){this._updateStageChildren(),this.handles.add(this.layerViews.on("after-changes",(()=>this._updateStageChildren())),"grouplayerview2d")}detach(){this.handles.remove("grouplayerview2d"),this.container.removeAllChildren()}update(e){}moveStart(){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach(((e,i)=>this.container.addChildAt(e.container,i)))}};p=e([t("esri.views.2d.layers.GroupLayerView2D")],p);const b=p;export{b as default};
