import{V as e,W as i,X as a,a as r}from"../main.js";import{Z as s}from"./FeatureLayerView2D-b503e810.js";import"./clickToleranceUtils-ff9b54b8.js";import"./definitions-9b706c30.js";import"./LayerView-e11ac711.js";import"./Container-b032c4f8.js";import"./mat4f32-da8dff1b.js";import"./schemaUtils-ae222a96.js";import"./Utils-e991697e.js";import"./Texture-a2db9664.js";import"./MaterialKey-b16e6916.js";import"./visualVariablesUtils-b714db95.js";import"./CIMSymbolHelper-eaceb6d0.js";import"./Rect-0833d92c.js";import"./BidiEngine-aedaa270.js";import"./MD5-d159e5d6.js";import"./popupUtils-2f10bb89.js";import"./drapedUtils-c9511a4e.js";const t=s=>{let t=class extends s{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new r("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([a("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(s)){};l=e([a("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export default o;
