import{V as t,X as e}from"../main.js";import{a as i,n}from"./heatmapUtils-9cd13764.js";import{n as s}from"./BitmapTileContainer-7c6bc48e.js";import{o as r}from"./BaseTileRenderer-5f8dfa64.js";import"./Bitmap-f6bace84.js";import"./VertexArrayObject-40244969.js";import"./Texture-192a103c.js";import"./Container-b6c614cc.js";import"./mat4f32-2521725d.js";import"./TileContainer-1dd9dbe0.js";import"./Utils-ef13a049.js";import"./WGLContainer-66f5575f.js";import"./definitions-bd7968b3.js";import"./ShaderCompiler-ee9f064d.js";import"./config-8597b78f.js";import"./GeometryUtils-30b98fd3.js";import"./MaterialKey-1ba13c24.js";import"./earcut-26dd4f9f.js";class a{constructor(){this.gradient=null,this.height=512,this.width=512}render(t){i(t,512,this.intensities,this.gradient,this.minPixelIntensity,this.maxPixelIntensity)}}let o=class extends r{constructor(t){super(t),this._intensityInfo={minPixelIntensity:0,maxPixelIntensity:0},this.featuresView={attributeView:{initialize:()=>{},requestUpdate:()=>{}},requestRender:()=>{}},this._container=new s(t.tileInfoView)}createTile(t){const e=this._container.createTile(t);return this.tileInfoView.getTileCoords(e.bitmap,t),e.bitmap.resolution=this.tileInfoView.getTileResolution(t),e}onConfigUpdate(){const t=this.layer.renderer;if("heatmap"===t.type){const{minPixelIntensity:e,maxPixelIntensity:i}=t;this._intensityInfo.minPixelIntensity=e,this._intensityInfo.maxPixelIntensity=i,this._gradient=n(t.toJSON()),this.tiles.forEach((t=>{const n=t.bitmap.source;n&&(n.minPixelIntensity=e,n.maxPixelIntensity=i,n.gradient=this._gradient,t.bitmap.invalidateTexture())}))}}hitTest(){return Promise.resolve([])}install(t){t.addChild(this._container)}uninstall(t){this._container.removeAllChildren(),t.removeChild(this._container)}disposeTile(t){this._container.removeChild(t),t.destroy()}supportsRenderer(t){return t&&"heatmap"===t.type}onTileData(t){const e=this.tiles.get(t.tileKey);if(!e)return;const i=t.intensityInfo,{minPixelIntensity:n,maxPixelIntensity:s}=this._intensityInfo,r=e.bitmap.source||new a;r.intensities=i&&i.matrix||null,r.minPixelIntensity=n,r.maxPixelIntensity=s,r.gradient=this._gradient,e.bitmap.source=r,this._container.addChild(e),this.requestUpdate()}onTileError(t){console.error(t)}lockGPUUploads(){}unlockGPUUploads(){}};o=t([e("esri.views.2d.layers.features.tileRenderers.HeatmapTileRenderer")],o);var l=o;export{l as default};
