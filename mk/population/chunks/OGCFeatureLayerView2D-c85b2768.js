import{V as e,W as i,X as r,a as s}from"../main.js";import{Z as t}from"./FeatureLayerView2D-177b3b4d.js";import"./clickToleranceUtils-ff9b54b8.js";import"./definitions-9b706c30.js";import"./LayerView-d567179c.js";import"./Container-529d87ac.js";import"./mat4f32-da8dff1b.js";import"./schemaUtils-2b6452bd.js";import"./Utils-8f3351b9.js";import"./Texture-4f49b301.js";import"./MaterialKey-a0ce035e.js";import"./visualVariablesUtils-8b028813.js";import"./CIMSymbolHelper-48c73628.js";import"./Rect-0833d92c.js";import"./BidiEngine-aedaa270.js";import"./MD5-d159e5d6.js";import"./popupUtils-9d4b3437.js";import"./drapedUtils-4646ef1b.js";const a=t=>{let a=class extends t{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new s("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],a.prototype,"layer",void 0),e([i({readOnly:!0})],a.prototype,"availableFields",null),a=e([r("esri.views.layers.OGCFeatureLayerView")],a),a};let l=class extends(a(t)){};l=e([r("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export default o;
