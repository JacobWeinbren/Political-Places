import{V as e,W as i,X as a,a as r}from"../main.js";import{Z as s}from"./FeatureLayerView2D-9f9cf44b.js";import"./clickToleranceUtils-cc3f8b1c.js";import"./definitions-ae9c8627.js";import"./LayerView-89f14ed9.js";import"./Container-e77f9726.js";import"./mat4f32-8c5ad3bc.js";import"./schemaUtils-77c8bd9a.js";import"./Utils-147a3bf8.js";import"./Texture-549ffd0d.js";import"./MaterialKey-338f19b3.js";import"./visualVariablesUtils-4b322bbb.js";import"./CIMSymbolHelper-f00d4398.js";import"./Rect-5310c876.js";import"./BidiEngine-364fc195.js";import"./MD5-ba216a94.js";import"./popupUtils-9526da39.js";import"./drapedUtils-5b8a6582.js";const t=s=>{let t=class extends s{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new r("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([a("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(s)){};l=e([a("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export{o as default};
