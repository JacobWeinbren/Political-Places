import{V as e,X as t,W as r,dI as a,a as i,r as s,cg as o,dM as n,n as p,du as m,e2 as l,g as h}from"../main.js";import{t as d}from"./BitmapContainer-547aaf2c.js";import{l as c,d as u}from"./LayerView-a385a32e.js";import{t as g,i as f}from"./BaseGraphicContainer-0fab6656.js";import{I as y}from"./Utils-85b3aa4c.js";import{S as j}from"./ExportStrategy-63ab5245.js";import{n as b}from"./ExportImageParameters-1f797973.js";import{s as v}from"./clickToleranceUtils-8c8b4d60.js";import{t as x,d as w}from"./popupUtils-5a6815d9.js";import{a as C}from"./drapedUtils-961a9102.js";import"./WGLContainer-5a04359d.js";import"./definitions-d926f334.js";import"./VertexArrayObject-a2d1c05d.js";import"./Texture-e2607ed0.js";import"./ShaderCompiler-38c658c8.js";import"./config-15fa0450.js";import"./GeometryUtils-8a7978b2.js";import"./MaterialKey-8aa0da2f.js";import"./Container-9053ca23.js";import"./mat4f32-62843bff.js";import"./earcut-1a7b352e.js";import"./quantizationUtils-b44ed333.js";import"./json-86b9fc58.js";import"./Matcher-bdb756ac.js";import"./TileStore-3043eec3.js";import"./FeatureSetReader-23e9cd5f.js";import"./centroid-dd07251a.js";import"./visualVariablesUtils-d9475c51.js";import"./visualVariablesUtils-c2fe9116.js";import"./quickselect-af9a01e8.js";import"./tileUtils-682237ce.js";import"./schemaUtils-108adfef.js";import"./CIMSymbolHelper-0f69e1d5.js";import"./Rect-e0f26b8a.js";import"./BidiEngine-03c373f3.js";import"./MD5-d61df057.js";import"./TileClipper-54a46031.js";import"./FeatureContainer-b4e4a7d4.js";import"./TileContainer-b1cef06d.js";import"./Bitmap-fd4ff2fc.js";import"./sublayerUtils-756013a4.js";let I=class extends g{renderChildren(e){if(e.drawPhase!==y.HIGHLIGHT)return;if(this.attributeView.bindTextures(e.context),!this.children.some((e=>e.hasData)))return;super.renderChildren(e);const{painter:t}=e,r=t.effects.highlight;r.bind(e),e.context.setColorMask(!0,!0,!0,!0),e.context.clear(16384),this._renderChildren(e,r.defines.concat(["highlightAll"])),r.draw(e),r.unbind()}};I=e([t("esri.views.2d.layers.support.HighlightGraphicContainer")],I);var U=I;const P=p=>{let m=class extends p{initialize(){this.exportImageParameters=new b({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get exportImageVersion(){var e;return null==(e=this.exportImageParameters)||e.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}async fetchPopupFeatures(e,t){const{layer:r}=this;if(!e)return Promise.reject(new i("mapimagelayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:r}));const a=this.get("view.scale"),n=[],p=async e=>{const r=0===e.minScale||a<=e.minScale,i=0===e.maxScale||a>=e.maxScale;if(e.visible&&r&&i)if(e.sublayers)e.sublayers.forEach(p);else if(e.popupEnabled){const r=w(e,{...t,defaultPopupTemplateEnabled:!1});s(r)&&n.unshift({sublayer:e,popupTemplate:r})}},m=r.sublayers.toArray().reverse().map(p);await Promise.all(m);const l=n.map((async({sublayer:r,popupTemplate:a})=>{await r.load().catch((()=>{}));const i=r.createQuery(),o=s(t)?t.event:null,n=v({renderer:r.renderer,event:o}),p=this.createFetchPopupFeaturesQueryGeometry(e,n);i.geometry=p,i.outFields=await x(r,a);const m=await this._loadArcadeModules(a);return m&&m.arcadeUtils.hasGeometryOperations(a)||(i.maxAllowableOffset=p.width/n),(await r.queryFeatures(i)).features}));return(await o(l)).reduce(((e,t)=>t.value?[...e,...t.value]:e),[]).filter((e=>null!=e))}canResume(){var e;return!(!super.canResume()||null!=(e=this.timeExtent)&&e.isEmpty)}_loadArcadeModules(e){if(e.get("expressionInfos.length"))return n()}};return e([r()],m.prototype,"exportImageParameters",void 0),e([r({readOnly:!0})],m.prototype,"exportImageVersion",null),e([r()],m.prototype,"layer",void 0),e([r()],m.prototype,"suspended",void 0),e([r(a)],m.prototype,"timeExtent",void 0),m=e([t("esri.views.layers.MapImageLayerView")],m),m},M=p.getLogger("esri.views.2d.layers.MapImageLayerView2D");let V=class extends(P(m(c(u)))){constructor(){super(...arguments),this._highlightGraphics=new l}hitTest(){return null}update(e){this.strategy.update(e).catch((e=>{h(e)||M.error(e)}))}attach(){const{imageMaxWidth:e,imageMaxHeight:t,version:r}=this.layer,a=r>=10.3,i=r>=10;this._bitmapContainer=new d,this.container.addChild(this._bitmapContainer);const s=new f({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new U(this.view.featuresTilingScheme)});this.container.addChild(s.container),this.strategy=new j({container:this._bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:e,imageMaxHeight:t,imageRotationSupported:a,imageNormalizationSupported:i,hidpi:!0}),this.handles.add(this.watch("exportImageVersion",(()=>this.requestUpdate())),"exportImageVersion"),this.requestUpdate()}detach(){this.handles.remove("exportImageVersion"),this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}highlight(e,t){return this._highlightGraphics.add(e),{remove:()=>{this._highlightGraphics.remove(e)}}}createFetchPopupFeaturesQueryGeometry(e,t){return C(e,t,this.view)}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(e,t,r,a){return this.layer.fetchImage(e,t,r,{timeExtent:this.timeExtent,timestamp:this.refreshTimestamp,...a})}};e([r()],V.prototype,"strategy",void 0),e([r()],V.prototype,"updating",void 0),V=e([t("esri.views.2d.layers.MapImageLayerView2D")],V);var S=V;export default S;
