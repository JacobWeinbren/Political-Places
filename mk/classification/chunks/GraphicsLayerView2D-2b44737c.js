import{cc as i,c9 as e,Z as t,_ as s,a0 as r}from"../main.js";import{f as a,u as h}from"./LayerView-8e7f01dd.js";import{i as o}from"./GraphicContainer-212e676d.js";import{r as p}from"./BaseGraphicContainer-6b403bed.js";import"./Container-b7f00e71.js";import"./Utils-a0a3c935.js";import"./enums-c2efc4ce.js";import"./enums-38e3b49b.js";import"./Texture-56619848.js";import"./VertexElementDescriptor-a4fd480a.js";import"./CIMSymbolHelper-6613d020.js";import"./BidiEngine-c2cc3a82.js";import"./MaterialKey-44c98e9c.js";import"./GeometryUtils-b220a1b2.js";import"./projectionSupport-e4630b78.js";import"./json-1e178c02.js";import"./VertexArrayObject-e82dcaaa.js";import"./FeatureContainer-ee18a35c.js";import"./TileContainer-8a4cfbaa.js";import"./WGLContainer-8086989c.js";import"./pixelUtils-b2b437b9.js";import"./ProgramTemplate-1dff65f7.js";import"./StyleDefinition-ce844bf2.js";import"./config-aadd3eaf.js";import"./GeometryUtils-c54ea35c.js";import"./earcut-7014ceb9.js";import"./visualVariablesUtils-0a694e2e.js";import"./visualVariablesUtils-f8e41de3.js";import"./Matcher-57148aa6.js";import"./tileUtils-35d53fe8.js";import"./TileClipper-7c4aeefb.js";import"./Geometry-aca9ebc3.js";import"./ExpandedCIM-bf2c7d03.js";import"./quantizationUtils-2dc92c9e.js";import"./devEnvironmentUtils-bfd22fcb.js";import"./schemaUtils-66513252.js";import"./createSymbolSchema-8071cf2a.js";import"./MD5-0ecdfe5e.js";import"./util-97a2cb19.js";import"./ComputedAttributeStorage-c61da571.js";import"./vec3f32-675612f8.js";const c={remove(){},pause(){},resume(){}};let l=class extends(a(h)){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new p({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new o(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.handles.add(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),"graphicslayerview2d")}detach(){this.container.removeAllChildren(),this.graphicsView.destroy(),this.graphicsView=null,this.handles.remove("graphicslayerview2d")}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i):null}async fetchPopupFeatures(i){if(this.graphicsView)return this.graphicsView.hitTest(i).filter((i=>!!i.popupTemplate))}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(t){var s;let r;return"number"==typeof t?r=[t]:t instanceof i?r=[t.uid]:Array.isArray(t)&&t.length>0?r="number"==typeof t[0]?t:t.map((i=>i&&i.uid)):e.isCollection(t)&&t.length>0&&(r=t.map((i=>i&&i.uid)).toArray()),r=null==(s=r)?void 0:s.filter((i=>null!=i)),r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):c}_addHighlight(i){for(const e of i)if(this._highlightIds.has(e)){const i=this._highlightIds.get(e);this._highlightIds.set(e,i+1)}else this._highlightIds.set(e,1);this._updateHighlight()}_removeHighlight(i){for(const e of i)if(this._highlightIds.has(e)){const i=this._highlightIds.get(e)-1;0===i?this._highlightIds.delete(e):this._highlightIds.set(e,i)}this._updateHighlight()}_updateHighlight(){var i;null==(i=this.graphicsView)||i.setHighlight(Array.from(this._highlightIds.keys()))}};t([s()],l.prototype,"graphicsView",void 0),l=t([r("esri.views.2d.layers.GraphicsLayerView2D")],l);const n=l;export{n as default};
