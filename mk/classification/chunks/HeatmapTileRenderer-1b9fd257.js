import{Z as e,a0 as t}from"../main.js";import{a as i,e as n}from"./heatmapUtils-b4275a10.js";import{n as s}from"./BitmapTileContainer-169e2968.js";import{o as r}from"./BaseTileRenderer-e237125a.js";import"./Bitmap-73d3e458.js";import"./Container-b7f00e71.js";import"./enums-38e3b49b.js";import"./Texture-56619848.js";import"./TileContainer-8a4cfbaa.js";import"./Utils-a0a3c935.js";import"./enums-c2efc4ce.js";import"./VertexElementDescriptor-a4fd480a.js";import"./WGLContainer-8086989c.js";import"./pixelUtils-b2b437b9.js";import"./VertexArrayObject-e82dcaaa.js";import"./ProgramTemplate-1dff65f7.js";import"./StyleDefinition-ce844bf2.js";import"./config-aadd3eaf.js";import"./GeometryUtils-c54ea35c.js";import"./MaterialKey-44c98e9c.js";import"./earcut-7014ceb9.js";class a{constructor(){this.gradient=null,this.height=512,this.width=512}render(e){i(e,512,this.intensities,this.gradient,this.minPixelIntensity,this.maxPixelIntensity)}}let o=class extends r{constructor(e){super(e),this._intensityInfo={minPixelIntensity:0,maxPixelIntensity:0},this.featuresView={attributeView:{initialize:()=>{},requestUpdate:()=>{}},requestRender:()=>{}},this._container=new s(e.tileInfoView)}createTile(e){const t=this._container.createTile(e);return this.tileInfoView.getTileCoords(t.bitmap,e),t.bitmap.resolution=this.tileInfoView.getTileResolution(e),t}onConfigUpdate(){const e=this.layer.renderer;if("heatmap"===e.type){const{minPixelIntensity:t,maxPixelIntensity:i}=e;this._intensityInfo.minPixelIntensity=t,this._intensityInfo.maxPixelIntensity=i,this._gradient=n(e.colorStops),this.tiles.forEach((e=>{const n=e.bitmap.source;n&&(n.minPixelIntensity=t,n.maxPixelIntensity=i,n.gradient=this._gradient,e.bitmap.invalidateTexture())}))}}hitTest(){return Promise.resolve([])}install(e){e.addChild(this._container)}uninstall(e){this._container.removeAllChildren(),e.removeChild(this._container)}disposeTile(e){this._container.removeChild(e),e.destroy()}supportsRenderer(e){return e&&"heatmap"===e.type}onTileData(e){const t=this.tiles.get(e.tileKey);if(!t)return;const i=e.intensityInfo,{minPixelIntensity:n,maxPixelIntensity:s}=this._intensityInfo,r=t.bitmap.source||new a;r.intensities=i&&i.matrix||null,r.minPixelIntensity=n,r.maxPixelIntensity=s,r.gradient=this._gradient,t.bitmap.source=r,this._container.addChild(t),this._container.requestRender(),this.requestUpdate()}onTileError(e){console.error(e)}lockGPUUploads(){}unlockGPUUploads(){}fetchResource(e,t){return console.error(e),Promise.reject()}};o=e([t("esri.views.2d.layers.features.tileRenderers.HeatmapTileRenderer")],o);const l=o;export{l as default};
