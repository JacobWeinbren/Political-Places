import{Z as e,_ as t,cQ as r,a0 as i,e as a,s,j as o,cE as n,ch as p}from"../main.js";import{t as m}from"./BitmapContainer-16439e2d.js";import{f as h,u as c}from"./LayerView-8e7f01dd.js";import{S as u}from"./ExportStrategy-59adb0d8.js";import{i as d}from"./RefreshableLayerView-4ae15847.js";import{l}from"./ExportWMSImageParameters-704d194f.js";import"./WGLContainer-8086989c.js";import"./enums-38e3b49b.js";import"./pixelUtils-b2b437b9.js";import"./Container-b7f00e71.js";import"./VertexArrayObject-e82dcaaa.js";import"./Texture-56619848.js";import"./VertexElementDescriptor-a4fd480a.js";import"./enums-c2efc4ce.js";import"./Utils-a0a3c935.js";import"./ProgramTemplate-1dff65f7.js";import"./StyleDefinition-ce844bf2.js";import"./config-aadd3eaf.js";import"./GeometryUtils-c54ea35c.js";import"./MaterialKey-44c98e9c.js";import"./earcut-7014ceb9.js";import"./Bitmap-73d3e458.js";const y=s=>{let o=class extends s{initialize(){this.exportImageParameters=new l({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get exportImageVersion(){var e;return null==(e=this.exportImageParameters)||e.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}fetchPopupFeatures(e){const{layer:t}=this;if(!e)return Promise.reject(new a("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:t}));const{popupEnabled:r}=t;if(!r)return Promise.reject(new a("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:r}));const i=this.createFetchPopupFeaturesQuery(e);if(!i)return Promise.resolve([]);const{extent:s,width:o,height:n,x:p,y:m}=i;if(!(s&&o&&n))throw new a("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:s,width:o,height:n});const h=t.fetchFeatureInfo(s,o,n,p,m);return Promise.resolve(h?[h]:[])}};return e([t()],o.prototype,"exportImageParameters",void 0),e([t({readOnly:!0})],o.prototype,"exportImageVersion",null),e([t()],o.prototype,"layer",void 0),e([t(r)],o.prototype,"timeExtent",void 0),o=e([i("esri.layers.mixins.WMSLayerView")],o),o},g=s.getLogger("esri.views.2d.layers.WMSLayerView2D");let f=class extends(y(d(h(c)))){constructor(){super(...arguments),this.container=new m}supportsSpatialReference(e){return this.layer.serviceSupportsSpatialReference(e)}update(e){this.strategy.update(e).catch((e=>{o(e)||g.error(e)}))}attach(){const{layer:e,container:t}=this,{imageMaxHeight:r,imageMaxWidth:i}=e;this.strategy=new u({container:t,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:r,imageMaxWidth:i,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.handles.add(n((()=>this.exportImageVersion),(()=>this.requestUpdate())),"exportImageVersion")}detach(){this.handles.remove("exportImageVersion"),this.strategy.destroy(),this.strategy=null,this.container.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(e){const{view:t,container:r}=this,{x:i,y:a}=e,{spatialReference:s}=t;let o=null,n=0,m=0;if(r.children.some((e=>{const{width:t,height:r,resolution:h,x:c,y:u}=e,d=c+h*t,l=u-h*r;return i>=c&&i<=d&&a<=u&&a>=l&&(o=new p({xmin:c,ymin:l,xmax:d,ymax:u,spatialReference:s}),n=t,m=r,!0)})),!o)return null;const h=o.width/n,c=Math.round((i-o.xmin)/h),u=Math.round((o.ymax-a)/h);return{extent:o,width:n,height:m,x:c,y:u}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(e,t,r,i){return this.layer.fetchImage(e,t,r,{timeExtent:this.timeExtent,...i})}};e([t()],f.prototype,"strategy",void 0),e([t()],f.prototype,"updating",void 0),f=e([i("esri.views.2d.layers.WMSLayerView2D")],f);const x=f;export{x as default};
