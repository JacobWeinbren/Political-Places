import{r as e,c5 as i,c2 as s,F as t,dJ as r,t as a,V as o,X as n}from"../main.js";import{l as p,d as c}from"./LayerView-3dbf9d3c.js";import{i as h}from"./GraphicContainer-58515b6d.js";import{i as l}from"./BaseGraphicContainer-4bd9239b.js";import"./Container-b9c99214.js";import"./mat4f32-857a0b46.js";import"./Utils-4ce5fe49.js";import"./Texture-77cbc7b5.js";import"./quantizationUtils-5453dd7e.js";import"./json-47353e48.js";import"./Matcher-42758fcf.js";import"./definitions-71205104.js";import"./TileStore-ad30eb12.js";import"./FeatureSetReader-5e83ffdc.js";import"./centroid-7c8c4d46.js";import"./visualVariablesUtils-c3f4bc78.js";import"./visualVariablesUtils-1f5ed364.js";import"./quickselect-a0f444ef.js";import"./tileUtils-e0b6ca4d.js";import"./schemaUtils-e438877e.js";import"./MaterialKey-1dec7211.js";import"./CIMSymbolHelper-db305c2f.js";import"./Rect-81f68290.js";import"./BidiEngine-0715e858.js";import"./MD5-38fbf4ff.js";import"./GeometryUtils-b7707fac.js";import"./earcut-baad81c7.js";import"./TileClipper-377778f2.js";import"./VertexArrayObject-88494054.js";import"./FeatureContainer-8883e36e.js";import"./TileContainer-37315c6b.js";import"./WGLContainer-f7c2d71e.js";import"./ShaderCompiler-8704d3f8.js";import"./config-f0f429b9.js";const d="sublayers",f="layerView",u=Object.freeze({remove(){},pause(){},resume(){}});let m=class extends(p(c)){async fetchPopupFeatures(e){return(await Promise.all(Array.from(this.graphicsViews(),(i=>i.searchFeatures(e).then((e=>e.filter((e=>!!e.popupTemplate)))))))).flat()}*graphicsViews(){e(this._graphicsViewsFeatureCollectionMap)?yield*this._graphicsViewsFeatureCollectionMap.keys():e(this._graphicsViews)?yield*this._graphicsViews:yield*[]}async hitTest(i,s){if(this.suspended)return null;const t=Array.from(this.graphicsViews(),(async t=>{const r=await t.hitTest(i,s);if(r){if(e(this._graphicsViewsFeatureCollectionMap)){const e=this._graphicsViewsFeatureCollectionMap.get(t);!r.popupTemplate&&e.popupTemplate&&(r.popupTemplate=e.popupTemplate)}return r}return null}));return(await Promise.all(t)).filter((e=>!!e))[0]||null}highlight(e){let t;if("number"==typeof e?t=[e]:e instanceof i?t=[e.uid]:Array.isArray(e)&&e.length>0?t="number"==typeof e[0]?e:e.map((e=>e&&e.uid)):s.isCollection(e)&&(t=e.map((e=>e&&e.uid)).toArray()),t=t.filter((e=>null!=e)),!t.length)return u;for(const e of this.graphicsViews())e.addHighlight(t);return{remove:()=>{for(const e of this.graphicsViews())e.removeHighlight(t)}}}update(e){for(const i of this.graphicsViews())i.processUpdate(e)}attach(){const i=this.view,s=()=>this.requestUpdate(),a=this.layer.featureCollections;if(e(a)&&a.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const e of a){const r=new h(this.view.featuresTilingScheme);r.fadeTransitionEnabled=!0;const a=new l({view:i,graphics:e.source,renderer:e.renderer,requestUpdateCallback:s,container:r});this._graphicsViewsFeatureCollectionMap.set(a,e),this.container.addChild(a.container),this.handles.add([t(e,"visible",(e=>a.container.visible=e)),t(a,"updating",(()=>this.notifyChange("updating")))],f)}}else e(this.layer.sublayers)&&this.handles.add(r(this.layer,"sublayers","change",(()=>this._createGraphicsViews()),(()=>this._createGraphicsViews()),(()=>this._destroyGraphicsViews())),d)}detach(){this._destroyGraphicsViews(),this.handles.remove(d)}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews())e.viewChange()}isUpdating(){for(const e of this.graphicsViews())if(e.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.handles.remove(f);for(const e of this.graphicsViews())e.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),a(this.layer.sublayers))return;const e=[],i=this.view,s=()=>this.requestUpdate();for(const r of this.layer.sublayers){const a=new h(this.view.featuresTilingScheme);a.fadeTransitionEnabled=!0;const o=new l({view:i,graphics:r.graphics,requestUpdateCallback:s,container:a});this.handles.add([r.on("graphic-update",o.graphicUpdateHandler),t(r,"visible",(e=>o.container.visible=e)),t(o,"updating",(()=>this.notifyChange("updating")))],f),this.container.addChild(o.container),e.push(o)}this._graphicsViews=e}};m=o([n("esri.views.2d.layers.MapNotesLayerView2D")],m);var g=m;export default g;
