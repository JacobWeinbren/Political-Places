import{V as e,W as i,X as r,a as s}from"../main.js";import{Z as t}from"./FeatureLayerView2D-3bd416f4.js";import"./clickToleranceUtils-df43cbf5.js";import"./definitions-71205104.js";import"./LayerView-3dbf9d3c.js";import"./Container-b9c99214.js";import"./mat4f32-857a0b46.js";import"./schemaUtils-e438877e.js";import"./Utils-4ce5fe49.js";import"./Texture-77cbc7b5.js";import"./MaterialKey-1dec7211.js";import"./visualVariablesUtils-1f5ed364.js";import"./CIMSymbolHelper-db305c2f.js";import"./Rect-81f68290.js";import"./BidiEngine-0715e858.js";import"./MD5-38fbf4ff.js";import"./popupUtils-980df6a6.js";import"./drapedUtils-d6b2e000.js";const a=t=>{let a=class extends t{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new s("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],a.prototype,"layer",void 0),e([i({readOnly:!0})],a.prototype,"availableFields",null),a=e([r("esri.views.layers.OGCFeatureLayerView")],a),a};let l=class extends(a(t)){};l=e([r("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export default o;
