import{Z as e,_ as t,jD as i,a0 as r,c8 as o,iB as s,iD as a,iE as l,cz as n,d8 as u,r as p,hM as d,g as m,e0 as b,a8 as y,t as c,bH as h,b3 as f,aB as v,e3 as T,aT as S,i2 as g,c9 as w,s as N,i7 as O,i8 as C,e8 as I,e9 as D,ea as F,W as A,ee as B,cE as j,ck as E,cy as x,ch as J,eC as P,q as L,jd as M,e as _,bz as W,cq as U,by as V,jE as R,jF as k,cc as q,fH as G,bl as z,cu as K}from"../main.js";import{r as Z}from"./originUtils-51626641.js";import{y as H,p as Y,h as X,m as $,A as Q,b as ee,N as te,l as ie,t as re,s as oe,r as se,n as ae,c as le,e as ne,f as ue,g as pe}from"./NAMessage-ce8c1499.js";import{p as de}from"./route-ea9dabbd.js";import"./GPMessage-a5be115d.js";import"./DirectionsFeatureSet-eca49146.js";let me=class extends o{constructor(){super(...arguments),this.directionLines=new s({color:[0,122,194],width:6}),this.directionPoints=new a({color:[255,255,255],size:6,outline:{color:[0,122,194],width:2}}),this.pointBarriers=new a({style:"x",size:10,outline:{color:[255,0,0],width:3}}),this.polygonBarriers=new l({color:[255,170,0,.6],outline:{width:7.5,color:[255,0,0,.6]}}),this.polylineBarriers=new s({width:7.5,color:[255,85,0,.7]}),this.routeInfo=new s({width:8,color:[20,89,127]}),this.firstStop=new a({color:[0,255,0],size:20,outline:{color:[255,255,255],width:4}}),this.middleStop=new a({color:[51,51,51],size:12,outline:{color:[0,122,194],width:3}}),this.lastStop=new a({color:[255,0,0],size:20,outline:{color:[255,255,255],width:4}}),this.invalidStop=new a({color:[255,0,0],size:12,outline:{color:[255,255,255],width:3}}),this.waypointStop=new a({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}}),this.breakStop=new a({color:[255,255,255],size:12,outline:{color:[0,122,194],width:3}})}};e([t({nonNullable:!0,types:i})],me.prototype,"directionLines",void 0),e([t({nonNullable:!0,types:i})],me.prototype,"directionPoints",void 0),e([t({nonNullable:!0,types:i})],me.prototype,"pointBarriers",void 0),e([t({nonNullable:!0,types:i})],me.prototype,"polygonBarriers",void 0),e([t({nonNullable:!0,types:i})],me.prototype,"polylineBarriers",void 0),e([t({nonNullable:!0,types:i})],me.prototype,"routeInfo",void 0),e([t({nonNullable:!0,types:i})],me.prototype,"firstStop",void 0),e([t({nonNullable:!0,types:i})],me.prototype,"middleStop",void 0),e([t({nonNullable:!0,types:i})],me.prototype,"lastStop",void 0),e([t({nonNullable:!0,types:i})],me.prototype,"invalidStop",void 0),e([t({nonNullable:!0,types:i})],me.prototype,"waypointStop",void 0),e([t({nonNullable:!0,types:i})],me.prototype,"breakStop",void 0),me=e([r("esri.layers.support.DefaultSymbols")],me);const be=me;var ye;let ce=ye=class extends o{constructor(e){super(e),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null}static fromPortalJSON(e){var t,i;return new ye({directionLineType:H.fromJSON(e.attributes.DirectionLineType),directionPointId:e.attributes.DirectionPointID,distance:e.attributes.Meters,duration:e.attributes.Minutes,fromLevel:null!=(t=e.attributes.FromLevel)?t:null,geometry:n.fromJSON(e.geometry),objectId:e.attributes.__OBJECTID,popupTemplate:p(e.popupInfo)?u.fromJSON(e.popupInfo):null,symbol:p(e.symbol)?d(e.symbol):null,toLevel:null!=(i=e.attributes.ToLevel)?i:null})}toPortalJSON(){const e={geometry:p(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:m(this.objectId),DirectionLineType:p(this.directionLineType)?H.toJSON(this.directionLineType):null,DirectionPointID:m(this.directionPointId),Meters:m(this.distance),Minutes:m(this.duration)},symbol:p(this.symbol)?this.symbol.toJSON():null,popupInfo:p(this.popupTemplate)?this.popupTemplate.toJSON():null};return p(this.fromLevel)&&(e.attributes.FromLevel=this.fromLevel),p(this.toLevel)&&(e.attributes.ToLevel=this.toLevel),e}};ce.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionsLineType",codedValues:[{name:"Unknown",code:0},{name:"Segment",code:1},{name:"Maneuver Segment",code:2},{name:"Restriction violation",code:3},{name:"Scale cost barrier crossing",code:4},{name:"Heavy Traffic",code:5},{name:"Slow Traffic",code:6},{name:"Moderate Traffic",code:7}]}},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"FromLevel",alias:"Start from 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"Meters",alias:"Length in Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"Minutes",alias:"Duration in Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"ToLevel",alias:"End at 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1}],ce.popupInfo={title:"Direction Lines",fieldInfos:[{fieldName:"DirectionLineType",label:"Line Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Meters",label:"Length in Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Minutes",label:"Duration in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DirectionPointID",label:"Direction Point ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"FromLevel",label:"Start from 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ToLevel",label:"End at 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},e([t({type:H.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:H.read}}})],ce.prototype,"directionLineType",void 0),e([t({json:{read:{source:"attributes.DirectionPointID"}}})],ce.prototype,"directionPointId",void 0),e([t({json:{read:{source:"attributes.Meters"}}})],ce.prototype,"distance",void 0),e([t({json:{read:{source:"attributes.Minutes"}}})],ce.prototype,"duration",void 0),e([t({json:{read:{source:"attributes.FromLevel"}}})],ce.prototype,"fromLevel",void 0),e([t({type:n})],ce.prototype,"geometry",void 0),e([t({json:{read:{source:"attributes.ObjectID"}}})],ce.prototype,"objectId",void 0),e([t({type:u,json:{read:!1}})],ce.prototype,"popupTemplate",void 0),e([t({types:i,json:{read:!1}})],ce.prototype,"symbol",void 0),e([t({json:{read:{source:"attributes.ToLevel"}}})],ce.prototype,"toLevel",void 0),ce=ye=e([r("esri.rest.support.DirectionLine")],ce);const he=ce;var fe;let ve=fe=class extends o{constructor(e){super(e),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.voiceInstruction=null}readArrivalTime(e,t){return p(t.attributes.ArrivalTime)?new Date(t.attributes.ArrivalTime):null}static fromPortalJSON(e){var t,i,r,o,s,a,l,n,m,b,c,h,f;return new fe({alternateName:null!=(t=e.attributes.AlternateName)?t:null,arrivalTime:p(e.attributes.ArrivalTime)?new Date(e.attributes.ArrivalTime):null,arrivalTimeOffset:null!=(i=e.attributes.ArrivalUTCOffset)?i:null,azimuth:null!=(r=e.attributes.Azimuth)?r:null,branchName:null!=(o=e.attributes.BranchName)?o:null,directionPointType:Y.fromJSON(e.attributes.DirectionPointType),displayText:null!=(s=e.attributes.DisplayText)?s:null,exitName:null!=(a=e.attributes.ExitName)?a:null,geometry:y.fromJSON(e.geometry),intersectingName:null!=(l=e.attributes.IntersectingName)?l:null,level:null!=(n=e.attributes.Level)?n:null,name:null!=(m=e.attributes.Name)?m:null,objectId:e.attributes.__OBJECTID,popupTemplate:p(e.popupInfo)?u.fromJSON(e.popupInfo):null,sequence:e.attributes.Sequence,shortVoiceInstruction:null!=(b=e.attributes.ShortVoiceInstruction)?b:null,stopId:null!=(c=e.attributes.StopID)?c:null,symbol:p(e.symbol)?d(e.symbol):null,towardName:null!=(h=e.attributes.TowardName)?h:null,voiceInstruction:null!=(f=e.attributes.VoiceInstruction)?f:null})}toPortalJSON(){const e={geometry:p(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:m(this.objectId),DirectionPointType:p(this.directionPointType)?Y.toJSON(this.directionPointType):null,Sequence:m(this.sequence),StopID:this.stopId},symbol:p(this.symbol)?this.symbol.toJSON():null,popupInfo:p(this.popupTemplate)?this.popupTemplate.toJSON():null};return p(this.alternateName)&&(e.attributes.AlternateName=this.alternateName),p(this.arrivalTime)&&(e.attributes.ArrivalTime=this.arrivalTime.getTime()),p(this.arrivalTimeOffset)&&(e.attributes.ArrivalUTCOffset=this.arrivalTimeOffset),p(this.azimuth)&&(e.attributes.Azimuth=this.azimuth),p(this.branchName)&&(e.attributes.BranchName=this.branchName),p(this.displayText)&&(e.attributes.DisplayText=this.displayText),p(this.exitName)&&(e.attributes.ExitName=this.exitName),p(this.intersectingName)&&(e.attributes.IntersectingName=this.intersectingName),p(this.level)&&(e.attributes.Level=this.level),p(this.name)&&(e.attributes.Name=this.name),p(this.shortVoiceInstruction)&&(e.attributes.ShortVoiceInstruction=this.shortVoiceInstruction),p(this.towardName)&&(e.attributes.TowardName=this.towardName),p(this.voiceInstruction)&&(e.attributes.VoiceInstruction=this.voiceInstruction),e}};ve.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AlternateName",alias:"Alternative Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ArrivalTime",alias:"Maneuver Starts at",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"BranchName",alias:"Signpost Branch Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"DirectionPointType",alias:"Directions Item Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionPointType",codedValues:[{name:"Unknown",code:0},{name:"",code:1},{name:"Arrive at stop",code:50},{name:"Depart at stop",code:51},{name:"Go straight",code:52},{name:"Take ferry",code:100},{name:"Take off ferry",code:101},{name:"Keep center at fork",code:102},{name:"Take roundabout",code:103},{name:"Make U-Turn",code:104},{name:"Pass the door",code:150},{name:"Take stairs",code:151},{name:"",code:152},{name:"Take escalator",code:153},{name:"Take pedestrian ramp",code:154},{name:"Keep left at fork",code:200},{name:"Ramp left",code:201},{name:"Take left-handed roundabout",code:202},{name:"Make left-handed U-Turn",code:203},{name:"Bear left",code:204},{name:"Turn left",code:205},{name:"Make sharp left",code:206},{name:"Turn left, followed by turn left",code:207},{name:"Turn left, followed by turn right",code:208},{name:"Keep right at fork",code:300},{name:"Ramp right",code:301},{name:"Take right-handed roundabout",code:302},{name:"Make right-handed U-Turn",code:303},{name:"Bear right",code:304},{name:"Turn right",code:305},{name:"Make sharp right",code:306},{name:"Turn right, followed by turn left",code:307},{name:"Turn right, followed by turn right",code:308},{name:"Indicates up direction of elevator",code:400},{name:"Indicates up direction of escalator",code:401},{name:"Take up-stairs",code:402},{name:"Indicates down direction of elevator",code:500},{name:"Indicates down direction of escalator",code:501},{name:"Take down-stairs",code:502},{name:"General event",code:1e3},{name:"Landmark",code:1001},{name:"Time zone change",code:1002},{name:"Heavy traffic segment",code:1003},{name:"Scale cost barrier crossing",code:1004},{name:"Administrative Border crossing",code:1005},{name:"Restriction violation",code:1006}]}},{name:"DisplayText",alias:"Text to Display",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ExitName",alias:"Highway Exit Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"IntersectingName",alias:"Intersecting Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Level",alias:"3D Logical Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Name",alias:"Primary Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ShortVoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TowardName",alias:"Signpost Toward Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"VoiceInstruction",alias:"Voice Full Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null}],ve.popupInfo={title:"{DisplayText}",fieldInfos:[{fieldName:"DirectionPointType",label:"Directions Item Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"DisplayText",label:"Text to Display",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"StopID",label:"Stop ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Maneuver Starts at",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Azimuth",label:"Azimuth",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Name",label:"Primary Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AlternateName",label:"Alternative Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ExitName",label:"Highway Exit Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"IntersectingName",label:"Intersecting Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BranchName",label:"Signpost Branch Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TowardName",label:"Signpost Toward Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ShortVoiceInstruction",label:"Voice Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"VoiceInstruction",label:"Voice Full Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},e([t({json:{read:!1}})],ve.prototype,"alternateName",void 0),e([t()],ve.prototype,"arrivalTime",void 0),e([b("arrivalTime",["attributes.ArrivalTime"])],ve.prototype,"readArrivalTime",null),e([t({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],ve.prototype,"arrivalTimeOffset",void 0),e([t({json:{read:{source:"attributes.Azimuth"}}})],ve.prototype,"azimuth",void 0),e([t({json:{read:{source:"attributes.BranchName"}}})],ve.prototype,"branchName",void 0),e([t({type:Y.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:Y.read}}})],ve.prototype,"directionPointType",void 0),e([t({json:{read:{source:"attributes.DisplayText"}}})],ve.prototype,"displayText",void 0),e([t({json:{read:{source:"attributes.ExitName"}}})],ve.prototype,"exitName",void 0),e([t({type:y})],ve.prototype,"geometry",void 0),e([t({json:{read:!1}})],ve.prototype,"intersectingName",void 0),e([t({json:{read:!1}})],ve.prototype,"level",void 0),e([t({json:{read:{source:"attributes.Name"}}})],ve.prototype,"name",void 0),e([t({json:{read:{source:"attributes.ObjectID"}}})],ve.prototype,"objectId",void 0),e([t({type:u,json:{read:!1}})],ve.prototype,"popupTemplate",void 0),e([t({json:{read:{source:"attributes.Sequence"}}})],ve.prototype,"sequence",void 0),e([t({json:{read:!1}})],ve.prototype,"shortVoiceInstruction",void 0),e([t({json:{read:{source:"attributes.StopID"}}})],ve.prototype,"stopId",void 0),e([t({types:i,json:{read:!1}})],ve.prototype,"symbol",void 0),e([t({json:{read:{source:"attributes.TowardName"}}})],ve.prototype,"towardName",void 0),e([t({json:{read:!1}})],ve.prototype,"voiceInstruction",void 0),ve=fe=e([r("esri.rest.support.DirectionPoint")],ve);const Te=ve;function Se(e,t){if(c(e))return null;const i={},r=new RegExp(`^${t}`,"i");for(const o in e)e.hasOwnProperty(o)&&r.test(o)&&(i[o.substring(t.length)]=e[o]);return i}function ge(e,t){return c(e)||c(t)?null:Math.round((e-t)/6e4)}var we;let Ne=we=class extends o{constructor(e){super(e),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null}readCosts(e,t){return Se(t.attributes,"Attr_")}writeCosts(e,t){if(!c(e)){t.attributes||(t.attributes={});for(const i in e)t.attributes[`Attr_${i}`]=e[i]}}static fromPortalJSON(e){var t,i;return new we({addedCost:null!=(t=e.attributes.AddedCost)?t:null,barrierType:p(e.attributes.BarrierType)?X.fromJSON(e.attributes.BarrierType):null,costs:p(e.attributes.Costs)?JSON.parse(e.attributes.Costs):null,curbApproach:p(e.attributes.CurbApproach)?$.fromJSON(e.attributes.CurbApproach):null,fullEdge:p(e.attributes.FullEdge)?Q.fromJSON(e.attributes.FullEdge):null,geometry:y.fromJSON(e.geometry),name:null!=(i=e.attributes.Name)?i:null,objectId:e.attributes.__OBJECTID,popupTemplate:p(e.popupInfo)?u.fromJSON(e.popupInfo):null,status:p(e.attributes.Status)?te.fromJSON(e.attributes.Status):null,symbol:p(e.symbol)?d(e.symbol):null})}clone(){return new we(f({addedCost:this.addedCost,barrierType:this.barrierType,costs:this.costs,curbApproach:this.curbApproach,fullEdge:this.fullEdge,geometry:this.geometry,name:this.name,objectId:this.objectId,popupTemplate:this.popupTemplate,sideOfEdge:this.sideOfEdge,sourceId:this.sourceId,sourceOid:this.sourceOid,status:this.status,symbol:this.symbol}))}toPortalJSON(){return{geometry:p(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:m(this.objectId),AddedCost:this.addedCost,BarrierType:p(this.barrierType)?X.toJSON(this.barrierType):null,Costs:p(this.costs)?JSON.stringify(this.costs):null,CurbApproach:p(this.curbApproach)?$.toJSON(this.curbApproach):null,FullEdge:p(this.fullEdge)?Q.toJSON(this.fullEdge):null,Name:this.name,Status:p(this.status)?te.toJSON(this.status):null},symbol:p(this.symbol)?this.symbol.toJSON():null,popupInfo:p(this.popupTemplate)?this.popupTemplate.toJSON():null}}};Ne.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAIntYesNo",codedValues:[{name:"No",code:0},{name:"Yes",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}}],Ne.popupInfo={title:"Point Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AddedCost",label:"Added Cost",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},e([t({json:{read:!1}})],Ne.prototype,"addedCost",void 0),e([t({type:X.apiValues,json:{name:"attributes.BarrierType",read:{reader:X.read},write:{writer:X.write}}})],Ne.prototype,"barrierType",void 0),e([t()],Ne.prototype,"costs",void 0),e([b("costs",["attributes"])],Ne.prototype,"readCosts",null),e([h("costs")],Ne.prototype,"writeCosts",null),e([t({type:$.apiValues,json:{read:{source:"attributes.CurbApproach",reader:$.read}}})],Ne.prototype,"curbApproach",void 0),e([t({type:Q.apiValues,json:{name:"attributes.FullEdge",read:{reader:Q.read},write:{writer:Q.write}}})],Ne.prototype,"fullEdge",void 0),e([t({type:y,json:{write:!0}})],Ne.prototype,"geometry",void 0),e([t({json:{name:"attributes.Name",write:!0}})],Ne.prototype,"name",void 0),e([t({json:{name:"attributes.ObjectID",write:!0}})],Ne.prototype,"objectId",void 0),e([t({type:u,json:{read:!1}})],Ne.prototype,"popupTemplate",void 0),e([t({type:ee.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:ee.read}}})],Ne.prototype,"sideOfEdge",void 0),e([t({json:{read:{source:"attributes.SourceID"}}})],Ne.prototype,"sourceId",void 0),e([t({json:{read:{source:"attributes.SourceOID"}}})],Ne.prototype,"sourceOid",void 0),e([t({type:te.apiValues,json:{read:{source:"attributes.Status",reader:te.read}}})],Ne.prototype,"status",void 0),e([t({types:i,json:{read:!1}})],Ne.prototype,"symbol",void 0),Ne=we=e([r("esri.rest.support.PointBarrier")],Ne);const Oe=Ne;var Ce;let Ie=Ce=class extends o{constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null}readCosts(e,t){return Se(t.attributes,"Attr_")}writeCosts(e,t){if(!c(e)){t.attributes||(t.attributes={});for(const i in e)t.attributes[`Attr_${i}`]=e[i]}}static fromPortalJSON(e){var t,i;return new Ce({barrierType:p(e.attributes.BarrierType)?X.fromJSON(e.attributes.BarrierType):null,costs:p(e.attributes.Costs)?JSON.parse(e.attributes.Costs):null,geometry:v.fromJSON(e.geometry),name:null!=(t=e.attributes.Name)?t:null,objectId:e.attributes.__OBJECTID,popupTemplate:p(e.popupInfo)?u.fromJSON(e.popupInfo):null,scaleFactor:null!=(i=e.attributes.ScaleFactor)?i:null,symbol:p(e.symbol)?d(e.symbol):null})}clone(){return new Ce(f({barrierType:this.barrierType,costs:this.costs,geometry:this.geometry,name:this.name,objectId:this.objectId,popupTemplate:this.popupTemplate,scaleFactor:this.scaleFactor,symbol:this.symbol}))}toPortalJSON(){var e,t;return{geometry:p(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:m(this.objectId),BarrierType:p(this.barrierType)?X.toJSON(this.barrierType):null,Costs:p(this.costs)?JSON.stringify(this.costs):null,Name:null!=(e=this.name)?e:null,ScaleFactor:null!=(t=this.scaleFactor)?t:null},symbol:p(this.symbol)?this.symbol.toJSON():null,popupInfo:p(this.popupTemplate)?this.popupTemplate.toJSON():null}}};Ie.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],Ie.popupInfo={title:"Polygon Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},e([t({type:X.apiValues,json:{name:"attributes.BarrierType",read:{reader:X.read},write:{writer:X.write}}})],Ie.prototype,"barrierType",void 0),e([t()],Ie.prototype,"costs",void 0),e([b("costs",["attributes"])],Ie.prototype,"readCosts",null),e([h("costs")],Ie.prototype,"writeCosts",null),e([t({type:v,json:{write:!0}})],Ie.prototype,"geometry",void 0),e([t({json:{name:"attributes.Name",write:!0}})],Ie.prototype,"name",void 0),e([t({json:{name:"attributes.ObjectID",write:!0}})],Ie.prototype,"objectId",void 0),e([t({type:u,json:{read:!1}})],Ie.prototype,"popupTemplate",void 0),e([t({json:{read:!1}})],Ie.prototype,"scaleFactor",void 0),e([t({types:i,json:{read:!1}})],Ie.prototype,"symbol",void 0),Ie=Ce=e([r("esri.rest.support.PolygonBarrier")],Ie);const De=Ie;var Fe;let Ae=Fe=class extends o{constructor(e){super(e),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null}readCosts(e,t){return Se(t.attributes,"Attr_")}static fromPortalJSON(e){var t,i;return new Fe({barrierType:p(e.attributes.BarrierType)?X.fromJSON(e.attributes.BarrierType):null,costs:p(e.attributes.Costs)?JSON.parse(e.attributes.Costs):null,geometry:n.fromJSON(e.geometry),name:null!=(t=e.attributes.Name)?t:null,objectId:e.attributes.__OBJECTID,popupTemplate:p(e.popupInfo)?u.fromJSON(e.popupInfo):null,scaleFactor:null!=(i=e.attributes.ScaleFactor)?i:null,symbol:p(e.symbol)?d(e.symbol):null})}clone(){return new Fe(f({barrierType:this.barrierType,costs:this.costs,geometry:this.geometry,name:this.name,objectId:this.objectId,popupTemplate:this.popupTemplate,scaleFactor:this.scaleFactor,symbol:this.symbol}))}toPortalJSON(){return{geometry:p(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:m(this.objectId),BarrierType:p(this.barrierType)?X.toJSON(this.barrierType):null,Costs:p(this.costs)?JSON.stringify(this.costs):null,Name:this.name,ScaleFactor:this.scaleFactor},symbol:p(this.symbol)?this.symbol.toJSON():null,popupInfo:p(this.popupTemplate)?this.popupTemplate.toJSON():null}}};Ae.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],Ae.popupInfo={title:"Line Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},e([t({type:X.apiValues,json:{read:{source:"attributes.BarrierType",reader:X.read}}})],Ae.prototype,"barrierType",void 0),e([t()],Ae.prototype,"costs",void 0),e([b("costs",["attributes"])],Ae.prototype,"readCosts",null),e([t({type:n,json:{write:!0}})],Ae.prototype,"geometry",void 0),e([t({json:{name:"attributes.Name",write:!0}})],Ae.prototype,"name",void 0),e([t({json:{name:"attributes.ObjectID",write:!0}})],Ae.prototype,"objectId",void 0),e([t({type:u,json:{read:!1}})],Ae.prototype,"popupTemplate",void 0),e([t({json:{read:!1}})],Ae.prototype,"scaleFactor",void 0),e([t({types:i,json:{read:!1}})],Ae.prototype,"symbol",void 0),Ae=Fe=e([r("esri.rest.support.PolylineBarrier")],Ae);const Be=Ae;let je=class extends o{constructor(e){super(e),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}};e([t({type:[String],json:{read:{source:"accumulateAttributeNames"},write:{target:"accumulateAttributeNames"}}})],je.prototype,"accumulateAttributes",void 0),e([t({type:String,json:{write:!0}})],je.prototype,"directionsLanguage",void 0),e([t({type:Boolean,json:{write:!0}})],je.prototype,"findBestSequence",void 0),e([t({type:Boolean,json:{write:!0}})],je.prototype,"preserveFirstStop",void 0),e([t({type:Boolean,json:{write:!0}})],je.prototype,"preserveLastStop",void 0),e([t({type:Boolean,json:{write:!0}})],je.prototype,"startTimeIsUTC",void 0),e([t({type:Boolean,json:{write:!0}})],je.prototype,"timeWindowsAreUTC",void 0),e([t({type:ie,json:{write:!0}})],je.prototype,"travelMode",void 0),je=e([r("esri.layers.support.RouteSettings")],je);const Ee=je;var xe;let Je=xe=class extends o{constructor(e){super(e),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.version="1.0.0"}readEndTime(e,t){return p(t.attributes.EndTimeUTC)?new Date(t.attributes.EndTimeUTC):null}readEndTimeOffset(e,t){return ge(t.attributes.EndTime,t.attributes.EndTimeUTC)}readStartTime(e,t){return p(t.attributes.StartTimeUTC)?new Date(t.attributes.StartTimeUTC):null}readStartTimeOffset(e,t){return ge(t.attributes.StartTime,t.attributes.StartTimeUTC)}readTotalCosts(e,t){return Se(t.attributes,"Total_")}readTotalViolations(e,t){return Se(t.attributes,"TotalViolation_")}readTotalWait(e,t){return Se(t.attributes,"TotalWait_")}static fromPortalJSON(e){var t,i,r,o,s,a;return new xe({analysisSettings:p(e.attributes.AnalysisSettings)?Ee.fromJSON(JSON.parse(e.attributes.AnalysisSettings)):null,endTime:p(e.attributes.EndTime)?new Date(e.attributes.EndTime):null,endTimeOffset:null!=(t=e.attributes.EndUTCOffset)?t:null,geometry:n.fromJSON(e.geometry),messages:p(e.attributes.Messages)?JSON.parse(e.attributes.Messages):null,name:e.attributes.RouteName,objectId:e.attributes.__OBJECTID,popupTemplate:p(e.popupInfo)?u.fromJSON(e.popupInfo):null,startTime:p(e.attributes.StartTime)?new Date(e.attributes.StartTime):null,startTimeOffset:null!=(i=e.attributes.StartUTCOffset)?i:null,symbol:p(e.symbol)?d(e.symbol):null,totalCosts:p(e.attributes.TotalCosts)?JSON.parse(e.attributes.TotalCosts):null,totalDistance:null!=(r=e.attributes.TotalMeters)?r:null,totalDuration:null!=(o=e.attributes.TotalMinutes)?o:null,totalLateDuration:null!=(s=e.attributes.TotalLateMinutes)?s:null,totalWaitDuration:null!=(a=e.attributes.TotalWaitMinutes)?a:null,version:e.attributes.Version})}toPortalJSON(){return{geometry:p(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:m(this.objectId),AnalysisSettings:p(this.analysisSettings)?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:p(this.endTime)?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:p(this.messages)?JSON.stringify(this.messages):null,RouteName:m(this.name),StartTime:p(this.startTime)?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:p(this.totalCosts)?JSON.stringify(this.totalCosts):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:m(this.version)},symbol:p(this.symbol)?this.symbol.toJSON():null,popupInfo:p(this.popupTemplate)?this.popupTemplate.toJSON():null}}};Je.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"EndUTCOffset",alias:"End Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Messages",alias:"Analysis Messages",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:1024,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"StartUTCOffset",alias:"Start Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Version",alias:"Version",type:"esriFieldTypeString",length:16,editable:!0,nullable:!0,visible:!0,domain:null}],Je.popupInfo={title:"Route Details",fieldInfos:[{fieldName:"RouteName",label:"Route Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TotalMinutes",label:"Total Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalMeters",label:"Total Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalLateMinutes",label:"Total Late Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalWaitMinutes",label:"Total Wait Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalCosts",label:"Total Costs",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"StartTime",label:"Start Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"StartUTCOffset",label:"Start Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"EndTime",label:"End Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"EndUTCOffset",label:"End Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Messages",label:"Analysis Messages",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"AnalysisSettings",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"Version",label:"Version",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},e([t({json:{read:!1}})],Je.prototype,"analysisSettings",void 0),e([t()],Je.prototype,"endTime",void 0),e([b("endTime",["attributes.EndTimeUTC"])],Je.prototype,"readEndTime",null),e([t()],Je.prototype,"endTimeOffset",void 0),e([b("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],Je.prototype,"readEndTimeOffset",null),e([t({json:{read:{source:"attributes.FirstStopID"}}})],Je.prototype,"firstStopId",void 0),e([t({type:n})],Je.prototype,"geometry",void 0),e([t({json:{read:{source:"attributes.LastStopID"}}})],Je.prototype,"lastStopId",void 0),e([t({json:{read:!1}})],Je.prototype,"messages",void 0),e([t({json:{read:{source:"attributes.Name"}}})],Je.prototype,"name",void 0),e([t({json:{read:{source:"attributes.ObjectID"}}})],Je.prototype,"objectId",void 0),e([t({type:u,json:{read:!1}})],Je.prototype,"popupTemplate",void 0),e([t()],Je.prototype,"startTime",void 0),e([b("startTime",["attributes.StartTimeUTC"])],Je.prototype,"readStartTime",null),e([t()],Je.prototype,"startTimeOffset",void 0),e([b("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],Je.prototype,"readStartTimeOffset",null),e([t({json:{read:{source:"attributes.StopCount"}}})],Je.prototype,"stopCount",void 0),e([t({types:i,json:{read:!1}})],Je.prototype,"symbol",void 0),e([t()],Je.prototype,"totalCosts",void 0),e([b("totalCosts",["attributes"])],Je.prototype,"readTotalCosts",null),e([t({json:{read:!1}})],Je.prototype,"totalDistance",void 0),e([t({json:{read:!1}})],Je.prototype,"totalDuration",void 0),e([t({json:{read:!1}})],Je.prototype,"totalLateDuration",void 0),e([t()],Je.prototype,"totalViolations",void 0),e([b("totalViolations",["attributes"])],Je.prototype,"readTotalViolations",null),e([t()],Je.prototype,"totalWait",void 0),e([b("totalWait",["attributes"])],Je.prototype,"readTotalWait",null),e([t({json:{read:!1}})],Je.prototype,"totalWaitDuration",void 0),e([t({json:{read:!1}})],Je.prototype,"version",void 0),Je=xe=e([r("esri.rest.support.RouteInfo")],Je);const Pe=Je,Le={type:String,json:{read:{source:"token"},write:{target:"token"}}};var Me;let _e=Me=class extends o{constructor(e){super(e),this.accumulateAttributes=null,this.apiKey=null,this.attributeParameterValues=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsOutputType=null,this.directionsStyleName=null,this.directionsTimeAttribute=null,this.findBestSequence=null,this.ignoreInvalidLocations=null,this.impedanceAttribute=null,this.outputGeometryPrecision=null,this.outputGeometryPrecisionUnits=null,this.outputLines="true-shape",this.outSpatialReference=null,this.pointBarriers=null,this.polygonBarriers=null,this.polylineBarriers=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.restrictionAttributes=null,this.restrictUTurns=null,this.returnBarriers=!1,this.returnDirections=!1,this.returnPolygonBarriers=!1,this.returnPolylineBarriers=!1,this.returnRoutes=!0,this.returnStops=!1,this.returnZ=!0,this.startTime=null,this.startTimeIsUTC=!0,this.stops=null,this.timeWindowsAreUTC=null,this.travelMode=null,this.useHierarchy=null,this.useTimeWindows=null}static from(e){return g(Me,e)}writePointBarriers(e,t,i){this._writeNetworkFeatures(e,t,i)}writePolygonBarrier(e,t,i){this._writeNetworkFeatures(e,t,i)}writePolylineBarrier(e,t,i){this._writeNetworkFeatures(e,t,i)}readStartTime(e,t){return null!=t.startTime?new Date(t.startTime):null}writeStartTime(e,t){t.startTime=e?e.getTime():null}writeStops(e,t,i){this._writeNetworkFeatures(e,t,i)}clone(){return new Me(f({accumulateAttributes:this.accumulateAttributes,apiKey:this.apiKey,attributeParameterValues:this.attributeParameterValues,directionsLanguage:this.directionsLanguage,directionsLengthUnits:this.directionsLengthUnits,directionsOutputType:this.directionsOutputType,directionsStyleName:this.directionsStyleName,directionsTimeAttribute:this.directionsTimeAttribute,findBestSequence:this.findBestSequence,ignoreInvalidLocations:this.ignoreInvalidLocations,impedanceAttribute:this.impedanceAttribute,outputGeometryPrecision:this.outputGeometryPrecision,outputGeometryPrecisionUnits:this.outputGeometryPrecisionUnits,outputLines:this.outputLines,outSpatialReference:this.outSpatialReference,pointBarriers:this.pointBarriers,polygonBarriers:this.polygonBarriers,polylineBarriers:this.polylineBarriers,preserveFirstStop:this.preserveFirstStop,preserveLastStop:this.preserveLastStop,restrictionAttributes:this.restrictionAttributes,restrictUTurns:this.restrictUTurns,returnBarriers:this.returnBarriers,returnDirections:this.returnDirections,returnPolygonBarriers:this.returnPolygonBarriers,returnPolylineBarriers:this.returnPolylineBarriers,returnRoutes:this.returnRoutes,returnStops:this.returnStops,returnZ:this.returnZ,startTime:this.startTime,startTimeIsUTC:this.startTimeIsUTC,stops:this.stops,timeWindowsAreUTC:this.timeWindowsAreUTC,travelMode:this.travelMode,useHierarchy:this.useHierarchy,useTimeWindows:this.useTimeWindows}))}_writeNetworkFeatures(e,t,i){t[i]=w.isCollection(e)?{features:e.toArray().map((e=>e.toJSON()))}:e.toJSON()}};e([t({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],_e.prototype,"accumulateAttributes",void 0),e([t(Le)],_e.prototype,"apiKey",void 0),e([t({json:{write:!0}})],_e.prototype,"attributeParameterValues",void 0),e([t({type:String,json:{write:!0}})],_e.prototype,"directionsLanguage",void 0),e([T(re)],_e.prototype,"directionsLengthUnits",void 0),e([T(oe)],_e.prototype,"directionsOutputType",void 0),e([t({type:String,json:{write:!0}})],_e.prototype,"directionsStyleName",void 0),e([t({type:String,json:{write:!0}})],_e.prototype,"directionsTimeAttribute",void 0),e([t({json:{write:!0}})],_e.prototype,"findBestSequence",void 0),e([t({json:{write:!0}})],_e.prototype,"ignoreInvalidLocations",void 0),e([t({type:String,json:{read:{source:"impedanceAttributeName"},write:{target:"impedanceAttributeName"}}})],_e.prototype,"impedanceAttribute",void 0),e([t({type:Number,json:{write:!0}})],_e.prototype,"outputGeometryPrecision",void 0),e([T(se)],_e.prototype,"outputGeometryPrecisionUnits",void 0),e([T(ae)],_e.prototype,"outputLines",void 0),e([t({type:S,json:{write:!0}})],_e.prototype,"outSpatialReference",void 0),e([t({json:{write:!0}})],_e.prototype,"pointBarriers",void 0),e([h("pointBarriers")],_e.prototype,"writePointBarriers",null),e([t({json:{write:!0}})],_e.prototype,"polygonBarriers",void 0),e([h("polygonBarriers")],_e.prototype,"writePolygonBarrier",null),e([t({json:{write:!0}})],_e.prototype,"polylineBarriers",void 0),e([h("polylineBarriers")],_e.prototype,"writePolylineBarrier",null),e([t({json:{write:!0}})],_e.prototype,"preserveFirstStop",void 0),e([t({json:{write:!0}})],_e.prototype,"preserveLastStop",void 0),e([t({type:[String],json:{write:!0}})],_e.prototype,"restrictionAttributes",void 0),e([T(le)],_e.prototype,"restrictUTurns",void 0),e([t({type:Boolean,json:{write:!0}})],_e.prototype,"returnBarriers",void 0),e([t({type:Boolean,json:{write:!0}})],_e.prototype,"returnDirections",void 0),e([t({type:Boolean,json:{write:!0}})],_e.prototype,"returnPolygonBarriers",void 0),e([t({type:Boolean,json:{write:!0}})],_e.prototype,"returnPolylineBarriers",void 0),e([t({type:Boolean,json:{write:!0}})],_e.prototype,"returnRoutes",void 0),e([t({type:Boolean,json:{write:!0}})],_e.prototype,"returnStops",void 0),e([t({type:Boolean,json:{write:!0}})],_e.prototype,"returnZ",void 0),e([t({type:Date,json:{type:Number,write:!0}})],_e.prototype,"startTime",void 0),e([b("startTime")],_e.prototype,"readStartTime",null),e([h("startTime")],_e.prototype,"writeStartTime",null),e([t({type:Boolean,json:{write:!0}})],_e.prototype,"startTimeIsUTC",void 0),e([t({json:{write:!0}})],_e.prototype,"stops",void 0),e([h("stops")],_e.prototype,"writeStops",null),e([t({json:{write:!0}})],_e.prototype,"timeWindowsAreUTC",void 0),e([t({type:ie,json:{write:!0}})],_e.prototype,"travelMode",void 0),e([t({type:Boolean,json:{write:!0}})],_e.prototype,"useHierarchy",void 0),e([t({type:Boolean,json:{write:!0}})],_e.prototype,"useTimeWindows",void 0),_e=Me=e([r("esri.rest.support.RouteParameters")],_e);const We=_e;var Ue;let Ve=Ue=class extends o{constructor(e){super(e),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(e,t){return ge(t.attributes.ArriveTime,t.attributes.ArriveTimeUTC)}readCumulativeCosts(e,t){return Se(t.attributes,"Cumul_")}readDepartTimeOffset(e,t){return ge(t.attributes.DepartTime,t.attributes.DepartTimeUTC)}readServiceCosts(e,t){return Se(t.attributes,"Attr_")}writeServiceCosts(e,t){if(!c(e)){t.attributes||(t.attributes={});for(const i in e)t.attributes[`Attr_${i}`]=e[i]}}writeTimeWindowEnd(e,t){c(e)||(t.attributes||(t.attributes={}),t.attributes.TimeWindowEnd=e.getTime())}writeTimeWindowStart(e,t){c(e)||(t.attributes||(t.attributes={}),t.attributes.TimeWindowStart=e.getTime())}readViolations(e,t){return Se(t.attributes,"Violation_")}readWait(e,t){return Se(t.attributes,"Wait_")}static fromPortalJSON(e){var t,i,r,o,s,a,l,n,m,b;return new Ue({arriveCurbApproach:p(e.attributes.ArrivalCurbApproach)?$.fromJSON(e.attributes.ArrivalCurbApproach):null,arriveTime:p(e.attributes.ArrivalTime)?new Date(e.attributes.ArrivalTime):null,arriveTimeOffset:e.attributes.ArrivalUTCOffset,cumulativeCosts:p(e.attributes.CumulativeCosts)?JSON.parse(e.attributes.CumulativeCosts):null,cumulativeDistance:null!=(t=e.attributes.CumulativeMeters)?t:null,cumulativeDuration:null!=(i=e.attributes.CumulativeMinutes)?i:null,curbApproach:p(e.attributes.CurbApproach)?$.fromJSON(e.attributes.CurbApproach):null,departCurbApproach:p(e.attributes.DepartureCurbApproach)?$.fromJSON(e.attributes.DepartureCurbApproach):null,departTime:p(e.attributes.DepartureTime)?new Date(e.attributes.DepartureTime):null,departTimeOffset:null!=(r=e.attributes.DepartureUTCOffset)?r:null,geometry:y.fromJSON(e.geometry),lateDuration:null!=(o=e.attributes.LateMinutes)?o:null,locationType:p(e.attributes.LocationType)?ne.fromJSON(e.attributes.LocationType):null,name:e.attributes.Name,objectId:e.attributes.__OBJECTID,popupTemplate:p(e.popupInfo)?u.fromJSON(e.popupInfo):null,routeName:e.attributes.RouteName,sequence:null!=(s=e.attributes.Sequence)?s:null,serviceCosts:p(e.attributes.ServiceCosts)?JSON.parse(e.attributes.ServiceCosts):null,serviceDistance:null!=(a=e.attributes.ServiceMeters)?a:null,serviceDuration:null!=(l=e.attributes.ServiceMinutes)?l:null,status:p(e.attributes.Status)?te.fromJSON(e.attributes.Status):null,symbol:p(e.symbol)?d(e.symbol):null,timeWindowEnd:p(e.attributes.TimeWindowEnd)?new Date(e.attributes.TimeWindowEnd):null,timeWindowEndOffset:null!=(n=e.attributes.TimeWindowEndUTCOffset)?n:null,timeWindowStart:p(e.attributes.TimeWindowStart)?new Date(e.attributes.TimeWindowStart):null,timeWindowStartOffset:null!=(m=e.attributes.TimeWindowStartUTCOffset)?m:null,waitDuration:null!=(b=e.attributes.WaitMinutes)?b:null})}clone(){return new Ue(f({arriveCurbApproach:this.arriveCurbApproach,arriveTime:this.arriveTime,arriveTimeOffset:this.arriveTimeOffset,bearing:this.bearing,bearingTol:this.bearingTol,cumulativeCosts:this.cumulativeCosts,cumulativeDistance:this.cumulativeDistance,cumulativeTime:this.cumulativeDuration,curbApproach:this.curbApproach,departCurbApproach:this.departCurbApproach,departTime:this.departTime,departTimeOffset:this.departTimeOffset,distanceToNetworkInMeters:this.distanceToNetworkInMeters,geometry:this.geometry,lateDuration:this.lateDuration,locationType:this.locationType,name:this.name,navLatency:this.navLatency,objectId:this.objectId,popupTemplate:this.popupTemplate,posAlong:this.posAlong,routeName:this.routeName,serviceCosts:this.serviceCosts,serviceDistance:this.serviceDistance,serviceDuration:this.serviceDuration,sequence:this.sequence,sideOfEdge:this.sideOfEdge,snapX:this.snapX,snapY:this.snapY,snapZ:this.snapZ,sourceId:this.sourceId,sourceOid:this.sourceOid,status:this.status,symbol:this.symbol,timeWindowEnd:this.timeWindowEnd,timeWindowEndOffset:this.timeWindowEndOffset,timeWindowStart:this.timeWindowStart,timeWindowStartOffset:this.timeWindowStartOffset,waitDuration:this.waitDuration}))}toPortalJSON(){var e,t;return{geometry:p(this.geometry)?this.geometry.toJSON():null,attributes:{__OBJECTID:m(this.objectId),ArrivalCurbApproach:p(this.arriveCurbApproach)?$.toJSON(this.arriveCurbApproach):null,ArrivalTime:p(this.arriveTime)?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:p(this.cumulativeCosts)?JSON.stringify(this.cumulativeCosts):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:p(this.curbApproach)?$.toJSON(this.curbApproach):null,DepartureCurbApproach:p(this.departCurbApproach)?$.toJSON(this.departCurbApproach):null,DepartureTime:p(this.departTime)?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:p(this.locationType)?ne.toJSON(this.locationType):null,Name:m(this.name),RouteName:m(this.routeName),Sequence:this.sequence,ServiceCosts:p(this.serviceCosts)?JSON.stringify(this.serviceCosts):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:p(this.status)?te.toJSON(this.status):null,TimeWindowEnd:p(this.timeWindowEnd)?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:null!=(e=this.timeWindowEndOffset)?e:this.arriveTimeOffset,TimeWindowStart:p(this.timeWindowStart)?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:null!=(t=this.timeWindowEndOffset)?t:this.arriveTimeOffset,WaitMinutes:this.waitDuration},symbol:p(this.symbol)?this.symbol.toJSON():null,popupInfo:p(this.popupTemplate)?this.popupTemplate.toJSON():null}}};Ve.fields=[{name:"__OBJECTID",alias:"OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Arrival Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"DepartureUTCOffset",alias:"Departure Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNALocationType",codedValues:[{name:"Stop",code:0},{name:"Waypoint",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowEndUTCOffset",alias:"Time Window End: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"WaitMinutes",alias:"Minutes Early",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1}],Ve.popupInfo={title:"{Name}",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"RouteName",label:"Route Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Arrival Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Arrival Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureTime",label:"Departure Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"DepartureUTCOffset",label:"Departure Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CurbApproach",label:"Curb Approach",isEditable:!0,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalCurbApproach",label:"Arrival Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureCurbApproach",label:"Departure Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Status",label:"Status",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"LocationType",label:"Location Type",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowStart",label:"Time Window Start",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowStartUTCOffset",label:"Time Window Start: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowEnd",label:"Time Window End",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowEndUTCOffset",label:"Time Window End: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMinutes",label:"Service Minutes",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMeters",label:"Service Meters",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceCosts",label:"Service Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"CumulativeMinutes",label:"Cumulative Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeMeters",label:"Cumulative Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeCosts",label:"Cumulative Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"LateMinutes",label:"Minutes Late",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"WaitMinutes",label:"Minutes Early",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},e([t({type:$.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:$.read}}})],Ve.prototype,"arriveCurbApproach",void 0),e([t({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],Ve.prototype,"arriveTime",void 0),e([t()],Ve.prototype,"arriveTimeOffset",void 0),e([b("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],Ve.prototype,"readArriveTimeOffset",null),e([t({json:{name:"attributes.Bearing",read:!1,write:!0}})],Ve.prototype,"bearing",void 0),e([t({json:{name:"attributes.BearingTol",read:!1,write:!0}})],Ve.prototype,"bearingTol",void 0),e([t()],Ve.prototype,"cumulativeCosts",void 0),e([b("cumulativeCosts",["attributes"])],Ve.prototype,"readCumulativeCosts",null),e([t({json:{read:!1}})],Ve.prototype,"cumulativeDistance",void 0),e([t({json:{read:!1}})],Ve.prototype,"cumulativeDuration",void 0),e([t({type:$.apiValues,json:{name:"attributes.CurbApproach",read:{reader:$.read},write:{writer:$.write}}})],Ve.prototype,"curbApproach",void 0),e([t({type:$.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:$.read}}})],Ve.prototype,"departCurbApproach",void 0),e([t({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],Ve.prototype,"departTime",void 0),e([t()],Ve.prototype,"departTimeOffset",void 0),e([b("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],Ve.prototype,"readDepartTimeOffset",null),e([t({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],Ve.prototype,"distanceToNetworkInMeters",void 0),e([t({type:y,json:{write:!0}})],Ve.prototype,"geometry",void 0),e([t({json:{name:"attributes.LateMinutes",read:!1}})],Ve.prototype,"lateDuration",void 0),e([t({type:ne.apiValues,json:{name:"attributes.LocationType",read:{reader:ne.read},write:{writer:ne.write}}})],Ve.prototype,"locationType",void 0),e([t({json:{name:"attributes.Name",write:!0}})],Ve.prototype,"name",void 0),e([t({json:{read:{source:"attributes.NavLatency"}}})],Ve.prototype,"navLatency",void 0),e([t({json:{name:"attributes.ObjectID",write:!0}})],Ve.prototype,"objectId",void 0),e([t({type:u,json:{read:!1}})],Ve.prototype,"popupTemplate",void 0),e([t({json:{read:{source:"attributes.PosAlong"}}})],Ve.prototype,"posAlong",void 0),e([t({json:{name:"attributes.RouteName",write:!0}})],Ve.prototype,"routeName",void 0),e([t()],Ve.prototype,"serviceCosts",void 0),e([b("serviceCosts",["attributes"])],Ve.prototype,"readServiceCosts",null),e([h("serviceCosts")],Ve.prototype,"writeServiceCosts",null),e([t({json:{read:!1}})],Ve.prototype,"serviceDistance",void 0),e([t({json:{read:!1}})],Ve.prototype,"serviceDuration",void 0),e([t({json:{name:"attributes.Sequence",write:!0}})],Ve.prototype,"sequence",void 0),e([t({type:ee.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:ee.read}}})],Ve.prototype,"sideOfEdge",void 0),e([t({json:{read:{source:"attributes.SnapX"}}})],Ve.prototype,"snapX",void 0),e([t({json:{read:{source:"attributes.SnapY"}}})],Ve.prototype,"snapY",void 0),e([t({json:{read:{source:"attributes.SnapZ"}}})],Ve.prototype,"snapZ",void 0),e([t({json:{read:{source:"attributes.SourceID"}}})],Ve.prototype,"sourceId",void 0),e([t({json:{read:{source:"attributes.SourceOID"}}})],Ve.prototype,"sourceOid",void 0),e([t({type:te.apiValues,json:{read:{source:"attributes.Status",reader:te.read}}})],Ve.prototype,"status",void 0),e([t({types:i,json:{read:!1}})],Ve.prototype,"symbol",void 0),e([t({type:Date,json:{name:"attributes.TimeWindowEnd"}})],Ve.prototype,"timeWindowEnd",void 0),e([h("timeWindowEnd")],Ve.prototype,"writeTimeWindowEnd",null),e([t({json:{read:!1}})],Ve.prototype,"timeWindowEndOffset",void 0),e([t({type:Date,json:{name:"attributes.TimeWindowStart"}})],Ve.prototype,"timeWindowStart",void 0),e([h("timeWindowStart")],Ve.prototype,"writeTimeWindowStart",null),e([t({json:{read:!1}})],Ve.prototype,"timeWindowStartOffset",void 0),e([t()],Ve.prototype,"violations",void 0),e([b("violations",["attributes"])],Ve.prototype,"readViolations",null),e([t({json:{read:!1}})],Ve.prototype,"waitDuration",void 0),e([t()],Ve.prototype,"wait",void 0),e([b("wait",["attributes"])],Ve.prototype,"readWait",null),Ve=Ue=e([r("esri.rest.support.Stop")],Ve);const Re=Ve;function ke(e){return e.length?e:null}function qe(e){return"layers"in e}async function Ge(e){const t=S.WGS84;return await z(e.spatialReference,t),K(e,t)}function ze(e,t){switch(t){case"seconds":return e/60;case"hours":return 60*e;case"days":return 60*e*24;default:return e}}function Ke(e,t){return"decimal-degrees"===t||"points"===t||"unknown"===t?e:G(e,t,"meters")}const Ze=w.ofType(he),He=w.ofType(Te),Ye=w.ofType(Oe),Xe=w.ofType(De),$e=w.ofType(Be),Qe=w.ofType(Re),et=N.getLogger("esri.layers.RouteLayer");let tt=class extends(O(C(I(D(F(A(B))))))){constructor(...e){super(...e),this._featureCollection=null,this._type="Feature Collection",this.defaultSymbols=new be,this.directionLines=null,this.directionPoints=null,this.featureCollectionType="route",this.legendEnabled=!1,this.maxScale=0,this.minScale=0,this.pointBarriers=new Ye,this.polygonBarriers=new Xe,this.polylineBarriers=new $e,this.routeInfo=null,this.spatialReference=S.WGS84,this.stops=new Qe,this.type="route",this.handles.add(j((()=>this.stops.toArray()),(()=>{c(this.routeInfo)&&this._setStopSymbol(this.stops)}),{sync:!0}))}writeFeatureCollectionWebmap(e,t,i,r){const o=[this._writePolygonBarriers(),this._writePolylineBarriers(),this._writePointBarriers(),this._writeRouteInfo(),this._writeDirectionLines(),this._writeDirectionPoints(),this._writeStops()].filter((e=>!!e)),s=o.map(((e,t)=>t)),a="web-map"===r.origin?"featureCollection.layers":"layers";E(a,o,t),t.opacity=this.opacity,t.visibility=this.visible,t.visibleLayers=s}readDirectionLines(e,t){return this._getNetworkFeatures(t,"DirectionLines",(e=>he.fromPortalJSON(e)))}readDirectionPoints(e,t){return this._getNetworkFeatures(t,"DirectionPoints",(e=>Te.fromPortalJSON(e)))}get fullExtent(){if(p(this.routeInfo)&&p(this.routeInfo.geometry))return this.routeInfo.geometry.extent;if(this.stops.length>1){const{spatialReference:e}=this.stops[0],t=new x({spatialReference:e}),i=this.stops.toArray().map((e=>e.geometry));for(const e of i)p(e)&&t.addPoint(e);return t.extent}return new J({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:S.WGS84})}readMaxScale(e,t){var i;const r=(qe(t)?t.layers:t.featureCollection.layers).find((e=>p(e.layerDefinition.maxScale)));return null!=(i=null==r?void 0:r.layerDefinition.maxScale)?i:0}readMinScale(e,t){var i;const r=(qe(t)?t.layers:t.featureCollection.layers).find((e=>p(e.layerDefinition.minScale)));return null!=(i=null==r?void 0:r.layerDefinition.minScale)?i:0}readPointBarriers(e,t){return this._getNetworkFeatures(t,"Barriers",(e=>Oe.fromPortalJSON(e)))}readPolygonBarriers(e,t){return this._getNetworkFeatures(t,"PolygonBarriers",(e=>De.fromPortalJSON(e)))}readPolylineBarriers(e,t){return this._getNetworkFeatures(t,"PolylineBarriers",(e=>Be.fromPortalJSON(e)))}readRouteInfo(e,t){const i=this._getNetworkFeatures(t,"RouteInfo",(e=>Pe.fromPortalJSON(e)));return i.length>0?i.getItemAt(0):null}readSpatialReference(e,t){var i,r;const o=qe(t)?t.layers:t.featureCollection.layers;if(!o.length)return S.WGS84;const{layerDefinition:s}=o[0],a=null!=(i=null!=(r=s.spatialReference)?r:s.extent.spatialReference)?i:P;return S.fromJSON(a)}readStops(e,t){return this._getNetworkFeatures(t,"Stops",(e=>Re.fromPortalJSON(e)),(e=>this._setStopSymbol(e)))}get title(){return p(this.routeInfo)&&p(this.routeInfo.name)?this.routeInfo.name:"Route"}set title(e){e?this._override("title",e):this._clearOverride("title")}get url(){return L.routeServiceUrl}set url(e){null!=e?this._set("url",M(e,et)):this._set("url",L.routeServiceUrl)}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}removeAll(){p(this.directionLines)&&(this.directionLines.removeAll(),this._set("directionLines",null)),p(this.directionPoints)&&(this.directionPoints.removeAll(),this._set("directionPoints",null)),p(this.routeInfo)&&this._set("routeInfo",null),this.pointBarriers.removeAll(),this.polygonBarriers.removeAll(),this.polylineBarriers.removeAll(),this.stops.removeAll()}async save(){await this.load();const{fullExtent:e,portalItem:t}=this;if(!t)throw new _("routelayer:portal-item-not-set","save() requires to the layer to have a portal item");if(!t.id)throw new _("routelayer:portal-item-not-saved","Please use saveAs() first to save the routelayer");if("Feature Collection"!==t.type)throw new _("routelayer:portal-item-wrong-type",'Portal item needs to have type "Feature Collection"');if(c(this.routeInfo))throw new _("routelayer:route-unsolved","save() requires a solved route");const{portal:i}=t;if(await i._signIn(),i.user||await t.reload(),i.user.username!==t.owner)throw new _("routelayer:not-portal-item-owner","You can only overwrite your portal items");const{itemUrl:r}=t,o={messages:[],origin:"portal-item",portal:i,url:r&&W(r),writtenProperties:[]},s=this.write(null,o);return t.extent=await Ge(e),t.title=this.title,await t.update({data:s}),t}async saveAs(e,t={}){if(await this.load(),c(this.routeInfo))throw new _("routelayer:route-unsolved","saveAs() requires a solved route");const i=U.from(e).clone();null!=i.extent||(i.extent=await Ge(this.fullExtent)),i.id=null,null!=i.portal||(i.portal=V.getDefault()),null!=i.title||(i.title=this.title),i.type="Feature Collection",i.typeKeywords=["Data","Feature Collection","Multilayer","Route Layer"];const{portal:r}=i,o={messages:[],origin:"portal-item",portal:r,url:null,writtenProperties:[]};await r._signIn();const s=null==t?void 0:t.folder,a=this.write(null,o);return await r.user.addItem({item:i,folder:s,data:a}),this.portalItem=i,Z(o),o.portalItem=i,i}async solve(e,t){var i,r,o,s,a,l;const n=null!=(i=null==e?void 0:e.stops)?i:this.stops,u=null!=(r=null==e?void 0:e.pointBarriers)?r:ke(this.pointBarriers),d=null!=(o=null==e?void 0:e.polylineBarriers)?o:ke(this.polylineBarriers),m=null!=(s=null==e?void 0:e.polygonBarriers)?s:ke(this.polygonBarriers);if(c(n))throw new _("routelayer:undefined-stops","the route layer must have stops defined in the route parameters.");if((function(e){return"esri.rest.support.FeatureSet"===e.declaredClass}(n)||function(e){return"esri.rest.support.NetworkFeatureSet"===e.declaredClass}(n))&&n.features.length<2||w.isCollection(n)&&n.length<2)throw new _("routelayer:insufficent-stops","the route layer must have two or more stops to solve a route.");const b=await ue(this.url,null==e?void 0:e.apiKey,t),{defaultTravelMode:y,supportedTravelModes:h}=b,f=h.find((e=>e.id===y)),v=null!=(a=null==e?void 0:e.travelMode)?a:f,T=null!=(l=null==e?void 0:e.accumulateAttributes)?l:[];p(v)&&T.push(v.distanceAttributeName);const S={startTime:new Date},g={accumulateAttributes:T,directionsOutputType:"featuresets",ignoreInvalidLocations:!0,pointBarriers:u,polylineBarriers:d,polygonBarriers:m,preserveFirstStop:!0,preserveLastStop:!0,returnBarriers:!!u,returnDirections:!0,returnPolygonBarriers:!!m,returnPolylineBarriers:!!d,returnRoutes:!0,returnStops:!0,stops:n},N=e?We.from(e):new We;for(const e in S)null==N[e]&&(N[e]=S[e]);N.set(g);const O=await de(this.url,N,t),C=this._toRouteLayerSolution(O);return this._isOverridden("title")||(this.title=R(C.routeInfo.name,"Route")),function(e,t,i){var r,o,s,a,l,n,u,d,m,b,y;const{impedance:h,networkDataset:f,supportedTravelModes:v,defaultTravelMode:T}=t,S=f.networkAttributes.filter((e=>"esriNAUTCost"===e.usageType)),g=v.find((e=>e.id===T)),w=null!=(r=i.travelMode)?r:g;if(c(w))return void et.warn("route-layer:missing-travel-mode","The routing service must have a default travel mode or one must be specified in the route parameter.");const{timeAttributeName:N,distanceAttributeName:O}=w,C=S.find((e=>e.name===N)),I=S.find((e=>e.name===O)),D=null!=(o=null!=(s=null==(a=i.travelMode)?void 0:a.impedanceAttributeName)?s:i.impedanceAttribute)?o:h,F=pe.fromJSON(null==C?void 0:C.units),A=re.fromJSON(null==I?void 0:I.units);if(!F||!A)throw new _("routelayer:unknown-impedance-units","the units of either the distance or time impedance are unknown");const B=null!=(l=i.directionsLanguage)?l:t.directionsLanguage,j=null!=(n=null!=(u=i.accumulateAttributes)?u:t.accumulateAttributeNames)?n:[],E=new Set(S.filter((({name:e})=>e===N||e===O||e===D||j.includes(e))).map((({name:e})=>e))),x=e=>{for(const t in e)E.has(t)||delete e[t]};for(const t of e.pointBarriers){var J;p(t.costs)&&(t.addedCost=null!=(J=t.costs[D])?J:0,x(t.costs))}for(const t of e.polygonBarriers){var P;p(t.costs)&&(t.scaleFactor=null!=(P=t.costs[D])?P:1,x(t.costs))}for(const t of e.polylineBarriers){var L;p(t.costs)&&(t.scaleFactor=null!=(L=t.costs[D])?L:1,x(t.costs))}const{routeInfo:M}=e,{findBestSequence:W,preserveFirstStop:U,preserveLastStop:V,startTimeIsUTC:R,timeWindowsAreUTC:k}=i;M.analysisSettings=new Ee({accumulateAttributes:j,directionsLanguage:B,findBestSequence:W,preserveFirstStop:U,preserveLastStop:V,startTimeIsUTC:R,timeWindowsAreUTC:k,travelMode:w}),M.totalDuration=ze(null!=(d=M.totalCosts[N])?d:0,F),M.totalDistance=Ke(null!=(m=M.totalCosts[O])?m:0,A),M.totalLateDuration=ze(null!=(b=M.totalViolations[N])?b:0,F),M.totalWaitDuration=ze(null!=(y=M.totalWait[N])?y:0,F),p(M.totalCosts)&&x(M.totalCosts),p(M.totalViolations)&&x(M.totalViolations),p(M.totalWait)&&x(M.totalWait);for(const t of e.stops){var q,G,z,K,Z,H;p(t.serviceCosts)&&(t.serviceDuration=ze(null!=(q=t.serviceCosts[N])?q:0,F),t.serviceDistance=Ke(null!=(G=t.serviceCosts[O])?G:0,A),x(t.serviceCosts)),p(t.cumulativeCosts)&&(t.cumulativeDuration=ze(null!=(z=t.cumulativeCosts[N])?z:0,F),t.cumulativeDistance=Ke(null!=(K=t.cumulativeCosts[O])?K:0,A),x(t.cumulativeCosts)),p(t.violations)&&(t.lateDuration=ze(null!=(Z=t.violations[N])?Z:0,F),x(t.violations)),p(t.wait)&&(t.waitDuration=ze(null!=(H=t.wait[N])?H:0,F),x(t.wait))}}(C,b,N),C}update(e){const{stops:t,directionLines:i,directionPoints:r,pointBarriers:o,polylineBarriers:s,polygonBarriers:a,routeInfo:l}=e;this.set({stops:t,pointBarriers:o,polylineBarriers:s,polygonBarriers:a}),this._set("directionLines",i),this._set("directionPoints",r),this._set("routeInfo",l)}_getLayerDefinition(){return{capabilities:"Query,Update,Editing",extent:this.fullExtent.toJSON(),hasM:!1,hasZ:!1,maxScale:this.maxScale,minScale:this.minScale,objectIdField:"__OBJECTID",spatialReference:this.spatialReference.toJSON(),type:"Feature Layer",typeIdField:""}}_getNetworkFeatures(e,t,i,r){const o=(qe(e)?e.layers:e.featureCollection.layers).find((e=>e.layerDefinition.name===t));if(c(o))return new w;const{layerDefinition:s,popupInfo:a,featureSet:l}=o,n=s.drawingInfo.renderer,{features:p}=l,d=n&&k(n),m=p.map((e=>{var r;const o=i(e),{attributes:s}=e,l=new q({attributes:s});return null!=o.symbol||(o.symbol=null!=(r=null==d?void 0:d.getSymbol(l))?r:this._getNetworkSymbol(t)),null!=o.popupTemplate||(o.popupTemplate=a&&u.fromJSON(a)),o}));return r&&m.some((e=>!e.symbol))&&r(m),new w(m)}_getNetworkSymbol(e){switch(e){case"Barriers":return this.defaultSymbols.pointBarriers;case"DirectionPoints":return this.defaultSymbols.directionPoints;case"DirectionLines":return this.defaultSymbols.directionLines;case"PolylineBarriers":return this.defaultSymbols.polylineBarriers;case"PolygonBarriers":return this.defaultSymbols.polygonBarriers;case"RouteInfo":return this.defaultSymbols.routeInfo;case"Stops":return null}}_setStopSymbol(e){if(!e||0===e.length)return;if(c(this.routeInfo)||1===e.length)return void e.forEach(((t,i)=>{switch(i){case 0:t.symbol=this.defaultSymbols.firstStop;break;case e.length-1:t.symbol=this.defaultSymbols.lastStop;break;default:t.symbol=this.defaultSymbols.middleStop}}));const t=e.map((e=>e.sequence)).filter((e=>p(e))),i=Math.min(...t),r=Math.max(...t);for(const t of e)t.sequence!==i?t.sequence!==r?"ok"===t.status||"not-located-on-closest"===t.status?"waypoint"!==t.locationType?"break"!==t.locationType?t.symbol=this.defaultSymbols.middleStop:t.symbol=this.defaultSymbols.breakStop:t.symbol=this.defaultSymbols.waypointStop:t.symbol=this.defaultSymbols.invalidStop:t.symbol=this.defaultSymbols.lastStop:t.symbol=this.defaultSymbols.firstStop}_toRouteLayerSolution(e){var t,i,r,o,s;const a=e.routeResults[0].stops.map((e=>Re.fromJSON(e.toJSON())));this._setStopSymbol(a);const l=new Qe(a),n=new Xe(null==(t=e.polygonBarriers)?void 0:t.map((e=>{const t=De.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polygonBarriers,t}))),u=new $e(null==(i=e.polylineBarriers)?void 0:i.map((e=>{const t=Be.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.polylineBarriers,t}))),p=new Ye(null==(r=e.pointBarriers)?void 0:r.map((e=>{const t=Oe.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.pointBarriers,t}))),d=Pe.fromJSON(e.routeResults[0].route.toJSON());d.symbol=this.defaultSymbols.routeInfo;const m=new He(null==(o=e.routeResults[0].directionPoints)?void 0:o.features.map((e=>{const t=Te.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionPoints,t})));return{directionLines:new Ze(null==(s=e.routeResults[0].directionLines)?void 0:s.features.map((e=>{const t=he.fromJSON(e.toJSON());return t.symbol=this.defaultSymbols.directionLines,t}))),directionPoints:m,pointBarriers:p,polygonBarriers:n,polylineBarriers:u,routeInfo:d,stops:l}}_writeDirectionLines(){return c(this.directionLines)||!this.directionLines.length?null:{featureSet:{features:this.directionLines.toArray().map((e=>e.toPortalJSON())),geometryType:"esriGeometryPolyline"},layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.directionLines.toJSON()}},fields:he.fields,geometryType:"esriGeometryPolyline",name:"DirectionLines",title:"Direction Lines"},popupInfo:he.popupInfo}}_writeDirectionPoints(){return c(this.directionPoints)||!this.directionPoints.length?null:{featureSet:{features:this.directionPoints.toArray().map((e=>e.toPortalJSON())),geometryType:"esriGeometryPoint"},layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.directionPoints.toJSON()}},fields:Te.fields,geometryType:"esriGeometryPoint",name:"DirectionPoints",title:"Direction Points"},popupInfo:Te.popupInfo}}_writePointBarriers(){return c(this.pointBarriers)||!this.pointBarriers.length?null:{featureSet:{features:this.pointBarriers.toArray().map((e=>e.toPortalJSON())),geometryType:"esriGeometryPoint"},layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.pointBarriers.toJSON()}},fields:Oe.fields,geometryType:"esriGeometryPoint",name:"Barrier",title:"Point Barrier"},popupInfo:Oe.popupInfo}}_writePolygonBarriers(){return c(this.polygonBarriers)||!this.polygonBarriers.length?null:{featureSet:{features:this.polygonBarriers.toArray().map((e=>e.toPortalJSON())),geometryType:"esriGeometryPolygon"},layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.polygonBarriers.toJSON()}},fields:De.fields,geometryType:"esriGeometryPolygon",name:"PolygonBarriers",title:"Polygon Barriers"},popupInfo:De.popupInfo}}_writePolylineBarriers(){return c(this.polylineBarriers)||!this.polylineBarriers.length?null:{featureSet:{features:this.polylineBarriers.toArray().map((e=>e.toPortalJSON())),geometryType:"esriGeometryPolyline"},layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.polylineBarriers.toJSON()}},fields:Be.fields,geometryType:"esriGeometryPolyline",name:"PolylineBarriers",title:"Line Barriers"},popupInfo:Be.popupInfo}}_writeRouteInfo(){return c(this.routeInfo)?null:{featureSet:{features:[this.routeInfo.toPortalJSON()],geometryType:"esriGeometryPolyline"},layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"simple",symbol:this.defaultSymbols.routeInfo.toJSON()}},fields:Pe.fields,geometryType:"esriGeometryPolyline",name:"RouteInfo",title:"Route Details"},popupInfo:Pe.popupInfo}}_writeStops(){return c(this.stops)||!this.stops.length?null:{featureSet:{features:this.stops.toArray().map((e=>e.toPortalJSON())),geometryType:"esriGeometryPoint"},layerDefinition:{...this._getLayerDefinition(),drawingInfo:{renderer:{type:"uniqueValue",field1:"Sequence",defaultSymbol:this.defaultSymbols.middleStop.toJSON(),uniqueValueInfos:[{value:"1",symbol:this.defaultSymbols.firstStop.toJSON(),label:"First Stop"},{value:`${this.stops.length}`,symbol:this.defaultSymbols.lastStop.toJSON(),label:"Last Stop"}]}},fields:Re.fields,geometryType:"esriGeometryPoint",name:"Stops",title:"Stops"},popupInfo:Re.popupInfo}}};e([t({readOnly:!0,json:{read:!1,origins:{"portal-item":{write:{allowNull:!0,ignoreOrigin:!0}},"web-map":{write:{overridePolicy(){return{allowNull:!0,ignoreOrigin:null==this.portalItem}}}}}}})],tt.prototype,"_featureCollection",void 0),e([h(["web-map","portal-item"],"_featureCollection")],tt.prototype,"writeFeatureCollectionWebmap",null),e([t({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{target:"type",overridePolicy(){return{ignoreOrigin:null!=this.portalItem}}}}}}})],tt.prototype,"_type",void 0),e([t({nonNullable:!0,type:be})],tt.prototype,"defaultSymbols",void 0),e([t({readOnly:!0})],tt.prototype,"directionLines",void 0),e([b(["web-map","portal-item"],"directionLines",["layers","featureCollection.layers"])],tt.prototype,"readDirectionLines",null),e([t({readOnly:!0})],tt.prototype,"directionPoints",void 0),e([b(["web-map","portal-item"],"directionPoints",["layers","featureCollection.layers"])],tt.prototype,"readDirectionPoints",null),e([t({readOnly:!0,json:{read:!1,origins:{"web-map":{write:{ignoreOrigin:!0}}}}})],tt.prototype,"featureCollectionType",void 0),e([t({readOnly:!0})],tt.prototype,"fullExtent",null),e([t({json:{origins:{"web-map":{name:"featureCollection.showLegend"}},write:!0}})],tt.prototype,"legendEnabled",void 0),e([t({type:["show","hide"]})],tt.prototype,"listMode",void 0),e([t({type:Number,nonNullable:!0,json:{write:!1}})],tt.prototype,"maxScale",void 0),e([b(["web-map","portal-item"],"maxScale",["layers","featureCollection.layers"])],tt.prototype,"readMaxScale",null),e([t({type:Number,nonNullable:!0,json:{write:!1}})],tt.prototype,"minScale",void 0),e([b(["web-map","portal-item"],"minScale",["layers","featureCollection.layers"])],tt.prototype,"readMinScale",null),e([t({type:["ArcGISFeatureLayer"],value:"ArcGISFeatureLayer"})],tt.prototype,"operationalLayerType",void 0),e([t({nonNullable:!0,type:w.ofType(Oe)})],tt.prototype,"pointBarriers",void 0),e([b(["web-map","portal-item"],"pointBarriers",["layers","featureCollection.layers"])],tt.prototype,"readPointBarriers",null),e([t({nonNullable:!0,type:w.ofType(De)})],tt.prototype,"polygonBarriers",void 0),e([b(["web-map","portal-item"],"polygonBarriers",["layers","featureCollection.layers"])],tt.prototype,"readPolygonBarriers",null),e([t({nonNullable:!0,type:w.ofType(Be)})],tt.prototype,"polylineBarriers",void 0),e([b(["web-map","portal-item"],"polylineBarriers",["layers","featureCollection.layers"])],tt.prototype,"readPolylineBarriers",null),e([t({readOnly:!0})],tt.prototype,"routeInfo",void 0),e([b(["web-map","portal-item"],"routeInfo",["layers","featureCollection.layers"])],tt.prototype,"readRouteInfo",null),e([t({type:S})],tt.prototype,"spatialReference",void 0),e([b(["web-map","portal-item"],"spatialReference",["layers","featureCollection.layers"])],tt.prototype,"readSpatialReference",null),e([t({nonNullable:!0,type:w.ofType(Re)})],tt.prototype,"stops",void 0),e([b(["web-map","portal-item"],"stops",["layers","featureCollection.layers"])],tt.prototype,"readStops",null),e([t()],tt.prototype,"title",null),e([t({readOnly:!0,json:{read:!1}})],tt.prototype,"type",void 0),e([t()],tt.prototype,"url",null),tt=e([r("esri.layers.RouteLayer")],tt);const it=tt;export{it as default};
