import{Z as e,_ as t,a0 as i,c8 as r,s,iH as o,i7 as a,iI as n,i8 as l,i9 as p,e7 as d,e8 as y,e9 as u,ea as c,iG as h,ee as m,aT as f,e as g,r as v,aU as b,iJ as w,jF as S,j9 as I,da as j,id as x,cV as T,C as R,iK as F,cp as O,ie as N,iL as P,ch as D,gK as L,iM as E,iN as _,iO as k,iA as J,gB as U,jJ as A,jK as G,ih as C,d8 as V,iQ as q,ig as z,e0 as K,iR as M,ed as W,jL as Q,jM as B,ii as H}from"../main.js";var Z;let X=Z=class extends r{constructor(){super(...arguments),this.age=null,this.ageReceived=null,this.displayCount=null,this.maxObservations=1}clone(){return new Z({age:this.age,ageReceived:this.ageReceived,displayCount:this.displayCount,maxObservations:this.maxObservations})}};e([t({type:Number,json:{write:!0}})],X.prototype,"age",void 0),e([t({type:Number,json:{write:!0}})],X.prototype,"ageReceived",void 0),e([t({type:Number,json:{write:!0}})],X.prototype,"displayCount",void 0),e([t({type:Number,json:{write:!0}})],X.prototype,"maxObservations",void 0),X=Z=e([i("esri.layers.support.PurgeOptions")],X);const Y=X,$=s.getLogger("esri.layers.StreamLayer"),ee=H();let te=class extends(o(a(n(l(p(d(y(u(c(h(m))))))))))){constructor(...e){super(...e),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureReduction=null,this.fields=null,this.fieldsIndex=null,this.geometryDefinition=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.maxReconnectionAttempts=0,this.maxReconnectionInterval=20,this.maxScale=0,this.minScale=0,this.objectIdField=null,this.operationalLayerType="ArcGISStreamLayer",this.popupEnabled=!0,this.popupTemplate=null,this.purgeOptions=new Y,this.screenSizePerspectiveEnabled=!0,this.sourceJSON=null,this.spatialReference=f.WGS84,this.type="stream",this.url=null,this.updateInterval=300,this.webSocketUrl=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){if(!("WebSocket"in globalThis))return this.addResolvingPromise(Promise.reject(new g("stream-layer:websocket-unsupported","WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))),Promise.resolve(this);const t=v(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Stream Service","Feed"]},e).catch(b).then((()=>this._fetchService(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){w(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,t,i){const r=(t=t.layerDefinition||t).drawingInfo&&t.drawingInfo.renderer||void 0;if(r){const e=S(r,t,i)||void 0;return e||$.error("Failed to create renderer",{rendererDefinition:t.drawingInfo.renderer,layer:this,context:i}),e}if(t.defaultSymbol)return t.types&&t.types.length?new I({defaultSymbol:ie(t.defaultSymbol,t,i),field:t.typeIdField,uniqueValueInfos:t.types.map((e=>({id:e.id,symbol:ie(e.symbol,e,i)})))}):new j({symbol:ie(t.defaultSymbol,t,i)})}createPopupTemplate(e){return x(this,e)}createQuery(){const e=new T;return e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1",e}getFieldDomain(e,t){if(!this.fields)return null;let i=null;return this.fields.some((t=>(t.name===e&&(i=t.domain),!!i))),i}getField(e){return this.fieldsIndex.get(e)}serviceSupportsSpatialReference(e){return!0}async _fetchService(e){var t;if(this.webSocketUrl){var i;if(null==(i=this.timeInfo)||!i.trackIdField)throw new g("stream-layer:missing-metadata","The stream layer trackIdField must be specified.");if(!this.objectIdField)throw new g("stream-layer:missing-metadata","The stream layer objectIdField must be specified.");if(!this.fields)throw new g("stream-layer:missing-metadata","The stream layer fields must be specified.");if(!this.geometryType)throw new g("stream-layer:missing-metadata","The stream layer geometryType must be specified.");this.url=this.webSocketUrl}else if(!this.sourceJSON){const{data:t}=await R(this.parsedUrl.path,{query:{f:"json",...this.customParameters,...this.parsedUrl.query},responseType:"json",signal:e});this.sourceJSON=t}return this.sourceJSON={...null!=(t=this.sourceJSON)?t:{},objectIdField:"__esri_stream_id__"},this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl}),w(this.renderer,this.fieldsIndex),F(this.timeInfo,this.fieldsIndex),O(this,{origin:"service"})}};e([t({type:String})],te.prototype,"copyright",void 0),e([t({readOnly:!0})],te.prototype,"defaultPopupTemplate",null),e([t({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],te.prototype,"definitionExpression",void 0),e([t({type:String})],te.prototype,"displayField",void 0),e([t({type:N})],te.prototype,"elevationInfo",void 0),e([t(P)],te.prototype,"featureReduction",void 0),e([t(ee.fields)],te.prototype,"fields",void 0),e([t(ee.fieldsIndex)],te.prototype,"fieldsIndex",void 0),e([t({type:D})],te.prototype,"geometryDefinition",void 0),e([t({type:L.apiValues,json:{read:{reader:L.read}}})],te.prototype,"geometryType",void 0),e([t(E)],te.prototype,"labelsVisible",void 0),e([t({type:[_],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:k},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],te.prototype,"labelingInfo",void 0),e([t(J)],te.prototype,"legendEnabled",void 0),e([t({type:["show","hide"]})],te.prototype,"listMode",void 0),e([t({type:U})],te.prototype,"maxReconnectionAttempts",void 0),e([t({type:U})],te.prototype,"maxReconnectionInterval",void 0),e([t(A)],te.prototype,"maxScale",void 0),e([t(G)],te.prototype,"minScale",void 0),e([t({type:String})],te.prototype,"objectIdField",void 0),e([t({value:"ArcGISStreamLayer",type:["ArcGISStreamLayer"]})],te.prototype,"operationalLayerType",void 0),e([t(C)],te.prototype,"popupEnabled",void 0),e([t({type:V,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],te.prototype,"popupTemplate",void 0),e([t({type:Y})],te.prototype,"purgeOptions",void 0),e([t({types:q,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{name:"layerDefinition.drawingInfo.renderer",types:z,write:!0}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],te.prototype,"renderer",null),e([K("service","renderer",["drawingInfo.renderer","defaultSymbol"]),K("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],te.prototype,"readRenderer",null),e([t(M)],te.prototype,"screenSizePerspectiveEnabled",void 0),e([t()],te.prototype,"sourceJSON",void 0),e([t({type:f,json:{origins:{service:{read:{source:"spatialReference"}}}}})],te.prototype,"spatialReference",void 0),e([t({json:{read:!1}})],te.prototype,"type",void 0),e([t(W)],te.prototype,"url",void 0),e([t({type:Number})],te.prototype,"updateInterval",void 0),e([t({type:String})],te.prototype,"webSocketUrl",void 0),te=e([i("esri.layers.StreamLayer")],te);const ie=Q({types:B}),re=te;export{re as default};
