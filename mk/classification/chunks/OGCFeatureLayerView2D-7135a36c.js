import{V as e,W as i,X as r,a}from"../main.js";import{Z as s}from"./FeatureLayerView2D-be86ce25.js";import"./clickToleranceUtils-2abebeb9.js";import"./definitions-53d29f17.js";import"./LayerView-b8428d5e.js";import"./Container-88b4e6ef.js";import"./mat4f32-b5b66fd7.js";import"./schemaUtils-21016580.js";import"./Utils-17e67075.js";import"./Texture-1324a35b.js";import"./MaterialKey-f4954520.js";import"./visualVariablesUtils-fa72e23c.js";import"./CIMSymbolHelper-53a8b831.js";import"./Rect-df6cbc83.js";import"./BidiEngine-2645f818.js";import"./MD5-8aa08108.js";import"./popupUtils-969bc6c0.js";import"./drapedUtils-43a11961.js";const t=s=>{let t=class extends s{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new a("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([r("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(s)){};l=e([r("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export{o as default};
