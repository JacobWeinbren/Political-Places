import{cU as e,c2 as i,c5 as s,d$ as t,e0 as r,F as a,bD as o,V as p,X as l}from"../main.js";import{l as n,d as h}from"./LayerView-54723408.js";import{i as m}from"./GraphicContainer-fe15e43d.js";import{o as c}from"./BaseGraphicContainer-64ea7f88.js";import"./Container-47d20019.js";import"./mat4f32-b5b66fd7.js";import"./Utils-a81a2f1e.js";import"./Texture-b09ad51a.js";import"./quantizationUtils-507b05c8.js";import"./json-5b2b387c.js";import"./Matcher-bf908c16.js";import"./definitions-53d29f17.js";import"./TileStore-8a7941e1.js";import"./FeatureSetReader-2b955a45.js";import"./centroid-a817072d.js";import"./visualVariablesUtils-be54b787.js";import"./visualVariablesUtils-3a2824de.js";import"./quickselect-4c28d668.js";import"./tileUtils-e4f2b1f7.js";import"./schemaUtils-f52393bf.js";import"./MaterialKey-ee186c4d.js";import"./CIMSymbolHelper-34339cd9.js";import"./Rect-df6cbc83.js";import"./BidiEngine-2645f818.js";import"./MD5-8aa08108.js";import"./GeometryUtils-c4c7ed43.js";import"./earcut-1a691bec.js";import"./TileClipper-c3e0f992.js";import"./VertexArrayObject-d65493cc.js";import"./FeatureContainer-1095601b.js";import"./TileContainer-4863b2aa.js";import"./WGLContainer-386cc9ca.js";import"./ShaderCompiler-846663a4.js";import"./config-4e1ab712.js";let y=class extends(n(h)){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}hitTest(e,i){if(this.suspended||!this.graphicsViews.length)return Promise.resolve(null);const s=this.graphicsViews.reverse().map((s=>s.hitTest(e,i)));return Promise.all(s).then((e=>e.filter(((e,i)=>(e&&(e.popupTemplate=this._popupTemplates.get(this.graphicsViews[i]),e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){if(this.graphicsViews)for(const i of this.graphicsViews)i.processUpdate(e)}attach(){this.layer.featureCollections.forEach((a=>{const o=e.fromJSON(a.featureSet),p=new(i.ofType(s))(o.features);let l;if(this._graphicsViewMap[o.geometryType])l=this._graphicsViewMap[o.geometryType],l.graphics.addMany(p);else{const e=a.layerDefinition.drawingInfo,i=a.popupInfo?t.fromJSON(a.popupInfo):null,s=r(e.renderer);l=new c({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:s,container:new m(this.view.featuresTilingScheme)}),this._graphicsViewMap[o.geometryType]=l,this._popupTemplates.set(l,i),"polygon"!==o.geometryType||this.layer.polygonSymbol?"polyline"!==o.geometryType||this.layer.lineSymbol?"point"!==o.geometryType||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}})),this.handles.add([a(this.layer,"polygonSymbol",(e=>{this._graphicsViewMap.polygon.renderer=new o({symbol:e})})),a(this.layer,"lineSymbol",(e=>{this._graphicsViewMap.polyline.renderer=new o({symbol:e})})),a(this.layer,"pointSymbol",(e=>{this._graphicsViewMap.point.renderer=new o({symbol:e})}))])}detach(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this.graphicsViews.length=0}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}};y=p([l("esri.views.2d.layers.GeoRSSLayerView2D")],y);var d=y;export{d as default};
