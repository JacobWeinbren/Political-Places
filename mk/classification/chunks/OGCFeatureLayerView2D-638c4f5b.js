import{V as e,W as i,X as a,a as r}from"../main.js";import{Z as s}from"./FeatureLayerView2D-410377c0.js";import"./clickToleranceUtils-8c8b4d60.js";import"./definitions-d926f334.js";import"./LayerView-a385a32e.js";import"./Container-9053ca23.js";import"./mat4f32-62843bff.js";import"./schemaUtils-108adfef.js";import"./Utils-85b3aa4c.js";import"./Texture-e2607ed0.js";import"./MaterialKey-8aa0da2f.js";import"./visualVariablesUtils-c2fe9116.js";import"./CIMSymbolHelper-0f69e1d5.js";import"./Rect-e0f26b8a.js";import"./BidiEngine-03c373f3.js";import"./MD5-d61df057.js";import"./popupUtils-5a6815d9.js";import"./drapedUtils-961a9102.js";const t=s=>{let t=class extends s{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new r("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([a("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(s)){};l=e([a("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export default o;
