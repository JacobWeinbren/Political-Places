import{W as e,X as s,r,Z as t,_ as i,cQ as a,a0 as l}from"../main.js";import{n}from"./sublayerUtils-9d463f03.js";import{n as o,l as y}from"./floorFilterUtils-7545278c.js";const m={visible:"visibleSublayers",definitionExpression:"layerDefs",labelingInfo:"hasDynamicLayers",labelsVisible:"hasDynamicLayers",opacity:"hasDynamicLayers",minScale:"visibleSublayers",maxScale:"visibleSublayers",renderer:"hasDynamicLayers",source:"hasDynamicLayers"};let h=class extends(e(s)){constructor(e){super(e),this.floors=null,this.scale=0}destroy(){this.layer=null}get dynamicLayers(){if(!this.hasDynamicLayers)return null;const e=this.visibleSublayers.map((e=>{const s=o(this.floors,e);return e.toExportImageJSON(s)}));return e.length?JSON.stringify(e):null}get hasDynamicLayers(){return this.layer&&n(this.visibleSublayers,this.layer.serviceSublayers,this.layer)}set layer(e){this._get("layer")!==e&&(this._set("layer",e),this.handles.remove("layer"),e&&this.handles.add([e.allSublayers.on("change",(()=>this.notifyChange("visibleSublayers"))),e.on("sublayer-update",(e=>this.notifyChange(m[e.propertyName])))],"layer"))}get layers(){const e=this.visibleSublayers;return e?e.length?"show:"+e.map((e=>e.id)).join(","):"show:-1":null}get layerDefs(){var e;const s=!(null==(e=this.floors)||!e.length),t=this.visibleSublayers.filter((e=>null!=e.definitionExpression||s&&null!=e.floorInfo));return t.length?JSON.stringify(t.reduce(((e,s)=>{const t=o(this.floors,s),i=r(t)?y(t,s):s.definitionExpression;return e[s.id]=i,e}),{})):null}get version(){this.commitProperty("layers"),this.commitProperty("layerDefs"),this.commitProperty("dynamicLayers"),this.commitProperty("timeExtent");const e=this.layer;return e&&(e.commitProperty("dpi"),e.commitProperty("imageFormat"),e.commitProperty("imageTransparency"),e.commitProperty("gdbVersion")),(this._get("version")||0)+1}get visibleSublayers(){const e=[];if(!this.layer)return e;const s=this.layer.sublayers,r=s=>{const t=this.scale,i=0===t,a=0===s.minScale||t<=s.minScale,l=0===s.maxScale||t>=s.maxScale;s.visible&&(i||a&&l)&&(s.sublayers?s.sublayers.forEach(r):e.unshift(s))};s&&s.forEach(r);const t=this._get("visibleSublayers");return!t||t.length!==e.length||t.some(((s,r)=>e[r]!==s))?e:t}toJSON(){const e=this.layer;let s={dpi:e.dpi,format:e.imageFormat,transparent:e.imageTransparency,gdbVersion:e.gdbVersion||null};return this.hasDynamicLayers&&this.dynamicLayers?s.dynamicLayers=this.dynamicLayers:s={...s,layers:this.layers,layerDefs:this.layerDefs},s}};t([i({readOnly:!0})],h.prototype,"dynamicLayers",null),t([i()],h.prototype,"floors",void 0),t([i({readOnly:!0})],h.prototype,"hasDynamicLayers",null),t([i()],h.prototype,"layer",null),t([i({readOnly:!0})],h.prototype,"layers",null),t([i({readOnly:!0})],h.prototype,"layerDefs",null),t([i({type:Number})],h.prototype,"scale",void 0),t([i(a)],h.prototype,"timeExtent",void 0),t([i({readOnly:!0})],h.prototype,"version",null),t([i({readOnly:!0})],h.prototype,"visibleSublayers",null),h=t([l("esri.layers.mixins.ExportImageParameters")],h);export{h as c};
