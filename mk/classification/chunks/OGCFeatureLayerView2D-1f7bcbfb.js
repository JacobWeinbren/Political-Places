import{V as e,W as i,X as a,a as r}from"../main.js";import{Z as s}from"./FeatureLayerView2D-a3111988.js";import"./clickToleranceUtils-d20dc2fe.js";import"./definitions-be7cb682.js";import"./LayerView-a3f3075e.js";import"./Container-41d95fff.js";import"./mat4f32-fb08207a.js";import"./schemaUtils-aded10e8.js";import"./Utils-6a23c6d8.js";import"./Texture-ba6e920d.js";import"./MaterialKey-b6edde5e.js";import"./visualVariablesUtils-796c2026.js";import"./CIMSymbolHelper-7a610365.js";import"./Rect-b40e1b09.js";import"./BidiEngine-47057240.js";import"./MD5-aa9e81f4.js";import"./popupUtils-35fec944.js";import"./drapedUtils-9cbe9084.js";const t=s=>{let t=class extends s{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new r("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([a("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(s)){};l=e([a("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export default o;
