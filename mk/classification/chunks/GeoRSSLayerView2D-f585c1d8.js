import{cU as e,c2 as i,c5 as s,d$ as t,e0 as r,F as a,bD as o,V as p,X as l}from"../main.js";import{l as n,d as h}from"./LayerView-ba58cae4.js";import{i as m}from"./GraphicContainer-73a461ba.js";import{i as c}from"./BaseGraphicContainer-9e37b41f.js";import"./Container-d54ae60a.js";import"./mat4f32-66be6f31.js";import"./Utils-c136650c.js";import"./Texture-1b4546b7.js";import"./quantizationUtils-45243aef.js";import"./json-7d785748.js";import"./Matcher-0e368218.js";import"./definitions-254d9ff8.js";import"./TileStore-58c90c06.js";import"./FeatureSetReader-06bc09d4.js";import"./centroid-0aafe90c.js";import"./visualVariablesUtils-64d9c686.js";import"./visualVariablesUtils-9cb1e980.js";import"./quickselect-e5fe1404.js";import"./tileUtils-c197b32b.js";import"./schemaUtils-6939d17f.js";import"./MaterialKey-69202450.js";import"./CIMSymbolHelper-0b1e5d97.js";import"./Rect-2a1a7cb7.js";import"./BidiEngine-34bfb137.js";import"./MD5-1b0ff81f.js";import"./GeometryUtils-3573d0a0.js";import"./earcut-a11d06f2.js";import"./TileClipper-56359119.js";import"./VertexArrayObject-21819858.js";import"./FeatureContainer-b220a419.js";import"./TileContainer-613280a1.js";import"./WGLContainer-5eb0f73c.js";import"./ShaderCompiler-0b9daf4a.js";import"./config-4ee4e262.js";let y=class extends(n(h)){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}hitTest(e,i){if(this.suspended||!this.graphicsViews.length)return Promise.resolve(null);const s=this.graphicsViews.reverse().map((s=>s.hitTest(e,i)));return Promise.all(s).then((e=>e.filter(((e,i)=>(e&&(e.popupTemplate=this._popupTemplates.get(this.graphicsViews[i]),e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){if(this.graphicsViews)for(const i of this.graphicsViews)i.processUpdate(e)}attach(){this.layer.featureCollections.forEach((a=>{const o=e.fromJSON(a.featureSet),p=new(i.ofType(s))(o.features);let l;if(this._graphicsViewMap[o.geometryType])l=this._graphicsViewMap[o.geometryType],l.graphics.addMany(p);else{const e=a.layerDefinition.drawingInfo,i=a.popupInfo?t.fromJSON(a.popupInfo):null,s=r(e.renderer);l=new c({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:s,container:new m(this.view.featuresTilingScheme)}),this._graphicsViewMap[o.geometryType]=l,this._popupTemplates.set(l,i),"polygon"!==o.geometryType||this.layer.polygonSymbol?"polyline"!==o.geometryType||this.layer.lineSymbol?"point"!==o.geometryType||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}})),this.handles.add([a(this.layer,"polygonSymbol",(e=>{this._graphicsViewMap.polygon.renderer=new o({symbol:e})})),a(this.layer,"lineSymbol",(e=>{this._graphicsViewMap.polyline.renderer=new o({symbol:e})})),a(this.layer,"pointSymbol",(e=>{this._graphicsViewMap.point.renderer=new o({symbol:e})}))])}detach(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this.graphicsViews.length=0}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}};y=p([l("esri.views.2d.layers.GeoRSSLayerView2D")],y);var f=y;export default f;
