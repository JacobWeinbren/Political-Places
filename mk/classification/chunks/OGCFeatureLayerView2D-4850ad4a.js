import{V as e,W as i,X as r,a}from"../main.js";import{Z as s}from"./FeatureLayerView2D-316c08ba.js";import"./clickToleranceUtils-c3cac747.js";import"./definitions-254d9ff8.js";import"./LayerView-ba58cae4.js";import"./Container-d54ae60a.js";import"./mat4f32-66be6f31.js";import"./schemaUtils-6939d17f.js";import"./Utils-c136650c.js";import"./Texture-1b4546b7.js";import"./MaterialKey-69202450.js";import"./visualVariablesUtils-9cb1e980.js";import"./CIMSymbolHelper-0b1e5d97.js";import"./Rect-2a1a7cb7.js";import"./BidiEngine-34bfb137.js";import"./MD5-1b0ff81f.js";import"./popupUtils-c62601b4.js";import"./drapedUtils-456898cf.js";const t=s=>{let t=class extends s{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new a("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([r("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(s)){};l=e([r("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export default o;
