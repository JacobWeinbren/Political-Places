import{V as e,W as i,X as r,a}from"../main.js";import{Z as s}from"./FeatureLayerView2D-978e7626.js";import"./clickToleranceUtils-df43cbf5.js";import"./definitions-71205104.js";import"./LayerView-25346523.js";import"./Container-d9a583c0.js";import"./mat4f32-857a0b46.js";import"./schemaUtils-1f052406.js";import"./Utils-8d4276e5.js";import"./Texture-cda625da.js";import"./MaterialKey-ec5ad220.js";import"./visualVariablesUtils-e68e5582.js";import"./CIMSymbolHelper-b6e51172.js";import"./Rect-81f68290.js";import"./BidiEngine-0715e858.js";import"./MD5-38fbf4ff.js";import"./popupUtils-cec5a501.js";import"./drapedUtils-a0bebe9c.js";const t=s=>{let t=class extends s{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new a("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([r("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(s)){};l=e([r("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export default o;
