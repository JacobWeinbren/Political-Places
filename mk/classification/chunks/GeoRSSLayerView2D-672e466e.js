import{cU as e,c2 as i,c5 as s,d$ as t,e0 as r,F as o,bD as a,V as p,X as l}from"../main.js";import{l as n,d as h}from"./LayerView-3dbf9d3c.js";import{i as m}from"./GraphicContainer-58515b6d.js";import{i as c}from"./BaseGraphicContainer-4bd9239b.js";import"./Container-b9c99214.js";import"./mat4f32-857a0b46.js";import"./Utils-4ce5fe49.js";import"./Texture-77cbc7b5.js";import"./quantizationUtils-5453dd7e.js";import"./json-47353e48.js";import"./Matcher-42758fcf.js";import"./definitions-71205104.js";import"./TileStore-ad30eb12.js";import"./FeatureSetReader-5e83ffdc.js";import"./centroid-7c8c4d46.js";import"./visualVariablesUtils-c3f4bc78.js";import"./visualVariablesUtils-1f5ed364.js";import"./quickselect-a0f444ef.js";import"./tileUtils-e0b6ca4d.js";import"./schemaUtils-e438877e.js";import"./MaterialKey-1dec7211.js";import"./CIMSymbolHelper-db305c2f.js";import"./Rect-81f68290.js";import"./BidiEngine-0715e858.js";import"./MD5-38fbf4ff.js";import"./GeometryUtils-b7707fac.js";import"./earcut-baad81c7.js";import"./TileClipper-377778f2.js";import"./VertexArrayObject-88494054.js";import"./FeatureContainer-8883e36e.js";import"./TileContainer-37315c6b.js";import"./WGLContainer-f7c2d71e.js";import"./ShaderCompiler-8704d3f8.js";import"./config-f0f429b9.js";let y=class extends(n(h)){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}hitTest(e,i){if(this.suspended||!this.graphicsViews.length)return Promise.resolve(null);const s=this.graphicsViews.reverse().map((s=>s.hitTest(e,i)));return Promise.all(s).then((e=>e.filter(((e,i)=>(e&&(e.popupTemplate=this._popupTemplates.get(this.graphicsViews[i]),e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){if(this.graphicsViews)for(const i of this.graphicsViews)i.processUpdate(e)}attach(){this.layer.featureCollections.forEach((o=>{const a=e.fromJSON(o.featureSet),p=new(i.ofType(s))(a.features);let l;if(this._graphicsViewMap[a.geometryType])l=this._graphicsViewMap[a.geometryType],l.graphics.addMany(p);else{const e=o.layerDefinition.drawingInfo,i=o.popupInfo?t.fromJSON(o.popupInfo):null,s=r(e.renderer);l=new c({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:s,container:new m(this.view.featuresTilingScheme)}),this._graphicsViewMap[a.geometryType]=l,this._popupTemplates.set(l,i),"polygon"!==a.geometryType||this.layer.polygonSymbol?"polyline"!==a.geometryType||this.layer.lineSymbol?"point"!==a.geometryType||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}})),this.handles.add([o(this.layer,"polygonSymbol",(e=>{this._graphicsViewMap.polygon.renderer=new a({symbol:e})})),o(this.layer,"lineSymbol",(e=>{this._graphicsViewMap.polyline.renderer=new a({symbol:e})})),o(this.layer,"pointSymbol",(e=>{this._graphicsViewMap.point.renderer=new a({symbol:e})}))])}detach(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this.graphicsViews.length=0}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}};y=p([l("esri.views.2d.layers.GeoRSSLayerView2D")],y);var f=y;export default f;
