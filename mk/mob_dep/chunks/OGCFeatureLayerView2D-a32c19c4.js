import{V as e,W as i,X as a,a as r}from"../main.js";import{Z as s}from"./FeatureLayerView2D-d377c0dc.js";import"./clickToleranceUtils-99c2da4d.js";import"./definitions-b96089d4.js";import"./LayerView-499e7e2c.js";import"./Container-f328d9d8.js";import"./mat4f32-160ca33d.js";import"./schemaUtils-0e0fea86.js";import"./Utils-dccefa6f.js";import"./Texture-45d34b14.js";import"./MaterialKey-c085b7a9.js";import"./visualVariablesUtils-36be0e77.js";import"./CIMSymbolHelper-e705f313.js";import"./Rect-9b1aa25a.js";import"./BidiEngine-3a569c03.js";import"./MD5-10d13cec.js";import"./popupUtils-81dcd611.js";import"./drapedUtils-cd030f17.js";const t=s=>{let t=class extends s{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new r("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([a("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(s)){};l=e([a("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export default o;
