import{Z as e,_ as t,cW as r,a0 as i,e as a,r as s,cu as o,d0 as p,s as m,dj as n,j as l}from"../main.js";import{t as c}from"./BitmapContainer-d236bc3d.js";import{f as h,u as d}from"./LayerView-bd7ec411.js";import{r as u}from"./BaseGraphicContainer-0a21c1b2.js";import{n as f}from"./HighlightGraphicContainer-2d3c2d82.js";import{S as y}from"./ExportStrategy-3761539c.js";import{c as g}from"./ExportImageParameters-2e1e2c5e.js";import{s as j,a as v}from"./drapedUtils-15eb6fef.js";import{t as b,d as w}from"./popupUtils-dd0cff5d.js";import{n as x}from"./floorFilterUtils-9c9879c8.js";import{i as U}from"./RefreshableLayerView-4e2e6ef8.js";import"./WGLContainer-e5b769fe.js";import"./enums-1bc10a6c.js";import"./pixelUtils-5a36ade0.js";import"./Container-8f96c744.js";import"./VertexArrayObject-47d07736.js";import"./Texture-1175e9f5.js";import"./VertexElementDescriptor-3277c87e.js";import"./enums-873d3e5a.js";import"./Utils-4efd2b2d.js";import"./ProgramTemplate-28d6e1e9.js";import"./StyleDefinition-3f884fc8.js";import"./config-0f36ebd6.js";import"./GeometryUtils-dd2125c2.js";import"./MaterialKey-37656b1a.js";import"./earcut-a218cde0.js";import"./CIMSymbolHelper-79eed166.js";import"./BidiEngine-0fcd18f1.js";import"./GeometryUtils-6ecde86c.js";import"./projectionSupport-8e78150e.js";import"./json-a3f064db.js";import"./FeatureContainer-1ceb8305.js";import"./TileContainer-dc56fab2.js";import"./visualVariablesUtils-9ae7ec21.js";import"./visualVariablesUtils-3ba7085d.js";import"./Matcher-30c233e8.js";import"./tileUtils-c160135b.js";import"./TileClipper-190e57cb.js";import"./Geometry-39a0d1c5.js";import"./ExpandedCIM-cdf56881.js";import"./devEnvironmentUtils-94bcfc53.js";import"./schemaUtils-cac6ecdf.js";import"./createSymbolSchema-ed6f55b3.js";import"./MD5-b72999e2.js";import"./util-713ce8b4.js";import"./ComputedAttributeStorage-87557582.js";import"./vec3f32-a3dab948.js";import"./Bitmap-95c55ca6.js";import"./sublayerUtils-f0007059.js";const C=m=>{let n=class extends m{initialize(){this.exportImageParameters=new g({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get exportImageVersion(){var e;return null==(e=this.exportImageParameters)||e.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}async fetchPopupFeatures(e,t){const{layer:r}=this;if(!e)return Promise.reject(new a("mapimagelayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:r}));const i=this.get("view.scale"),p=[],m=async e=>{const r=0===e.minScale||i<=e.minScale,a=0===e.maxScale||i>=e.maxScale;if(e.visible&&r&&a)if(e.sublayers)e.sublayers.forEach(m);else if(e.popupEnabled){const r=w(e,{...t,defaultPopupTemplateEnabled:!1});s(r)&&p.unshift({sublayer:e,popupTemplate:r})}},n=r.sublayers.toArray().reverse().map(m);await Promise.all(n);const l=p.map((async({sublayer:r,popupTemplate:i})=>{await r.load().catch((()=>{}));const a=r.createQuery(),o=s(t)?t.event:null,p=j({renderer:r.renderer,event:o}),m=this.createFetchPopupFeaturesQueryGeometry(e,p);if(a.geometry=m,a.outFields=await b(r,i),"map-image"===this.layer.type&&"floors"in this.view){var n,l;const e=null==(n=this.view)||null==(l=n.floors)?void 0:l.clone(),t=x(e,r);s(t)&&(a.where=a.where?`(${a.where}) AND (${t})`:t)}const c=await this._loadArcadeModules(i);return c&&c.arcadeUtils.hasGeometryOperations(i)||(a.maxAllowableOffset=m.width/p),(await r.queryFeatures(a)).features}));return(await o(l)).reduce(((e,t)=>t.value?[...e,...t.value]:e),[]).filter((e=>null!=e))}canResume(){var e;return!(!super.canResume()||null!=(e=this.timeExtent)&&e.isEmpty)}_loadArcadeModules(e){if(e.get("expressionInfos.length")||Array.isArray(e.content)&&e.content.some((e=>"expression"===e.type)))return p()}};return e([t()],n.prototype,"exportImageParameters",void 0),e([t({readOnly:!0})],n.prototype,"exportImageVersion",null),e([t()],n.prototype,"layer",void 0),e([t()],n.prototype,"suspended",void 0),e([t(r)],n.prototype,"timeExtent",void 0),n=e([i("esri.views.layers.MapImageLayerView")],n),n},I=m.getLogger("esri.views.2d.layers.MapImageLayerView2D");let S=class extends(C(U(h(d)))){constructor(){super(...arguments),this._highlightGraphics=new n}update(e){this.strategy.update(e).catch((e=>{l(e)||I.error(e)}))}attach(){const{imageMaxWidth:e,imageMaxHeight:t,version:r}=this.layer,i=r>=10.3,a=r>=10;this._bitmapContainer=new c,this.container.addChild(this._bitmapContainer);const s=new u({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new f(this.view.featuresTilingScheme)});this.container.addChild(s.container),this.strategy=new y({container:this._bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:e,imageMaxHeight:t,imageRotationSupported:i,imageNormalizationSupported:a,hidpi:!0}),this.handles.add(this.watch("exportImageVersion",(()=>this.requestUpdate())),"exportImageVersion"),this.handles.add(this.watch("view.floors",(()=>this.requestUpdate())),"view.floors"),this.requestUpdate()}detach(){this.handles.remove("exportImageVersion"),this.handles.remove("view.floors"),this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}highlight(e,t){return this._highlightGraphics.add(e),{remove:()=>{this._highlightGraphics.remove(e)}}}supportsSpatialReference(e){return this.layer.serviceSupportsSpatialReference(e)}createFetchPopupFeaturesQueryGeometry(e,t){return v(e,t,this.view)}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(e,t,r,i){return this.layer.fetchImage(e,t,r,{timeExtent:this.timeExtent,floors:this.view.floors,...i})}};e([t()],S.prototype,"strategy",void 0),e([t()],S.prototype,"updating",void 0),S=e([i("esri.views.2d.layers.MapImageLayerView2D")],S);const E=S;export{E as default};
