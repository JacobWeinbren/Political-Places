import{V as e,X as t,W as r,dO as a,a as i,r as s,cm as o,dS as n,n as p,dA as m,e8 as h,g as l}from"../main.js";import{t as c}from"./BitmapContainer-ad18e0e9.js";import{l as d,d as u}from"./LayerView-49288705.js";import{t as g,i as f}from"./BaseGraphicContainer-1c9ce090.js";import{I as y}from"./Utils-a8f91238.js";import{S as j}from"./ExportStrategy-0a446fff.js";import{n as b}from"./ExportImageParameters-0d2a0a73.js";import{s as v}from"./clickToleranceUtils-99c2da4d.js";import{t as x,d as w}from"./popupUtils-9cda43fa.js";import{a as C}from"./drapedUtils-de56a799.js";import"./WGLContainer-a94ee0ee.js";import"./definitions-b96089d4.js";import"./VertexArrayObject-31bdcc03.js";import"./Texture-ab2a4298.js";import"./ShaderCompiler-6ddab0fe.js";import"./config-fbb4c192.js";import"./GeometryUtils-fc4fdb28.js";import"./MaterialKey-26a1a6c6.js";import"./Container-eef7a929.js";import"./mat4f32-160ca33d.js";import"./earcut-1e6231b8.js";import"./projectionSupport-a8705246.js";import"./json-ec4a3403.js";import"./Matcher-f1222421.js";import"./TileStore-f03f0252.js";import"./FeatureSetReader-744d9dbc.js";import"./centroid-d99c71c7.js";import"./visualVariablesUtils-a45c5123.js";import"./visualVariablesUtils-f930304c.js";import"./quickselect-3fb5bfd6.js";import"./tileUtils-64bbcccd.js";import"./schemaUtils-8e78e427.js";import"./CIMSymbolHelper-5a941485.js";import"./Rect-9b1aa25a.js";import"./BidiEngine-3a569c03.js";import"./MD5-10d13cec.js";import"./TileClipper-ccc490fb.js";import"./FeatureContainer-4b4962f2.js";import"./TileContainer-a5b5c8c2.js";import"./Bitmap-cc3ab69c.js";import"./sublayerUtils-085d207e.js";let I=class extends g{renderChildren(e){if(e.drawPhase!==y.HIGHLIGHT)return;if(this.attributeView.bindTextures(e.context),!this.children.some((e=>e.hasData)))return;super.renderChildren(e);const{painter:t}=e,r=t.effects.highlight;r.bind(e),e.context.setColorMask(!0,!0,!0,!0),e.context.clear(16384),this._renderChildren(e,r.defines.concat(["highlightAll"])),r.draw(e),r.unbind()}};I=e([t("esri.views.2d.layers.support.HighlightGraphicContainer")],I);var U=I;const P=p=>{let m=class extends p{initialize(){this.exportImageParameters=new b({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get exportImageVersion(){var e;return null==(e=this.exportImageParameters)||e.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}async fetchPopupFeatures(e,t){const{layer:r}=this;if(!e)return Promise.reject(new i("mapimagelayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:r}));const a=this.get("view.scale"),n=[],p=async e=>{const r=0===e.minScale||a<=e.minScale,i=0===e.maxScale||a>=e.maxScale;if(e.visible&&r&&i)if(e.sublayers)e.sublayers.forEach(p);else if(e.popupEnabled){const r=w(e,{...t,defaultPopupTemplateEnabled:!1});s(r)&&n.unshift({sublayer:e,popupTemplate:r})}},m=r.sublayers.toArray().reverse().map(p);await Promise.all(m);const h=n.map((async({sublayer:r,popupTemplate:a})=>{await r.load().catch((()=>{}));const i=r.createQuery(),o=s(t)?t.event:null,n=v({renderer:r.renderer,event:o}),p=this.createFetchPopupFeaturesQueryGeometry(e,n);i.geometry=p,i.outFields=await x(r,a);const m=await this._loadArcadeModules(a);return m&&m.arcadeUtils.hasGeometryOperations(a)||(i.maxAllowableOffset=p.width/n),(await r.queryFeatures(i)).features}));return(await o(h)).reduce(((e,t)=>t.value?[...e,...t.value]:e),[]).filter((e=>null!=e))}canResume(){var e;return!(!super.canResume()||null!=(e=this.timeExtent)&&e.isEmpty)}_loadArcadeModules(e){if(e.get("expressionInfos.length"))return n()}};return e([r()],m.prototype,"exportImageParameters",void 0),e([r({readOnly:!0})],m.prototype,"exportImageVersion",null),e([r()],m.prototype,"layer",void 0),e([r()],m.prototype,"suspended",void 0),e([r(a)],m.prototype,"timeExtent",void 0),m=e([t("esri.views.layers.MapImageLayerView")],m),m},S=p.getLogger("esri.views.2d.layers.MapImageLayerView2D");let V=class extends(P(m(d(u)))){constructor(){super(...arguments),this._highlightGraphics=new h}hitTest(){return null}update(e){this.strategy.update(e).catch((e=>{l(e)||S.error(e)}))}attach(){const{imageMaxWidth:e,imageMaxHeight:t,version:r}=this.layer,a=r>=10.3,i=r>=10;this._bitmapContainer=new c,this.container.addChild(this._bitmapContainer);const s=new f({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new U(this.view.featuresTilingScheme)});this.container.addChild(s.container),this.strategy=new j({container:this._bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:e,imageMaxHeight:t,imageRotationSupported:a,imageNormalizationSupported:i,hidpi:!0}),this.handles.add(this.watch("exportImageVersion",(()=>this.requestUpdate())),"exportImageVersion"),this.requestUpdate()}detach(){this.handles.remove("exportImageVersion"),this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}highlight(e,t){return this._highlightGraphics.add(e),{remove:()=>{this._highlightGraphics.remove(e)}}}createFetchPopupFeaturesQueryGeometry(e,t){return C(e,t,this.view)}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(e,t,r,a){return this.layer.fetchImage(e,t,r,{timeExtent:this.timeExtent,timestamp:this.refreshTimestamp,...a})}};e([r()],V.prototype,"strategy",void 0),e([r()],V.prototype,"updating",void 0),V=e([t("esri.views.2d.layers.MapImageLayerView2D")],V);var M=V;export default M;
