import{V as e,W as t,X as r,cJ as i,n as o,gx as s,h7 as n,gy as a,gz as l,d7 as d,d8 as p,d9 as y,da as u,de as c,aT as h,cB as f,a as m,r as g,cw as v,i4 as b,i5 as w,hP as S,i6 as I,hi as R,bJ as x,i7 as F,gE as j,du as T,L as D,hQ as O,cn as P,gF as E,cZ as N,bE as k,i8 as L,bV as _,gm as J,hV as U,hH as W,hU as V,gY as A,gB as G,i9 as C,ia as z,gH as q,e5 as B,hI as H,gG as Q,i3 as M,dd as X,ib as Y,ic as Z,gI as K}from"../main.js";var $;let ee=$=class extends i{constructor(){super(...arguments),this.age=null,this.ageReceived=null,this.displayCount=null,this.maxObservations=1}clone(){return new $({age:this.age,ageReceived:this.ageReceived,displayCount:this.displayCount,maxObservations:this.maxObservations})}};e([t({type:Number,json:{write:!0}})],ee.prototype,"age",void 0),e([t({type:Number,json:{write:!0}})],ee.prototype,"ageReceived",void 0),e([t({type:Number,json:{write:!0}})],ee.prototype,"displayCount",void 0),e([t({type:Number,json:{write:!0}})],ee.prototype,"maxObservations",void 0),ee=$=e([r("esri.layers.support.PurgeOptions")],ee);var te=ee;const re=o.getLogger("esri.layers.StreamLayer"),ie=K();let oe=class extends(s(n(a(l(d(p(y(u(c))))))))){constructor(...e){super(...e),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureReduction=null,this.fields=null,this.fieldsIndex=null,this.geometryDefinition=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.maxReconnectionAttempts=0,this.maxReconnectionInterval=20,this.maxScale=0,this.minScale=0,this.objectIdField=null,this.operationalLayerType="ArcGISStreamLayer",this.popupEnabled=!0,this.popupTemplate=null,this.purgeOptions=new te,this.screenSizePerspectiveEnabled=!0,this.sourceJSON=null,this.spatialReference=h.WGS84,this.type="stream",this.url=null,this.updateInterval=300,this.webSocketUrl=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){if(!("WebSocket"in f))return this.addResolvingPromise(Promise.reject(new m("stream-layer:websocket-unsupported","WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))),Promise.resolve(this);const t=g(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Stream Service","Feed"]},e).catch(v).then((()=>this._fetchService(t)))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}readFeatureReduction(e,t){return b(e,t)}writeWebSceneFeatureReduction(e,t,r,i){w(e,t,"layerDefinition.featureReduction",i)}set renderer(e){S(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,t,r){const i=(t=t.layerDefinition||t).drawingInfo&&t.drawingInfo.renderer||void 0;if(i){const e=I(i,t,r)||void 0;return e||re.error("Failed to create renderer",{rendererDefinition:t.drawingInfo.renderer,layer:this,context:r}),e}if(t.defaultSymbol)return t.types&&t.types.length?new R({defaultSymbol:se(t.defaultSymbol,t,r),field:t.typeIdField,uniqueValueInfos:t.types.map((e=>({id:e.id,symbol:se(e.symbol,e,r)})))}):new x({symbol:se(t.defaultSymbol,t,r)})}writeRenderer(e,t,r,i){F(e,t,r,i)}writeWebSceneRenderer(e,t,r,i){F(e,t,"layerDefinition.drawingInfo.renderer",i)}createPopupTemplate(e){return j(this,e)}createQuery(){const e=new T;return e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1",e}getFieldDomain(e,t){if(!this.fields)return null;let r=null;return this.fields.some((t=>(t.name===e&&(r=t.domain),!!r))),r}getField(e){return this.fieldsIndex.get(e)}async _fetchService(e){var t;if(this.webSocketUrl){var r;if(null==(r=this.timeInfo)||!r.trackIdField)throw new m("stream-layer:missing-metadata","The stream layer trackIdField must be specified.");if(!this.objectIdField)throw new m("stream-layer:missing-metadata","The stream layer objectIdField must be specified.");if(!this.fields)throw new m("stream-layer:missing-metadata","The stream layer fields must be specified.");if(!this.geometryType)throw new m("stream-layer:missing-metadata","The stream layer geometryType must be specified.");this.url=this.webSocketUrl}else if(!this.sourceJSON){const{data:t}=await D(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e});this.sourceJSON=t}return this.sourceJSON={...null!=(t=this.sourceJSON)?t:{},objectIdField:"__esri_stream_id__"},this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl}),S(this.renderer,this.fieldsIndex),O(this.timeInfo,this.fieldsIndex),P(this,{origin:"service"})}};e([t({type:String})],oe.prototype,"copyright",void 0),e([t({readOnly:!0})],oe.prototype,"defaultPopupTemplate",null),e([t({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],oe.prototype,"definitionExpression",void 0),e([t({type:String})],oe.prototype,"displayField",void 0),e([t({type:E})],oe.prototype,"elevationInfo",void 0),e([N("featureReduction",["layerDefinition.featureReduction"])],oe.prototype,"readFeatureReduction",null),e([k("web-scene","featureReduction",{"layerDefinition.featureReduction":{types:L}})],oe.prototype,"writeWebSceneFeatureReduction",null),e([t(ie.fields)],oe.prototype,"fields",void 0),e([t(ie.fieldsIndex)],oe.prototype,"fieldsIndex",void 0),e([t({type:_})],oe.prototype,"geometryDefinition",void 0),e([t({type:J.apiValues,json:{read:{reader:J.read}}})],oe.prototype,"geometryType",void 0),e([t(U)],oe.prototype,"labelsVisible",void 0),e([t({type:[W],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:V},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],oe.prototype,"labelingInfo",void 0),e([t(A)],oe.prototype,"legendEnabled",void 0),e([t({type:["show","hide"]})],oe.prototype,"listMode",void 0),e([t({type:G})],oe.prototype,"maxReconnectionAttempts",void 0),e([t({type:G})],oe.prototype,"maxReconnectionInterval",void 0),e([t(C)],oe.prototype,"maxScale",void 0),e([t(z)],oe.prototype,"minScale",void 0),e([t({type:String})],oe.prototype,"objectIdField",void 0),e([t({value:"ArcGISStreamLayer",type:["ArcGISStreamLayer"]})],oe.prototype,"operationalLayerType",void 0),e([t(q)],oe.prototype,"popupEnabled",void 0),e([t({type:B,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],oe.prototype,"popupTemplate",void 0),e([t({type:te})],oe.prototype,"purgeOptions",void 0),e([t({types:H,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}}},write:{target:"layerDefinition.drawingInfo.renderer"}}})],oe.prototype,"renderer",null),e([N("service","renderer",["drawingInfo.renderer","defaultSymbol"]),N("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],oe.prototype,"readRenderer",null),e([k("renderer")],oe.prototype,"writeRenderer",null),e([k("web-scene","renderer",{"layerDefinition.drawingInfo.renderer":{types:Q}})],oe.prototype,"writeWebSceneRenderer",null),e([t(M)],oe.prototype,"screenSizePerspectiveEnabled",void 0),e([t({type:h,json:{origins:{service:{read:{source:"spatialReference"}}}}})],oe.prototype,"spatialReference",void 0),e([t({json:{read:!1}})],oe.prototype,"type",void 0),e([t(X)],oe.prototype,"url",void 0),e([t({type:Number})],oe.prototype,"updateInterval",void 0),e([t({type:String})],oe.prototype,"webSocketUrl",void 0),oe=e([r("esri.layers.StreamLayer")],oe);const se=Y({types:Z});var ne=oe;export{ne as default};
