import{s as e,bv as t,Z as i,_ as s,bJ as l,a0 as n,bK as r,bL as a,b5 as o,d as u,t as d,bM as f,e as c,r as p,g as m,x as y,D as b}from"../main.js";import{e as g,W as v}from"./Utils-4efd2b2d.js";import{o as x}from"./visualVariablesUtils-3ba7085d.js";import{createSymbolSchema as h}from"./createSymbolSchema-ed6f55b3.js";import{t as w}from"./CIMSymbolHelper-79eed166.js";import{T as S}from"./enums-873d3e5a.js";import"./MaterialKey-37656b1a.js";import"./ExpandedCIM-cdf56881.js";import{x as z}from"./MD5-b72999e2.js";import{e as E}from"./util-713ce8b4.js";function F(e,t){return Math.max(e,t)}S.metrics,new w(0,0,24,24);const V=e.getLogger("esri.renderers.visualVariables.support.utils"),I=e=>{if(!("visualVariables"in e)||!e.visualVariables||!e.visualVariables.length)return e;const t=e.clone(),i=t.visualVariables.map((e=>M(e)?O(e):e));return t.visualVariables=i,t};function T(e){return e.map((e=>M(e)?O(e.clone()):e))}function M(e){return("size"===e.type||"color"===e.type||"opacity"===e.type)&&null!=e.stops}function O(e){return e.stops=function(e,i){return i.length<=8?i:(V.warn(`Found ${i.length} Visual Variable stops, but MapView only supports 8. Displayed stops will be simplified.`),i.length>16?function(e,i){const[s,...l]=i,n=l.pop(),r=l[0].value,a=l[l.length-1].value,o=(a-r)/6,u=[];for(let s=r;s<a;s+=o){let n=0;for(;s>=l[n].value;)n++;const r=l[n],a=i[n-1],o=s-a.value,d=r.value===a.value?1:o/(r.value-a.value);if("color"===e){const e=l[n],t=i[n-1],r=e.color.clone();r.r=R(t.color.r,r.r,d),r.g=R(t.color.g,r.g,d),r.b=R(t.color.b,r.b,d),r.a=R(t.color.a,r.a,d),u.push({value:s,color:r,label:e.label})}else if("size"===e){const e=l[n],r=i[n-1],a=t(e.size),o=R(t(r.size),a,d);u.push({value:s,size:o,label:e.label})}else{const e=l[n],t=R(i[n-1].opacity,e.opacity,d);u.push({value:s,opacity:t,label:e.label})}}return[s,...u,n]}(e,i):function(e){const[t,...i]=e,s=i.pop();for(;i.length>6;){let e=0,t=0;for(let s=1;s<i.length;s++){const l=i[s-1],n=i[s],r=Math.abs(n.value-l.value);r>t&&(t=r,e=s)}i.splice(e,1)}return[t,...i,s]}(i))}(e.type,e.stops),e}function R(e,t,i){return(1-i)*e+i*t}var C;let N=C=class extends r{writeLevels(e,t,i){for(const i in e){const e=this.levels[i];return void(t.stops=e)}}clone(){return new C({axis:this.axis,field:this.field,valueExpression:this.valueExpression,valueExpressionTitle:this.valueExpressionTitle,maxDataValue:this.maxDataValue,maxSize:a(this.maxSize)?this.maxSize.clone():this.maxSize,minDataValue:this.minDataValue,minSize:a(this.minSize)?this.minSize.clone():this.minSize,normalizationField:this.normalizationField,stops:this.stops&&this.stops.map((e=>e.clone())),target:this.target,useSymbolValue:this.useSymbolValue,valueRepresentation:this.valueRepresentation,valueUnit:this.valueUnit,legendOptions:this.legendOptions&&this.legendOptions.clone(),levels:o(this.levels)})}};i([s()],N.prototype,"levels",void 0),i([l("levels")],N.prototype,"writeLevels",null),N=C=i([n("esri.views.2d.engine.LevelDependentSizeVariable")],N);const _=e.getLogger("esri.views.2d.layers.support.clusterUtils");u.add("esri-cluster-arcade-enabled",!0);const k=u("esri-cluster-arcade-enabled"),L=(e,t,i,s)=>{const l=t.clone();if(!B(l))return l;if(i.fields)for(const t of i.fields)P(e,t);if("visualVariables"in l){const t=(l.visualVariables||[]).filter((e=>"$view.scale"!==e.valueExpression)),n=$(t);t.forEach((t=>{"rotation"===t.type?t.field?t.field=q(e,t.field,"avg_angle"):t.valueExpression&&(t.field=U(e,t.valueExpression,"avg_angle"),t.valueExpression=null):t.normalizationField?(t.field=q(e,t.field,"norm",t.normalizationField),t.normalizationField=null):t.field?t.field=q(e,t.field,"avg"):(t.field=U(e,t.valueExpression,"avg"),t.valueExpression=null)})),d(n)&&!D(t)&&(t.push(j(i,s)),l.dynamicClusterSize=!0),l.visualVariables=t}switch(l.type){case"simple":break;case"unique-value":l.field?l.field=q(e,l.field,"mode"):l.valueExpression&&(l.field=U(e,l.valueExpression,"mode"),l.valueExpression=null);break;case"class-breaks":l.normalizationField?(l.field=q(e,l.field,"norm",l.normalizationField),l.normalizationField=null):l.field?l.field=q(e,l.field,"avg"):(l.field=U(e,l.valueExpression,"avg"),l.valueExpression=null)}return l},$=e=>{for(const t of e)if("size"===t.type)return t;return null},D=e=>{for(const t of e)if("cluster_count"===t.field)return!0;return!1},j=(e,t)=>{const i=[new f({value:0,size:0}),new f({value:1})];if(d(t))return new r({field:"cluster_count",stops:[...i,new f({value:2,size:0})]});const s=Object.keys(t).reduce(((s,l)=>({...s,[l]:[...i,new f({value:Math.max(2,t[l].minValue),size:e.clusterMinSize}),new f({value:Math.max(3,t[l].maxValue),size:e.clusterMaxSize})]})),{});return new N({field:"cluster_count",levels:s})},B=e=>{const t=t=>_.error(new c("Unsupported-renderer",t,{renderer:e}));if("unique-value"===e.type){if(e.field2||e.field3)return t("FeatureReductionCluster does not support multi-field UniqueValueRenderers"),!1}else if("class-breaks"===e.type){if(e.normalizationField){const i=e.normalizationType;if("field"!==i)return t(`FeatureReductionCluster does not support a normalizationType of ${i}`),!1}}else if("simple"!==e.type)return t(`FeatureReductionCluster does not support renderers of type ${e.type}`),!1;if(!k){if("valueExpression"in e&&e.valueExpression)return t("FeatureReductionCluster does not currently support renderer.valueExpression. Support will be added in a future release"),!1;if(("visualVariables"in e&&e.visualVariables||[]).some((e=>!(!("valueExpression"in e)||!e.valueExpression))))return t("FeatureReductionCluster does not currently support visualVariables with a valueExpression. Support will be added in a future release"),!1}return!0};function P(e,t){const{name:i,outStatistic:s}=t,{onStatisticField:l,onStatisticValueExpression:n,statisticType:r}=s;if(n){const t=z(n.toLowerCase());e.push({name:i,outStatistic:{onStatisticField:t,onStatisticValueExpression:n,statisticType:r}})}else l?e.push({name:i,outStatistic:{onStatisticField:l,statisticType:r}}):_.error(new c("mapview-unsupported-field","Unable to handle field",{field:t}))}function U(e,t,i){const s=z(t),l="mode"===i?`cluster_type_${s}`:`cluster_avg_${s}`;return e.some((e=>e.name===l))||e.push({name:l,outStatistic:{onStatisticField:s,onStatisticValueExpression:t,statisticType:i}}),l}function q(e,t,i,s){if("cluster_count"===t||e.some((e=>e.name===t)))return t;const l=function(e,t,i){switch(e){case"avg":case"avg_angle":return`cluster_avg_${t}`;case"mode":return`cluster_type_${t}`;case"norm":{const e=i,s="field",l=t.toLowerCase()+",norm:"+s+","+e.toLowerCase();return"cluster_avg_"+z(l)}}}(i,t,s);return e.some((e=>e.name===l))||("norm"===i?e.push({name:l,outStatistic:{onStatisticField:t,onStatisticNormalizationField:s,statisticType:i}}):e.push({name:l,outStatistic:{onStatisticField:t,statisticType:i}})),l}const J=e.getLogger("esri.views.2d.layers.features.schemaUtils"),A="ValidationError",G={esriGeometryPoint:["above-right","above-center","above-left","center-center","center-left","center-right","below-center","below-left","below-right"],esriGeometryPolygon:["always-horizontal"],esriGeometryPolyline:["center-along"],esriGeometryMultipoint:null};function K(e){let t=0,i=0,s=!1,l=!0,n=!0;if(p(e)){if(i=function(e){if(!("visualVariables"in e))return 0;if(!e.hasVisualVariables("size"))return 0;const t=e.getVisualVariablesForType("size");if(!t[0])return 0;const i=t[0];if("outline"===i.target)return 0;if("stops"===i.transformationType)return i.stops.map((e=>e.size)).reduce(F,0);if("clamped-linear"===i.transformationType){let e=-1/0,t=-1/0;return e="number"==typeof i.maxSize?i.maxSize:i.maxSize.stops.map((e=>e.size)).reduce(F,0),t="number"==typeof i.minSize?i.minSize:i.minSize.stops.map((e=>e.size)).reduce(F,0),Math.max(e,t)}return"real-world-size"===i.transformationType?30:void 0}(e),"visualVariables"in e&&(t=function(e){if(!e)return g.NONE;let t=0;for(const i of e)if("size"===i.type){const e=x(i);t|=e,"outline"===i.target&&(t|=e<<4)}else"color"===i.type?t|=g.COLOR:"opacity"===i.type?t|=g.OPACITY:"rotation"===i.type&&(t|=g.ROTATION);return t}(e.visualVariables||[]),s="dot-density"===e.type),"dictionary"===e.type)return{maxVVSize:i,supportsOutlineFills:!1,vvFlags:t,stride:{fill:"default"}};if(!s){const t=e.getSymbols();"backgroundFillSymbol"in e&&e.backgroundFillSymbol&&t.push(e.backgroundFillSymbol);for(const e of t)if("cim"===e.type&&(l=!1),"simple-fill"===e.type||"picture-fill"===e.type){const t=e.outline;t&&"none"!==t.style&&"solid"!==t.style&&(n=!1);const i=t&&"none"!==t.style&&"solid"!==t.style,s="simple-fill"===e.type&&"none"!==e.style&&"solid"!==e.style;("picture-fill"===e.type||s||i)&&(l=!1)}}}return s&&(n=!1),{vvFlags:t,maxVVSize:i,supportsOutlineFills:n,stride:{fill:s?"dot-density":l?"simple":"default"}}}function H(e,t){const i=o(e);return i.some((e=>function(e,t){const i=e.labelPlacement,s=G[t];if(!e.symbol)return J.warn("No ILabelClass symbol specified."),!0;if(!s)return J.error(new c("mapview-labeling:unsupported-geometry-type",`Unable to create labels for Feature Layer, ${t} is not supported`)),!0;if(!s.some((e=>e===i))){const l=s[0];i&&J.warn(`Found invalid label placement type ${i} for ${t}. Defaulting to ${l}`),e.labelPlacement=l}return!1}(e,t)))?[]:i}function Y(e){return u("esri-2d-update-debug")&&console.debug("Created new schema",Z(e,!0)),Z(e)}function Z(e,t=!1){try{var i,s;const l=function(e,t=!1){const i=new Array;return i.push(function(e,t,i=!1){const s={indexCount:0,fields:{}},l="featureReduction"in e&&e.featureReduction,n=l?"aggregate":"feature";if("sublayers"in e){const t={type:"subtype",subtypeField:e.subtypeField,renderers:{},stride:{fill:"default"}},l={type:"subtype",mapping:{},target:"feature"},r={type:"subtype",classes:{}},a={type:"symbol",target:"feature",aggregateFields:[],attributes:s,storage:l,mesh:{matcher:t,aggregateMatcher:null,labels:r,sortKey:null}},o=new Set;let u=0;for(const{renderer:a,subtypeCode:d,labelingInfo:f,labelsVisible:m}of e.sublayers){const e=ne(s,n,a,i),y=le(s,n,a),b=m&&f;if("visualVariables"in a&&a.visualVariables&&a.visualVariables.length)throw new c(A,"Visual variables are currently not supported for subtype layers");if("dictionary"===e.type)throw new c(A,"Dictionary renderer is not supported in subtype layers");if("subtype"===e.type)throw new c(A,"Nested subtype renderers is not supported");if(p(y)&&"subtype"===y.type)throw new c(A,"Nested subtype storage is not supported");if(p(y)&&"dot-density"===y.type)throw new c(A,"Dot density attributes are not supported in subtype layers");if(o.has(d))throw new c(A,"Subtype codes for sublayers must be unique");o.add(d),t.renderers[d]=e,l.mapping[d]=y,b&&(r.classes[d]=b.map((e=>ie(a,s,e,"feature",u++,i))))}return a}if("heatmap"===e.renderer.type){const{blurRadius:t,fieldOffset:i,field:l}=e.renderer;return{type:"heatmap",aggregateFields:[],attributes:s,target:n,storage:null,mesh:{blurRadius:t,fieldOffset:i,field:ee(s,{target:n,field:l,resultType:"numeric"}).field}}}{const t=[],r="aggregate"===n?L(t,e.renderer,l,null):e.renderer;!function(e,t){const i={mesh:!0,storage:!0};for(const s of t){const{name:t,outStatistic:l}=s,{statisticType:n,onStatisticField:r}=l;let a=null,o=null,u=null;const d="numeric",f="feature";"onStatisticValueExpression"in l?o=te(e,{type:"expression",target:f,valueExpression:l.onStatisticValueExpression,resultType:d}).fieldIndex:"onStatisticNormalizationField"in l?(a=te(e,{type:"field",target:f,field:r,resultType:d}).field,u=l.onStatisticNormalizationField):a=te(e,{type:"field",target:f,field:r,resultType:d}).field,te(e,{type:"statistic",target:"aggregate",name:t,context:i,inField:a,inNormalizationField:u,inFieldIndex:o,statisticType:n})}}(s,t);const a=ne(s,n,r,i);let o=null;const u=le(s,n,r),d=E(e.geometryType);let f=e.labelsVisible&&e.labelingInfo||[],p=[];if(l){if("selection"===l.type)throw new c(A,"Mapview does not support `selection` reduction type",l);if(l.symbol){const e=K(r);o={type:"simple",symbol:h(l.symbol,e,i),stride:e.stride}}p=l&&l.labelsVisible&&l.labelingInfo||[]}f=H(f,d),p=H(p,d);let m=0;const y=[...f.map((e=>ie(r,s,e,"feature",m++,i))),...p.map((e=>ie(r,s,e,"aggregate",m++,i)))],b=se(s,e.orderBy);return{type:"symbol",target:n,attributes:s,aggregateFields:t,storage:u,mesh:{matcher:a,labels:{type:"simple",classes:y},aggregateMatcher:o,sortKey:b}}}}(e,t)),i}(e,t),n={};return l.map((t=>function(e,t,i){switch(i.target){case"feature":return void X(e,W(t),i);case"aggregate":{if(!("featureReduction"in t))return;const s=t.featureReduction;if("selection"===s.type)throw new c(A,"Mapview does not support `selection` reduction type",s);return X(e,W(t),i),void function(e,t,i){e.aggregate||(e.aggregate={name:"aggregate",input:"feature",filters:null,attributes:{},params:{clusterRadius:y(t.clusterRadius/2),clusterPixelBuffer:64*Math.ceil(y(t.clusterMaxSize)/64),fields:i.aggregateFields}}),Q(e.aggregate,i.attributes.fields)}(e,s,i)}}}(n,e,t))),{source:{definitionExpression:e.definitionExpression,fields:e.fields.map((e=>e.toJSON())),gdbVersion:e.gdbVersion,historicMoment:null==(i=e.historicMoment)?void 0:i.getTime(),outFields:e.availableFields,pixelBuffer:e.pixelBuffer,spatialReference:e.spatialReference.toJSON(),timeExtent:null==(s=e.timeExtent)?void 0:s.toJSON(),customParameters:e.customParameters},attributes:{fields:{},indexCount:0},processors:l,targets:n}}catch(e){if(e.fieldName===A)return J.error(e),null;throw e}}function Q(e,t){for(const i in t){const s=t[i];if(s.target!==e.name)continue;const l=e.attributes[i];l?(l.context.mesh=l.context.mesh||s.context.mesh,l.context.storage=l.context.storage||s.context.storage):e.attributes[i]=s}return e}function W(e){var t,i,s,l,n;return[null!=(t=null==(i=m(e.filter))?void 0:i.toJSON())?t:null,null!=(s=null==(l=m(null==(n=m(e.featureEffect))?void 0:n.filter))?void 0:l.toJSON())?s:null]}function X(e,t,i){return e.feature||(e.feature={name:"feature",input:"source",filters:t,attributes:{}}),Q(e.feature,i.attributes.fields),e}function ee(e,t){return t.field?te(e,{...t,type:"field",field:t.field}):t.valueExpression?te(e,{...t,type:"expression",valueExpression:t.valueExpression}):{field:null,fieldIndex:null}}function te(e,t){switch(t.type){case"expression":{const i=t.valueExpression;if(!e.fields[i]){const s=e.indexCount++;e.fields[i]={...t,name:i,fieldIndex:s}}return{fieldIndex:e.fields[i].fieldIndex}}case"label-expression":{const i=JSON.stringify(t.label);if(!e.fields[i]){const s=e.indexCount++;e.fields[i]={...t,name:i,fieldIndex:s}}return{fieldIndex:e.fields[i].fieldIndex}}case"field":{const i=t.field;return"aggregate"===t.target&&e.fields[i]||(e.fields[i]={...t,name:i}),{field:i}}case"statistic":return e.fields[t.name]={...t},{field:t.name}}}function ie(e,t,i,s,l,n=!1){const r=te(t,{type:"label-expression",target:s,context:{mesh:!0},resultType:"string",label:{labelExpression:i.labelExpression,labelExpressionInfo:i.labelExpressionInfo?{expression:i.labelExpressionInfo.expression}:null,symbol:!!i.symbol,where:i.where}}),{fieldIndex:a}=r,o=K(e);return{...h(i,o,n),fieldIndex:a,target:s,index:l}}function se(e,t){if(d(t)||!t.length)return null;t.length>1&&J.warn(`Layer rendering currently only supports ordering by 1 orderByInfo, but found ${t.length}. All but the first will be discarded`);const i=t[0],s="ascending"===i.order?"asc":"desc";return i.field?{field:i.field,order:s}:i.valueExpression?{fieldIndex:te(e,{type:"expression",target:"feature",valueExpression:i.valueExpression,resultType:"numeric"}).fieldIndex,order:s}:(J.error(new c(A,"Expected to find a field or valueExpression for OrderByInfo",i)),null)}function le(e,t,i){switch(i.type){case"dot-density":return function(e,t,i){return i&&i.length?{type:"dot-density",mapping:i.map(((i,s)=>{const{field:l,fieldIndex:n}=ee(e,{valueExpression:i.valueExpression,field:i.field,resultType:"numeric",target:t});return{binding:s,field:l,fieldIndex:n}})),target:t}:{type:"dot-density",mapping:[],target:t}}(e,t,i.attributes);case"simple":case"class-breaks":case"unique-value":case"dictionary":return function(e,t,i){if(!i||!i.length)return{type:"visual-variable",mapping:[],target:t};const s={storage:!0},l="numeric";return{type:"visual-variable",mapping:T(i).map((i=>{var n;const r=v(i.type),{field:a,fieldIndex:o}=ee(e,{target:t,valueExpression:i.valueExpression,field:i.field,context:s,resultType:l});switch(i.type){case"size":return"$view.scale"===i.valueExpression?null:{type:"size",binding:r,field:a,fieldIndex:o,normalizationField:ee(e,{target:t,field:i.normalizationField,context:s,resultType:l}).field,valueRepresentation:null!=(n=i.valueRepresentation)?n:null};case"color":return{type:"color",binding:r,field:a,fieldIndex:o,normalizationField:ee(e,{target:t,field:i.normalizationField,context:s,resultType:l}).field};case"opacity":return{type:"opacity",binding:r,field:a,fieldIndex:o,normalizationField:ee(e,{target:t,field:i.normalizationField,context:s,resultType:l}).field};case"rotation":return{type:"rotation",binding:r,field:a,fieldIndex:o}}})).filter((e=>e)),target:t}}(e,t,i.visualVariables);case"heatmap":return null}}function ne(e,t,i,s=!1){const l=b(e,{indexCount:0,fields:{}});switch(i.type){case"simple":case"dot-density":return function(e,t,i=!1){const s=t.getSymbols(),l=s.length?s[0]:null,n=K(t);return{type:"simple",symbol:h(l,n,i),stride:n.stride}}(0,i,s);case"class-breaks":return function(e,t,i,s=!1){const l={mesh:!0,use:"renderer.field"},n=i.backgroundFillSymbol,{field:r,fieldIndex:a}=ee(e,{target:t,field:i.field,valueExpression:i.valueExpression,resultType:"numeric",context:l}),o=i.normalizationType,u="log"===o?"esriNormalizeByLog":"percent-of-total"===o?"esriNormalizeByPercentOfTotal":"field"===o?"esriNormalizeByField":null,d=K(i),f=i.classBreakInfos.map((e=>({symbol:h(e.symbol,d,s),min:e.minValue,max:e.maxValue}))).sort(((e,t)=>e.min-t.min));return{type:"interval",attributes:e.fields,field:r,fieldIndex:a,backgroundFillSymbol:h(n,d,s),defaultSymbol:h(i.defaultSymbol,d,s),intervals:f,normalizationField:i.normalizationField,normalizationTotal:i.normalizationTotal,normalizationType:u,isMaxInclusive:i.isMaxInclusive,stride:d.stride}}(l,t,i,s);case"unique-value":return function(e,t,i,s=!1){const l=[],n=i.backgroundFillSymbol,r={target:t,context:{mesh:!0},resultType:"string"};if(i.field&&"string"!=typeof i.field)throw new c(A,"Expected renderer.field to be a string",i);const{field:a,fieldIndex:o}=ee(e,{...r,field:i.field,valueExpression:i.valueExpression}),u=K(i);for(const e of i.uniqueValueInfos)l.push({value:""+e.value,symbol:h(e.symbol,u,s)});return{type:"map",attributes:e.fields,field:a,fieldIndex:o,field2:ee(e,{...r,field:i.field2}).field,field3:ee(e,{...r,field:i.field3}).field,fieldDelimiter:i.fieldDelimiter,backgroundFillSymbol:h(n,u),defaultSymbol:h(i.defaultSymbol,u),map:l,stride:u.stride}}(l,t,i,s);case"dictionary":return function(e,t,i=!1){const s=K(t);return{type:"dictionary",config:t.config,fieldMap:t.fieldMap,scaleExpression:t.scaleExpression,url:t.url,symbolOptions:s,stride:s.stride}}(0,i,s)}}export{Y as I,ne as L,L as c,$ as d,j as f,K as h,B as m,I as s};
