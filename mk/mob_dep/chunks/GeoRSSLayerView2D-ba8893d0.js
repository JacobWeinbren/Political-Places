import{c_ as e,c8 as i,cb as s,e5 as t,e6 as r,F as o,bJ as a,V as p,X as l}from"../main.js";import{l as n,d as c}from"./LayerView-49288705.js";import{i as h}from"./GraphicContainer-465d9c4b.js";import{i as m}from"./BaseGraphicContainer-1c9ce090.js";import"./Container-eef7a929.js";import"./mat4f32-160ca33d.js";import"./Utils-a8f91238.js";import"./Texture-ab2a4298.js";import"./projectionSupport-a8705246.js";import"./json-ec4a3403.js";import"./Matcher-f1222421.js";import"./definitions-b96089d4.js";import"./TileStore-f03f0252.js";import"./FeatureSetReader-744d9dbc.js";import"./centroid-d99c71c7.js";import"./visualVariablesUtils-a45c5123.js";import"./visualVariablesUtils-f930304c.js";import"./quickselect-3fb5bfd6.js";import"./tileUtils-64bbcccd.js";import"./schemaUtils-8e78e427.js";import"./MaterialKey-26a1a6c6.js";import"./CIMSymbolHelper-5a941485.js";import"./Rect-9b1aa25a.js";import"./BidiEngine-3a569c03.js";import"./MD5-10d13cec.js";import"./GeometryUtils-fc4fdb28.js";import"./earcut-1e6231b8.js";import"./TileClipper-ccc490fb.js";import"./VertexArrayObject-31bdcc03.js";import"./FeatureContainer-4b4962f2.js";import"./TileContainer-a5b5c8c2.js";import"./WGLContainer-a94ee0ee.js";import"./ShaderCompiler-6ddab0fe.js";import"./config-fbb4c192.js";let y=class extends(n(c)){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}hitTest(e,i){if(this.suspended||!this.graphicsViews.length)return Promise.resolve(null);const s=this.graphicsViews.reverse().map((s=>s.hitTest(e,i)));return Promise.all(s).then((e=>e.filter(((e,i)=>(e&&(e.popupTemplate=this._popupTemplates.get(this.graphicsViews[i]),e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){if(this.graphicsViews)for(const i of this.graphicsViews)i.processUpdate(e)}attach(){this.layer.featureCollections.forEach((o=>{const a=e.fromJSON(o.featureSet),p=new(i.ofType(s))(a.features);let l;if(this._graphicsViewMap[a.geometryType])l=this._graphicsViewMap[a.geometryType],l.graphics.addMany(p);else{const e=o.layerDefinition.drawingInfo,i=o.popupInfo?t.fromJSON(o.popupInfo):null,s=r(e.renderer);l=new m({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:s,container:new h(this.view.featuresTilingScheme)}),this._graphicsViewMap[a.geometryType]=l,this._popupTemplates.set(l,i),"polygon"!==a.geometryType||this.layer.polygonSymbol?"polyline"!==a.geometryType||this.layer.lineSymbol?"point"!==a.geometryType||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}})),this.handles.add([o(this.layer,"polygonSymbol",(e=>{this._graphicsViewMap.polygon.renderer=new a({symbol:e})})),o(this.layer,"lineSymbol",(e=>{this._graphicsViewMap.polyline.renderer=new a({symbol:e})})),o(this.layer,"pointSymbol",(e=>{this._graphicsViewMap.point.renderer=new a({symbol:e})}))])}detach(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this.graphicsViews.length=0}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}};y=p([l("esri.views.2d.layers.GeoRSSLayerView2D")],y);var d=y;export default d;
