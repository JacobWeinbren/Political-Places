import{cK as e,da as i,r as t,g as s,ci as r,cf as o,Z as a,a0 as h}from"../main.js";import{f as p,u as n}from"./LayerView-bd7ec411.js";import{i as c}from"./GraphicContainer-6c3c8d36.js";import{r as l}from"./BaseGraphicContainer-0a21c1b2.js";import"./Container-8f96c744.js";import"./Utils-4efd2b2d.js";import"./enums-873d3e5a.js";import"./enums-1bc10a6c.js";import"./Texture-1175e9f5.js";import"./VertexElementDescriptor-3277c87e.js";import"./CIMSymbolHelper-79eed166.js";import"./BidiEngine-0fcd18f1.js";import"./MaterialKey-37656b1a.js";import"./GeometryUtils-6ecde86c.js";import"./projectionSupport-8e78150e.js";import"./json-a3f064db.js";import"./VertexArrayObject-47d07736.js";import"./FeatureContainer-1ceb8305.js";import"./TileContainer-dc56fab2.js";import"./WGLContainer-e5b769fe.js";import"./pixelUtils-5a36ade0.js";import"./ProgramTemplate-28d6e1e9.js";import"./StyleDefinition-3f884fc8.js";import"./config-0f36ebd6.js";import"./GeometryUtils-dd2125c2.js";import"./earcut-a218cde0.js";import"./visualVariablesUtils-9ae7ec21.js";import"./visualVariablesUtils-3ba7085d.js";import"./Matcher-30c233e8.js";import"./tileUtils-c160135b.js";import"./TileClipper-190e57cb.js";import"./Geometry-39a0d1c5.js";import"./ExpandedCIM-cdf56881.js";import"./devEnvironmentUtils-94bcfc53.js";import"./schemaUtils-cac6ecdf.js";import"./createSymbolSchema-ed6f55b3.js";import"./MD5-b72999e2.js";import"./util-713ce8b4.js";import"./ComputedAttributeStorage-87557582.js";import"./vec3f32-a3dab948.js";const d=["routeInfo","directionLines","directionPoints","polygonBarriers","polylineBarriers","pointBarriers","stops"],m=Object.freeze({remove(){},pause(){},resume(){}});let g=class extends(p(n)){constructor(){super(...arguments),this._graphicsViews=new Map,this._highlightIds=new Map}attach(){for(const r of d)this.handles.add(e((()=>t(this.layer[r])?"routeInfo"===r?[s(this.layer[r])]:s(this.layer[r]).toArray():null),(e=>this._createGraphicsView(r,e)),i),r)}detach(){this._destroyGraphicsViews()}highlight(e){let i;return"number"==typeof e?i=[e]:e instanceof r?i=[e.uid]:Array.isArray(e)&&e.length>0?i="number"==typeof e[0]?e:e.map((e=>e&&e.uid)):o.isCollection(e)&&(i=e.map((e=>e&&e.uid)).toArray()),i=i.filter((e=>null!=e)),i.length?(this._addHighlight(i),{remove:()=>this._removeHighlight(i)}):m}async hitTest(e,i){if(this.suspended||!this._graphicsViews.size)return Promise.resolve(null);const t=Array.from(this._graphicsViews.values()).reverse().map((i=>i.hitTest(e))).flat().filter((e=>!!e));for(const e of t)e.layer=this.layer,e.sourceLayer=this.layer;return t}moveStart(){}moveEnd(){}update(e){for(const i of this._graphicsViews.values())i.processUpdate(e)}viewChange(){for(const e of this._graphicsViews.values())e.viewChange()}isUpdating(){for(const e of this._graphicsViews.values())if(e.updating)return!0;return!1}_createGraphicsView(s,a){this._destroyGraphicsView(s);const h=this.view,p=new o(t(a)?a.map((e=>{const{attributes:i,geometry:t,symbol:s,popupInfo:o}=e.toPortalJSON();return r.fromJSON({attributes:i,geometry:t,symbol:s,popupTemplate:o})})):[]),n=new c(h.featuresTilingScheme),m=new l({container:n,graphics:p,requestUpdateCallback:()=>this.requestUpdate(),view:h});this._graphicsViews.set(s,m),this.container.addChildAt(n,d.indexOf(s)),this._updateHighlight(),this.handles.add([e((()=>m.updating),(()=>this.notifyChange("updating")),i)],`updating-${s}`)}_destroyGraphicsView(e){if(!this._graphicsViews.has(e))return;const i=this._graphicsViews.get(e);this.container.removeChild(i.container),i.destroy(),this.handles.remove(`updating-${e}`),this._graphicsViews.delete(e)}_destroyGraphicsViews(){this.container.removeAllChildren();for(const[e,i]of this._graphicsViews.entries())this.handles.remove(e),i.destroy();this._graphicsViews.clear()}_addHighlight(e){for(const i of e)if(this._highlightIds.has(i)){const e=this._highlightIds.get(i);this._highlightIds.set(i,e+1)}else this._highlightIds.set(i,1);this._updateHighlight()}_removeHighlight(e){for(const i of e)if(this._highlightIds.has(i)){const e=this._highlightIds.get(i)-1;0===e?this._highlightIds.delete(i):this._highlightIds.set(i,e)}this._updateHighlight()}_updateHighlight(){const e=Array.from(this._highlightIds.keys());for(const i of this._graphicsViews.values())i.setHighlight(e)}};g=a([h("esri.views.2d.layers.RouteLayerView2D")],g);const f=g;export{f as default};
