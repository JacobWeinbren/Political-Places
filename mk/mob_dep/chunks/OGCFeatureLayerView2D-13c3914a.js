import{V as e,W as i,X as a,a as r}from"../main.js";import{Z as s}from"./FeatureLayerView2D-6529454f.js";import"./clickToleranceUtils-bf4050f5.js";import"./definitions-402d8636.js";import"./LayerView-acc91003.js";import"./Container-d91ea2f4.js";import"./mat4f32-3672828c.js";import"./schemaUtils-9cccd5df.js";import"./Utils-d5caac3d.js";import"./Texture-7c4529c4.js";import"./MaterialKey-75c4d626.js";import"./visualVariablesUtils-e01ad04f.js";import"./CIMSymbolHelper-0f813792.js";import"./Rect-756e9a32.js";import"./BidiEngine-220e093f.js";import"./MD5-31e8fb3f.js";import"./popupUtils-a0cc3aff.js";import"./drapedUtils-504d48c5.js";const t=s=>{let t=class extends s{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new r("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([a("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(s)){};l=e([a("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export{o as default};
