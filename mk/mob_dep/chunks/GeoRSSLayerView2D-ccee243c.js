import{c_ as e,c8 as i,cb as s,e5 as t,e6 as r,F as a,bJ as o,V as p,X as l}from"../main.js";import{l as n,d as h}from"./LayerView-0ace4e88.js";import{i as m}from"./GraphicContainer-9e2cb84a.js";import{i as c}from"./BaseGraphicContainer-de4e5aad.js";import"./Container-0fee4f22.js";import"./mat4f32-160ca33d.js";import"./Utils-046fcbcc.js";import"./Texture-ab0e5baf.js";import"./projectionSupport-501e525a.js";import"./json-ec4a3403.js";import"./Matcher-1130744d.js";import"./definitions-b96089d4.js";import"./TileStore-b1a86870.js";import"./FeatureSetReader-c72312f8.js";import"./centroid-d99c71c7.js";import"./visualVariablesUtils-5ab30d26.js";import"./visualVariablesUtils-0afa6c0c.js";import"./quickselect-3fb5bfd6.js";import"./tileUtils-0cd99e2f.js";import"./schemaUtils-1909034e.js";import"./MaterialKey-57d0313b.js";import"./CIMSymbolHelper-6142334e.js";import"./Rect-9b1aa25a.js";import"./BidiEngine-3a569c03.js";import"./MD5-10d13cec.js";import"./GeometryUtils-fc4fdb28.js";import"./earcut-1e6231b8.js";import"./TileClipper-8f0e930b.js";import"./VertexArrayObject-ef2c71f4.js";import"./FeatureContainer-3a63dd68.js";import"./TileContainer-a5799f3e.js";import"./WGLContainer-976c5a4e.js";import"./ShaderCompiler-3d232de2.js";import"./config-fbb4c192.js";let y=class extends(n(h)){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}hitTest(e,i){if(this.suspended||!this.graphicsViews.length)return Promise.resolve(null);const s=this.graphicsViews.reverse().map((s=>s.hitTest(e,i)));return Promise.all(s).then((e=>e.filter(((e,i)=>(e&&(e.popupTemplate=this._popupTemplates.get(this.graphicsViews[i]),e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){if(this.graphicsViews)for(const i of this.graphicsViews)i.processUpdate(e)}attach(){this.layer.featureCollections.forEach((a=>{const o=e.fromJSON(a.featureSet),p=new(i.ofType(s))(o.features);let l;if(this._graphicsViewMap[o.geometryType])l=this._graphicsViewMap[o.geometryType],l.graphics.addMany(p);else{const e=a.layerDefinition.drawingInfo,i=a.popupInfo?t.fromJSON(a.popupInfo):null,s=r(e.renderer);l=new c({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:s,container:new m(this.view.featuresTilingScheme)}),this._graphicsViewMap[o.geometryType]=l,this._popupTemplates.set(l,i),"polygon"!==o.geometryType||this.layer.polygonSymbol?"polyline"!==o.geometryType||this.layer.lineSymbol?"point"!==o.geometryType||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}})),this.handles.add([a(this.layer,"polygonSymbol",(e=>{this._graphicsViewMap.polygon.renderer=new o({symbol:e})})),a(this.layer,"lineSymbol",(e=>{this._graphicsViewMap.polyline.renderer=new o({symbol:e})})),a(this.layer,"pointSymbol",(e=>{this._graphicsViewMap.point.renderer=new o({symbol:e})}))])}detach(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this.graphicsViews.length=0}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}};y=p([l("esri.views.2d.layers.GeoRSSLayerView2D")],y);var d=y;export default d;
