import{V as e,W as i,X as r,a as s}from"../main.js";import{Z as t}from"./FeatureLayerView2D-5f3fff91.js";import"./clickToleranceUtils-2a39ebc6.js";import"./definitions-d2881228.js";import"./LayerView-886c3c57.js";import"./Container-86f6907c.js";import"./mat4f32-3602232b.js";import"./schemaUtils-f5213e36.js";import"./Utils-bfc24ae7.js";import"./Texture-540c2561.js";import"./MaterialKey-6f3d079a.js";import"./visualVariablesUtils-a7e408b1.js";import"./CIMSymbolHelper-0e717ef9.js";import"./Rect-2a2f751d.js";import"./BidiEngine-c74f6d8f.js";import"./MD5-ebdd680e.js";import"./popupUtils-dbfc39f0.js";import"./drapedUtils-8cec5c02.js";const a=t=>{let a=class extends t{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new s("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],a.prototype,"layer",void 0),e([i({readOnly:!0})],a.prototype,"availableFields",null),a=e([r("esri.views.layers.OGCFeatureLayerView")],a),a};let l=class extends(a(t)){};l=e([r("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export default o;
