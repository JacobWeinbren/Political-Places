import{W as e,cj as t,ck as i,r,d9 as s,cn as o,e as a,g as n,g_ as l,cu as p,cS as d,d as u,Z as y,_ as c,a0 as m,iX as f,iY as h,iZ as g,ip as w,i_ as v,ir as F,iq as b,ee as O,ef as j,eg as S,ek as I,aV as x,i$ as R,j0 as q,es as T,cq as P,bB as U,iw as E,c$ as _,iJ as N,j1 as C,bJ as J,j2 as k,j3 as W,j4 as X,iR as Y,it as D,kc as Q,iz as L,de as V,j6 as G,iy as z,j7 as B,ej as Z,iA as $}from"../main.js";import{c as A,n as M}from"./clientSideDefaults-be1e4608.js";import{D as H,X as K,z as ee,W as te,v as ie}from"./wfsUtils-e7022e21.js";import"./QueryEngineCapabilities-ec743cd2.js";import"./geojson-c3700ba2.js";import"./xmlUtils-e01d8fb8.js";let re=class extends(e(t)){constructor(){super(...arguments),this.capabilities=A(!1,!1),this.type="wfs",this.refresh=i((async e=>{await this.load();const{extent:t}=await this._connection.invoke("refresh",e);return this.sourceJSON.extent=t,{dataChanged:!0,updates:{extent:this.sourceJSON.extent}}}))}load(e){var t;const i=null!=(t=r(e)&&e.signal)?t:null;return this.addResolvingPromise(this._startWorker({signal:i})),Promise.resolve(this)}destroy(){var e;null==(e=this._connection)||e.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,t={}){await this.load(t);const i=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return s.fromJSON(i)}async queryFeaturesJSON(e,t={}){return await this.load(t),this._connection.invoke("queryFeatures",e?e.toJSON():null,t)}async queryFeatureCount(e,t={}){return await this.load(t),this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)}async queryObjectIds(e,t={}){return await this.load(t),this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)}async queryExtent(e,t={}){await this.load(t);const i=await this._connection.invoke("queryExtent",e?e.toJSON():null,t);return{count:i.count,extent:o.fromJSON(i.extent)}}async querySnapping(e,t={}){return await this.load(t),this._connection.invoke("querySnapping",e,t)}async _createLoadOptions(e){const{url:t,customParameters:i,name:r,namespaceUri:s,spatialReference:o,fields:p,geometryType:d,swapXY:u}=this.layer;if(!t)throw new a("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await H(t,{customParameters:i,...e}));const y=["fields","geometryType","name","namespaceUri","spatialReference","swapXY"].some((e=>null==this.layer[e])),c=y?await K(this.wfsCapabilities,r,s,{spatialReference:o,customParameters:i,signal:null==e?void 0:e.signal}):{...ee(p),geometryType:d,name:r,namespaceUri:s,spatialReference:o,swapXY:u},m=n(te(this.wfsCapabilities.readFeatureTypes(),c.name,c.namespaceUri)),f=l.toJSON(c.geometryType);return{customParameters:i,featureType:m,fields:c.fields.map((e=>e.toJSON())),geometryField:c.geometryField,geometryType:f,getFeatureUrl:this.wfsCapabilities.operations.GetFeature.url,getFeatureOutputFormat:this.wfsCapabilities.operations.GetFeature.outputFormat,objectIdField:c.objectIdField,spatialReference:c.spatialReference.toJSON(),swapXY:c.swapXY}}async _startWorker(e){const[t,i]=await p([this._createLoadOptions(e),d("WFSSourceWorker",{...e,strategy:u("feature-layers-workers")?"dedicated":"local"})]),r=t.error||i.error||null,s=i.value||null;if(r)throw s&&s.close(),r;const o=t.value;this._connection=i.value;const{extent:a}=await this._connection.invoke("load",o,e);this.sourceJSON={extent:a,fields:o.fields,geometryType:o.geometryType,objectIdField:o.objectIdField,geometryField:o.geometryField,drawingInfo:M(o.geometryType),name:o.featureType.title,wfsInfo:{name:o.featureType.name,featureUrl:o.getFeatureUrl,maxFeatures:3e3,swapXY:o.swapXY,supportedSpatialReferences:o.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:o.featureType.namespaceUri}}}};y([c()],re.prototype,"capabilities",void 0),y([c({constructOnly:!0})],re.prototype,"layer",void 0),y([c()],re.prototype,"sourceJSON",void 0),y([c()],re.prototype,"type",void 0),y([c()],re.prototype,"wfsCapabilities",void 0),re=y([m("esri.layers.graphics.sources.WFSSource")],re);const se=re;var oe;const ae=$();let ne=oe=class extends(f(h(g(w(v(F(b(O(j(S(I))))))))))){constructor(e){super(e),this.capabilities=null,this.copyright=null,this.customParameters=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureReduction=null,this.featureUrl=void 0,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="WFS",this.maxFeatures=3e3,this.mode=0,this.name=null,this.namespaceUri=null,this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new se({layer:this}),this.spatialReference=x.WGS84,this.spatialReferences=[4326],this.swapXY=void 0,this.title="WFS",this.type="wfs",this.url=null,this.version=void 0}static fromWFSLayerInfo(e){const{customParameters:t,fields:i,geometryField:r,geometryType:s,name:o,namespaceUri:a,objectIdField:n,spatialReference:l,swapXY:p,url:d,wfsCapabilities:u}=e;return new oe({customParameters:t,fields:i,geometryField:r,geometryType:s,name:o,namespaceUri:a,objectIdField:n,spatialReference:l,swapXY:p,url:d,wfsCapabilities:u})}destroy(){var e;null==(e=this.source)||e.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WFS"]},e).then((()=>this.source.load(e))).then((()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo","spatialReference","name","namespaceUri"],"service"),R(this.renderer,this.fieldsIndex),q(this.timeInfo,this.fieldsIndex)}))),Promise.resolve(this)}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}writeFields(e,t,i){const r=e.filter((e=>e.name!==ie));this.geometryField&&r.unshift(new T({name:this.geometryField,alias:this.geometryField,type:"geometry"})),P(i,r.map((e=>e.toJSON())),t)}get parsedUrl(){return this.url?U(this.url):null}set renderer(e){R(e,this.fieldsIndex),this._set("renderer",e)}createPopupTemplate(e){return E(this,e)}createQuery(){const e=new _;e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:t,timeExtent:i}=this;return e.timeExtent=null!=t&&null!=i?i.offset(-t.value,t.unit):i||null,e}getFieldDomain(e,t){var i;return null==(i=this.getField(e))?void 0:i.domain}getField(e){return this.fieldsIndex.get(e)}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(_.from(e)||this.createQuery(),t))).then((e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this.load().then((()=>this.source.queryObjectIds(_.from(e)||this.createQuery(),t)))}queryFeatureCount(e,t){return this.load().then((()=>this.source.queryFeatureCount(_.from(e)||this.createQuery(),t)))}queryExtent(e,t){return this.load().then((()=>this.source.queryExtent(_.from(e)||this.createQuery(),t)))}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh(this.customParameters);return r(t)&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};y([c({readOnly:!0,aliasOf:"source.capabilities"})],ne.prototype,"capabilities",void 0),y([c({type:String})],ne.prototype,"copyright",void 0),y([c({readOnly:!0})],ne.prototype,"createQueryVersion",null),y([c({json:{name:"wfsInfo.customParameters",write:{ignoreOrigin:!0}}})],ne.prototype,"customParameters",void 0),y([c({readOnly:!0})],ne.prototype,"defaultPopupTemplate",null),y([c({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],ne.prototype,"definitionExpression",void 0),y([c({type:String})],ne.prototype,"displayField",void 0),y([c(N)],ne.prototype,"elevationInfo",void 0),y([c(C)],ne.prototype,"featureReduction",void 0),y([c({type:String,readOnly:!0,json:{name:"wfsInfo.featureUrl",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"featureUrl",void 0),y([c({type:[T],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],ne.prototype,"fields",void 0),y([J("fields")],ne.prototype,"writeFields",null),y([c(ae.fieldsIndex)],ne.prototype,"fieldsIndex",void 0),y([c({type:o,json:{name:"extent"}})],ne.prototype,"fullExtent",void 0),y([c()],ne.prototype,"geometryField",void 0),y([c({type:String,json:{read:{source:"layerDefinition.geometryType",reader:l.read},write:{target:"layerDefinition.geometryType",writer:l.write,ignoreOrigin:!0},origins:{service:{read:l.read}}}})],ne.prototype,"geometryType",void 0),y([c({type:String})],ne.prototype,"id",void 0),y([c(k)],ne.prototype,"labelsVisible",void 0),y([c({type:[W],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:X},write:!0}})],ne.prototype,"labelingInfo",void 0),y([c(Y)],ne.prototype,"legendEnabled",void 0),y([c({type:["show","hide"]})],ne.prototype,"listMode",void 0),y([c({type:String})],ne.prototype,"objectIdField",void 0),y([c({type:["WFS"]})],ne.prototype,"operationalLayerType",void 0),y([c({type:D,json:{name:"wfsInfo.maxFeatures",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"maxFeatures",void 0),y([c({type:[0],readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],ne.prototype,"mode",void 0),y([c({type:String,json:{name:"wfsInfo.name",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"name",void 0),y([c({type:String,json:{name:"wfsInfo.wfsNamespace",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"namespaceUri",void 0),y([c(Q)],ne.prototype,"opacity",void 0),y([c(ae.outFields)],ne.prototype,"outFields",void 0),y([c({readOnly:!0})],ne.prototype,"parsedUrl",null),y([c(L)],ne.prototype,"popupEnabled",void 0),y([c({type:V,json:{name:"popupInfo",write:!0}})],ne.prototype,"popupTemplate",void 0),y([c({types:G,json:{origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:z,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:{ignoreOrigin:!0}}})],ne.prototype,"renderer",null),y([c(B)],ne.prototype,"screenSizePerspectiveEnabled",void 0),y([c({readOnly:!0})],ne.prototype,"source",void 0),y([c({type:x,json:{name:"layerDefinition.spatialReference",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"extent.spatialReference"}}}})],ne.prototype,"spatialReference",void 0),y([c({readOnly:!0,type:[D],json:{name:"wfsInfo.supportedSpatialReferences",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"spatialReferences",void 0),y([c({type:Boolean,value:!1,json:{name:"wfsInfo.swapXY",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"swapXY",void 0),y([c({json:{write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"name"}}}})],ne.prototype,"title",void 0),y([c({json:{read:!1},readOnly:!0})],ne.prototype,"type",void 0),y([c(Z)],ne.prototype,"url",void 0),y([c({type:String,readOnly:!0,json:{name:"wfsInfo.version",write:{ignoreOrigin:!0,isRequired:!0}}})],ne.prototype,"version",void 0),y([c({aliasOf:"source.wfsCapabilities"})],ne.prototype,"wfsCapabilities",void 0),ne=oe=y([m("esri.layers.WFSLayer")],ne);const le=ne;export{le as default};
