import{V as e,W as i,X as r,a}from"../main.js";import{Z as s}from"./FeatureLayerView2D-9856c4c7.js";import"./clickToleranceUtils-bf4050f5.js";import"./definitions-402d8636.js";import"./LayerView-610af4b1.js";import"./Container-34d2b29c.js";import"./mat4f32-3672828c.js";import"./schemaUtils-e8c72ec7.js";import"./Utils-e7ce534a.js";import"./Texture-c9c9115e.js";import"./MaterialKey-3ad0d369.js";import"./visualVariablesUtils-d31e01fa.js";import"./CIMSymbolHelper-e4a324b8.js";import"./Rect-756e9a32.js";import"./BidiEngine-220e093f.js";import"./MD5-31e8fb3f.js";import"./popupUtils-4b7ff69c.js";import"./drapedUtils-7c304ad9.js";const t=s=>{let t=class extends s{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new a("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([r("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(s)){};l=e([r("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export{o as default};
