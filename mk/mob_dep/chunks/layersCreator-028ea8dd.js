import{cu as e,cv as r,cw as a,cf as y}from"../main.js";import{a as t}from"./lazyLayerLoader-3e3cd615.js";import{selectLayerClassPath as i}from"./portalLayers-643697e0.js";import"./layersLoader-e6fa6cec.js";import"./jsonContext-7192f311.js";function n(e,r){return!(!e.layerType||"ArcGISFeatureLayer"!==e.layerType)&&e.featureCollectionType===r}async function L(r,a,y){if(!a)return;const t=[];for(const e of a){const r=S(e,y);"GroupLayer"===e.layerType?t.push(g(r,e,y)):t.push(r)}const i=await e(t);for(const e of i)!e.value||y.filter&&!y.filter(e.value)||r.add(e.value)}const l={ArcGISFeatureLayer:"FeatureLayer",ArcGISImageServiceLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",PointCloudLayer:"PointCloudLayer",ArcGISSceneServiceLayer:"SceneLayer",IntegratedMeshLayer:"IntegratedMeshLayer",OGCFeatureLayer:"OGCFeatureLayer",BuildingSceneLayer:"BuildingSceneLayer",ArcGISTiledElevationServiceLayer:"ElevationLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",GroupLayer:"GroupLayer",GeoJSON:"GeoJSONLayer",WebTiledLayer:"WebTileLayer",CSV:"CSVLayer",VectorTileLayer:"VectorTileLayer",WFS:"WFSLayer",WMS:"WMSLayer",DefaultTileLayer:"TileLayer",KML:"KMLLayer",RasterDataLayer:"UnsupportedLayer",Voxel:"VoxelLayer"},o={ArcGISTiledElevationServiceLayer:"ElevationLayer",DefaultTileLayer:"ElevationLayer",RasterDataElevationLayer:"UnsupportedLayer"},c={ArcGISTiledMapServiceLayer:"TileLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",OpenStreetMap:"OpenStreetMapLayer",WebTiledLayer:"WebTileLayer",VectorTileLayer:"VectorTileLayer",ArcGISImageServiceLayer:"UnsupportedLayer",WMS:"UnsupportedLayer",ArcGISMapServiceLayer:"UnsupportedLayer",DefaultTileLayer:"TileLayer"},s={ArcGISFeatureLayer:"FeatureLayer",ArcGISImageServiceLayer:"ImageryLayer",ArcGISImageServiceVectorLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISStreamLayer:"StreamLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",BingMapsAerial:"BingMapsLayer",BingMapsRoad:"BingMapsLayer",BingMapsHybrid:"BingMapsLayer",CSV:"CSVLayer",DefaultTileLayer:"TileLayer",GeoRSS:"GeoRSSLayer",GeoJSON:"GeoJSONLayer",GroupLayer:"GroupLayer",KML:"KMLLayer",OGCFeatureLayer:"OGCFeatureLayer",SubtypeGroupLayer:"UnsupportedLayer",VectorTileLayer:"VectorTileLayer",WFS:"WFSLayer",WMS:"WMSLayer",WebTiledLayer:"WebTileLayer"},u={ArcGISFeatureLayer:"FeatureLayer"},p={ArcGISImageServiceLayer:"ImageryLayer",ArcGISImageServiceVectorLayer:"ImageryLayer",ArcGISMapServiceLayer:"MapImageLayer",ArcGISTiledImageServiceLayer:"ImageryTileLayer",ArcGISTiledMapServiceLayer:"TileLayer",OpenStreetMap:"OpenStreetMapLayer",VectorTileLayer:"VectorTileLayer",WebTiledLayer:"WebTileLayer",BingMapsAerial:"BingMapsLayer",BingMapsRoad:"BingMapsLayer",BingMapsHybrid:"BingMapsLayer",WMS:"WMSLayer",DefaultTileLayer:"TileLayer"};async function S(e,a){return async function(e,a,y){const t=new e;return t.read(a,y.context),"group"===t.type&&I(a)&&await G(t,a,y.context),await r(t,y.context),t}(await d(e,a),e,a)}async function d(e,r){const y=r.context,L=f(y);let l=e.layerType||e.type;!l&&r&&r.defaultLayerType&&(l=r.defaultLayerType);const o=L[l];let c=o?t[o]:t.UnknownLayer;if(T(e)){const r=null==y?void 0:y.portal;if(e.itemId){const y=new a({id:e.itemId,portal:r});await y.load();const n=(await i(y)).className||"UnknownLayer";c=t[n]}}else"ArcGISFeatureLayer"===l?function(e){return n(e,"notes")}(e)?c=t.MapNotesLayer:function(e){return n(e,"route")}(e)?c=t.RouteLayer:I(e)&&(c=t.GroupLayer):e.wmtsInfo&&e.wmtsInfo.url&&e.wmtsInfo.layerIdentifier?c=t.WMTSLayer:"WFS"===l&&"2.0.0"!==e.wfsInfo.version&&(c=t.UnsupportedLayer);return c()}function I(e){var r,a,y;return"ArcGISFeatureLayer"===e.layerType&&!T(e)&&(null!=(r=null==(a=e.featureCollection)||null==(y=a.layers)?void 0:y.length)?r:0)>1}function T(e){return"Feature Collection"===e.type}function f(e){let r;if("web-scene"===e.origin)switch(e.layerContainerType){case"basemap":r=c;break;case"ground":r=o;break;default:r=l}else switch(e.layerContainerType){case"basemap":r=p;break;case"tables":r=u;break;default:r=s}return r}async function g(e,r,a){const t=new y,i=L(t,Array.isArray(r.layers)?r.layers:[],a),n=await e;if(await i,"group"===n.type)return n.layers.addMany(t),n}async function G(e,r,a){const y=t.FeatureLayer,i=await y(),n=r.featureCollection,L=n.showLegend,l=n.layers.map(((y,t)=>{var n,l;const o=new i;o.read(y,a);const c={...a,ignoreDefaults:!0};return o.read({id:`${e.id}-sublayer-${t}`,visibility:null==(n=null==(l=r.visibleLayers)?void 0:l.includes(t))||n},c),null!=L&&o.read({showLegend:L},c),o}));e.layers.addMany(l)}export{L as populateOperationalLayers};
