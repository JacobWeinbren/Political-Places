import{im as t,V as i,X as e,io as n}from"../main.js";import{n as s}from"./BitmapTileContainer-6a3a381a.js";import{o as r}from"./BaseTileRenderer-c44182f2.js";import"./Bitmap-a7aaa5d8.js";import"./VertexArrayObject-26ade333.js";import"./Texture-540c2561.js";import"./Container-86f6907c.js";import"./mat4f32-3602232b.js";import"./TileContainer-d8b31436.js";import"./Utils-bfc24ae7.js";import"./WGLContainer-8f1364fd.js";import"./definitions-d2881228.js";import"./ShaderCompiler-53247c93.js";import"./config-11925df6.js";import"./GeometryUtils-36292364.js";import"./MaterialKey-6f3d079a.js";import"./earcut-f9170578.js";class a{constructor(){this.gradient=null,this.height=512,this.width=512}render(i){t(i,512,this.intensities,this.gradient,this.minPixelIntensity,this.maxPixelIntensity)}}let o=class extends r{constructor(t){super(t),this._intensityInfo={minPixelIntensity:0,maxPixelIntensity:0},this.featuresView={attributeView:{initialize:()=>{},requestUpdate:()=>{}},requestRender:()=>{}},this._container=new s(t.tileInfoView)}createTile(t){const i=this._container.createTile(t);return this.tileInfoView.getTileCoords(i.bitmap,t),i.bitmap.resolution=this.tileInfoView.getTileResolution(t),i}onConfigUpdate(){const t=this.layer.renderer;if("heatmap"===t.type){const{minPixelIntensity:i,maxPixelIntensity:e}=t;this._intensityInfo.minPixelIntensity=i,this._intensityInfo.maxPixelIntensity=e,this._gradient=n(t.toJSON()),this.tiles.forEach((t=>{const n=t.bitmap.source;n&&(n.minPixelIntensity=i,n.maxPixelIntensity=e,n.gradient=this._gradient,t.bitmap.invalidateTexture())}))}}hitTest(){return Promise.resolve([])}install(t){t.addChild(this._container)}uninstall(t){this._container.removeAllChildren(),t.removeChild(this._container)}disposeTile(t){this._container.removeChild(t),t.destroy()}supportsRenderer(t){return t&&"heatmap"===t.type}onTileData(t){const i=this.tiles.get(t.tileKey);if(!i)return;const e=t.intensityInfo,{minPixelIntensity:n,maxPixelIntensity:s}=this._intensityInfo,r=i.bitmap.source||new a;r.intensities=e&&e.matrix||null,r.minPixelIntensity=n,r.maxPixelIntensity=s,r.gradient=this._gradient,i.bitmap.source=r,this._container.addChild(i),this.requestUpdate()}onTileError(t){console.error(t)}lockGPUUploads(){}unlockGPUUploads(){}};o=i([e("esri.views.2d.layers.features.tileRenderers.HeatmapTileRenderer")],o);var l=o;export default l;
