import{s as e,Z as t,_ as i,a0 as r,X as s,j as a,ci as o,r as n,ck as l,cn as h,t as p,di as d,g as c,cK as u,cN as m,C as y,cW as g,e as w,c$ as v,a8 as x,dj as b,dk as f,cf as _}from"../main.js";import{_ as j,d as P}from"./RasterVFDisplayObject-1842aadc.js";import{f as R,u as V}from"./LayerView-bd7ec411.js";import{r as E}from"./BaseGraphicContainer-0a21c1b2.js";import{n as S}from"./HighlightGraphicContainer-2d3c2d82.js";import{d as D}from"./pixelUtils-5a36ade0.js";import{t as T}from"./BitmapContainer-d236bc3d.js";import{s as q}from"./Container-8f96c744.js";import{i as B}from"./Bitmap-95c55ca6.js";import{S as k}from"./ExportStrategy-3761539c.js";import{B as C}from"./rasterProjectionHelper-98d50696.js";import{g as U,d as F}from"./dataUtils-176d17ed.js";import{b as I,d as A}from"./WGLContainer-e5b769fe.js";import{I as z}from"./Utils-4efd2b2d.js";import{d as M}from"./popupUtils-dd0cff5d.js";import{i as O}from"./RefreshableLayerView-4e2e6ef8.js";import"./VertexArrayObject-47d07736.js";import"./Texture-1175e9f5.js";import"./enums-1bc10a6c.js";import"./VertexElementDescriptor-3277c87e.js";import"./CIMSymbolHelper-79eed166.js";import"./BidiEngine-0fcd18f1.js";import"./enums-873d3e5a.js";import"./MaterialKey-37656b1a.js";import"./GeometryUtils-6ecde86c.js";import"./projectionSupport-8e78150e.js";import"./json-a3f064db.js";import"./FeatureContainer-1ceb8305.js";import"./TileContainer-dc56fab2.js";import"./visualVariablesUtils-9ae7ec21.js";import"./visualVariablesUtils-3ba7085d.js";import"./Matcher-30c233e8.js";import"./tileUtils-c160135b.js";import"./TileClipper-190e57cb.js";import"./Geometry-39a0d1c5.js";import"./GeometryUtils-dd2125c2.js";import"./ExpandedCIM-cdf56881.js";import"./earcut-a218cde0.js";import"./devEnvironmentUtils-94bcfc53.js";import"./schemaUtils-cac6ecdf.js";import"./createSymbolSchema-ed6f55b3.js";import"./MD5-b72999e2.js";import"./util-713ce8b4.js";import"./ComputedAttributeStorage-87557582.js";import"./vec3f32-a3dab948.js";import"./ProgramTemplate-28d6e1e9.js";import"./StyleDefinition-3f884fc8.js";import"./config-0f36ebd6.js";const G=e.getLogger("esri.views.2d.layers.imagery.ImageryView2D");let N=class extends s{constructor(){super(...arguments),this.attached=!1,this.container=new q,this.updateRequested=!1,this.type="imagery",this._bitmapView=new T}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(e){this.strategy.update(e).catch((e=>{a(e)||G.error(e)}))}hitTest(e){return new o({attributes:{},geometry:e.clone(),layer:this.layer})}attach(){this.container.addChild(this._bitmapView);const e=this.layer.version>=10,t=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this.strategy=new k({container:this._bitmapView,imageNormalizationSupported:e,imageMaxHeight:t,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren(),this.updateRequested=!1}redraw(){this.strategy.updateExports((e=>{e.source instanceof HTMLImageElement?e.requestRender():this.layer.applyRenderer({pixelBlock:e.source.pixelBlock}).then((t=>{const i=e.source;i.pixelBlock=t.pixelBlock,i.filter=e=>this.layer.applyFilter(e),this.container.requestRender()}))}))}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const e=this.strategy.bitmaps;if(1===e.length&&e[0].source)return{extent:e[0].source.extent,pixelBlock:e[0].source.originalPixelBlock};if(e.length>1){const t=this.view.extent,i=e.map((e=>e.source)).filter((e=>e.extent&&e.extent.intersects(t))).map((e=>({extent:e.extent,pixelBlock:e.originalPixelBlock}))),r=D(i,t);return n(r)?{extent:r.extent,pixelBlock:r.pixelBlock}:null}return null}_fetchImage(e,t,i,r){return(r=r||{}).timeExtent=this.timeExtent,r.requestAsImageElement=!0,this.layer.fetchImage(e,t,i,r).then((e=>e.imageElement?e.imageElement:this.layer.applyRenderer(e.pixelData,{signal:r.signal}).then((t=>{const i=new B(t.pixelBlock,t.extent.clone(),e.pixelData.pixelBlock);return i.filter=e=>this.layer.applyFilter(e),i}))))}};t([i()],N.prototype,"attached",void 0),t([i()],N.prototype,"container",void 0),t([i()],N.prototype,"layer",void 0),t([i()],N.prototype,"strategy",void 0),t([i()],N.prototype,"timeExtent",void 0),t([i()],N.prototype,"view",void 0),t([i()],N.prototype,"updateRequested",void 0),t([i()],N.prototype,"updating",null),t([i()],N.prototype,"type",void 0),N=t([r("esri.views.2d.layers.imagery.ImageryView2D")],N);const L=N;class $ extends I{constructor(){super(...arguments),this.symbolTypes=["triangle"]}get requiresDedicatedFBO(){return!1}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (vf)",brushes:[A],target:()=>this.children,drawPhase:z.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){this.visible&&e.drawPhase===z.MAP&&this.symbolTypes.forEach((t=>{e.renderPass=t,super.doRender(e)}))}}const H=e.getLogger("esri.views.2d.layers.imagery.VectorFieldView2D");let J=class extends s{constructor(e){super(e),this.update=l(((e,t)=>this._update(e,t).catch((e=>{a(e)||H.error(e)}))))}get updating(){return!!this._loading}redraw(e){if(!this.container.children.length)return;const t=this.container.children[0];t.symbolizerParameters=e,t.invalidateVAO(),this.container.symbolTypes="wind_speed"===e.style?["scalar","triangle"]:"simple_scalar"===e.style?["scalar"]:["triangle"],this.container.requestRender()}async _update(e,t,i){if(!e.stationary)return;const{extent:r,spatialReference:s}=e.state,a=new h({xmin:r.xmin,ymin:r.ymin,xmax:r.xmax,ymax:r.ymax,spatialReference:s}),[o,n]=e.state.size;this._loading=this.fetchPixels(a,o,n,i);const l=await this._loading;this._addToDisplay(l,t,e.state),this._loading=null}_addToDisplay(e,t,i){if(p(e.pixelBlock))return this.container.children.forEach((e=>e.destroy())),void this.container.removeAllChildren();const{extent:r,pixelBlock:s}=e,a=new j(s);a.offset=[0,0],a.symbolizerParameters=t,a.rawPixelData=e,a.invalidateVAO(),a.x=r.xmin,a.y=r.ymax,a.pixelRatio=i.pixelRatio,a.rotation=i.rotation,a.resolution=i.resolution,a.width=s.width*t.symbolTileSize,a.height=s.height*t.symbolTileSize,this.container.children.forEach((e=>e.destroy())),this.container.removeAllChildren(),this.container.symbolTypes="wind_speed"===t.style?["scalar","triangle"]:"simple_scalar"===t.style?["scalar"]:["triangle"],this.container.addChild(a)}};t([i()],J.prototype,"fetchPixels",void 0),t([i()],J.prototype,"container",void 0),t([i()],J.prototype,"_loading",void 0),t([i()],J.prototype,"updating",null),J=t([r("esri.views.2d.layers.imagery.ImageryVFStrategy")],J);const W=J;let K=class extends d{constructor(){super(...arguments),this.attached=!1,this.container=new $,this.type="imageryVF",this._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},this._fetchpixels=async(e,t,i,r)=>{const s=await this._projectFullExtentPromise,{symbolTileSize:a}=this.layer.renderer,{extent:o,width:l,height:h}=U(e,t,i,a,s);if(n(s)&&!s.intersects(e))return{extent:o,pixelBlock:null};const d={bbox:`${o.xmin}, ${o.ymin}, ${o.xmax}, ${o.ymax}`,exportParametersVersion:this.layer.exportImageServiceParameters.version,symbolTileSize:a,time:JSON.stringify(this.timeExtent||"")};if(this._canReuseVectorFieldData(d)){const e=this.getPixelData();if(n(e)&&`${e.extent.xmin}, ${e.extent.ymin}, ${e.extent.xmax}, ${e.extent.ymax}`===d.bbox)return e}const{pixelData:u}=await this.layer.fetchImage(o,l,h,{timeExtent:this.timeExtent,requestAsImageElement:!1,signal:r});return this._dataParameters=d,p(u.pixelBlock)?{extent:o,pixelBlock:null}:{extent:o,pixelBlock:"vector-uv"===this.layer.rasterInfo.dataType?c(F(u.pixelBlock,"vector-uv")):u.pixelBlock}}}get updating(){return!this.attached||this._strategy.updating}attach(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new W({container:this.container,fetchPixels:this._fetchpixels}),this.handles.add(u((()=>this.layer.renderer),(e=>this._updateSymbolizerParams(e)),m),"vector-field-view-update")}detach(){this._strategy.destroy(),this.container.children.forEach((e=>e.destroy())),this.container.removeAllChildren(),this.handles.remove("vector-field-view-update"),this._strategy=this.container=this._projectFullExtentPromise=null}getPixelData(){if(this.updating||!this.container.children.length)return null;const{extent:e,pixelBlock:t}=this.container.children[0].rawPixelData;return{extent:e,pixelBlock:t}}hitTest(e){return new o({attributes:{},geometry:e.clone(),layer:this.layer})}update(e){this._strategy.update(e,this._symbolizerParams)}redraw(){this._updateSymbolizerParams(this.layer.renderer),this._strategy.redraw(this._symbolizerParams)}_canReuseVectorFieldData(e){const t=this._dataParameters.exportParametersVersion===e.exportParametersVersion,i=this._dataParameters.time===e.time,r=this._dataParameters.symbolTileSize===e.symbolTileSize,s=this._dataParameters.bbox===e.bbox;return t&&i&&r&&s}async _getProjectedFullExtent(e){try{return await C(this.layer.fullExtent,e)}catch(t){try{const t=(await y(this.layer.url,{query:{option:"footprints",outSR:e.wkid||JSON.stringify(e.toJSON()),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return t?h.fromJSON(t):null}catch{return null}}}_updateSymbolizerParams(e){"vector-field"===e.type&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))}};t([i()],K.prototype,"attached",void 0),t([i()],K.prototype,"container",void 0),t([i()],K.prototype,"layer",void 0),t([i()],K.prototype,"timeExtent",void 0),t([i()],K.prototype,"type",void 0),t([i()],K.prototype,"view",void 0),t([i()],K.prototype,"updating",null),K=t([r("esri.views.2d.layers.imagery.VectorFieldView2D")],K);const X=K,Z=e=>{let s=class extends e{constructor(){super(...arguments),this.view=null}async fetchPopupFeatures(e,t){const{layer:i}=this;if(!e)throw new w("imagerylayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:i});const{popupEnabled:r}=i,s=M(i,t);if(!r||!n(s))throw new w("imagerylayerview:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:r,popupTemplate:s});const a=await s.getRequiredFields(),o=new v;o.timeExtent=this.timeExtent,o.geometry=e,o.outFields=a,o.outSpatialReference=e.spatialReference;const l=this.view.resolution,h="2d"===this.view.type?new x(l,l,this.view.spatialReference):new x(.5*l,.5*l,this.view.spatialReference),{returnTopmostRaster:p,showNoDataRecords:d}=s.layerOptions||{returnTopmostRaster:!0,showNoDataRecords:!1},c={returnDomainValues:!0,returnTopmostRaster:p,pixelSize:h,showNoDataRecords:d,signal:n(t)?t.signal:null};return i.queryVisibleRasters(o,c).then((e=>e))}canResume(){var e;return!(!super.canResume()||null!=(e=this.timeExtent)&&e.isEmpty)}};return t([i()],s.prototype,"layer",void 0),t([i()],s.prototype,"suspended",void 0),t([i(g)],s.prototype,"timeExtent",void 0),t([i()],s.prototype,"view",void 0),s=t([r("esri.views.layers.ImageryLayerView")],s),s};let Q=class extends(Z(O(R(V)))){constructor(){super(...arguments),this._exportImageVersion=-1,this._highlightGraphics=new b,this.subview=null}get pixelData(){return this.updating?null:"getPixelData"in this.subview?this.subview.getPixelData():null}get updating(){return!!(!this.subview||"updating"in this.subview&&this.subview.updating)}async hitTest(e,t){return this.subview?[this.subview.hitTest(e)]:null}update(e){var t;null==(t=this.subview)||t.update(e)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.view&&(this._highlightView=new E({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new S(this.view.featuresTilingScheme)}),this.container.addChild(this._highlightView.container)),this.handles.add([u((()=>{var e;return null!=(e=this.layer.blendMode)?e:"normal"}),(e=>this.subview.container.blendMode=e),m),u((()=>{var e;return null!=(e=this.layer.effect)?e:null}),(e=>this.subview.container.effect=e),m),u((()=>this.layer.exportImageServiceParameters.version),(e=>{e&&this._exportImageVersion!==e&&(this._exportImageVersion=e,this.requestUpdate())}),f),u((()=>this.timeExtent),(e=>{this.subview.timeExtent=e,"redraw"in this.subview?this.requestUpdate():this.subview.redrawOrRefetch()}),f),this.layer.on("redraw",(()=>{"redraw"in this.subview?this.subview.redraw():this.subview.redrawOrRefetch()})),u((()=>this.layer.renderer),(()=>this._setSubView()))],"imagerylayerview-update")}detach(){var e,t;this.layer.decreaseRasterJobHandlerUsage(),this.container.removeAllChildren(),this._detachSubview(this.subview),null==(e=this.subview)||e.destroy(),this.handles.remove("imagerylayerview-update"),this.subview=null,null==(t=this._highlightView)||t.destroy(),this._exportImageVersion=-1}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}highlight(e,t){if(!((Array.isArray(e)?e[0]:_.isCollection(e)?e.getItemAt(0):e)instanceof o))return{remove:()=>{}};let i=[];return Array.isArray(e)||_.isCollection(e)?i=e.map((e=>e.clone())):e instanceof o&&(i=[e.clone()]),this._highlightGraphics.addMany(i),{remove:()=>{this._highlightGraphics.removeMany(i)}}}async doRefresh(){this.requestUpdate()}isUpdating(){return!this.subview||this.subview.updating}_setSubView(){var e;if(!this.view)return;const t=null==(e=this.layer.renderer)?void 0:e.type;let i="imagery";if("vector-field"===t&&"lerc"===this.layer.format?i="imageryVF":"flow"===t&&(i="flow"),this.subview){var r;if(this.subview.type===i)return this._attachSubview(this.subview),void("flow"===this.subview.type&&this.subview.redrawOrRefetch());this._detachSubview(this.subview),null==(r=this.subview)||r.destroy()}this.subview="imagery"===i?new L({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):"imageryVF"===i?new X({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new P({layer:this.layer,layerView:this}),this._attachSubview(this.subview),this.requestUpdate()}_attachSubview(e){e&&!e.attached&&(e.attach(),e.attached=!0,this.container.addChildAt(e.container,0),e.container.blendMode=this.layer.blendMode,e.container.effect=this.layer.effect)}_detachSubview(e){null!=e&&e.attached&&(this.container.removeChild(e.container),e.detach(),e.attached=!1)}};t([i()],Q.prototype,"pixelData",null),t([i({readOnly:!0})],Q.prototype,"updating",null),t([i()],Q.prototype,"subview",void 0),Q=t([r("esri.views.2d.layers.ImageryLayerView2D")],Q);const Y=Q;export{Y as default};
