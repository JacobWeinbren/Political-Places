import{V as e,W as i,X as a,a as r}from"../main.js";import{Z as s}from"./FeatureLayerView2D-53718dcc.js";import"./clickToleranceUtils-99c2da4d.js";import"./definitions-b96089d4.js";import"./LayerView-4bed2ec6.js";import"./Container-2802ebcf.js";import"./mat4f32-160ca33d.js";import"./schemaUtils-22d4782e.js";import"./Utils-850035a0.js";import"./Texture-be17dccf.js";import"./MaterialKey-f4e812e4.js";import"./visualVariablesUtils-b1b56b10.js";import"./CIMSymbolHelper-56ae0b49.js";import"./Rect-9b1aa25a.js";import"./BidiEngine-3a569c03.js";import"./MD5-10d13cec.js";import"./popupUtils-c4ead99d.js";import"./drapedUtils-209f151c.js";const t=s=>{let t=class extends s{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new r("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([a("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(s)){};l=e([a("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export default o;
