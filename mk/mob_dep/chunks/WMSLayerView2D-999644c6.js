import{Z as e,_ as t,cW as r,a0 as i,e as s,s as a,j as o,cK as n,cn as p}from"../main.js";import{t as m}from"./BitmapContainer-d236bc3d.js";import{f as h,u as d}from"./LayerView-bd7ec411.js";import{S as c}from"./ExportStrategy-3761539c.js";import{i as u}from"./RefreshableLayerView-4e2e6ef8.js";import{l}from"./ExportWMSImageParameters-0d6ddbde.js";import"./WGLContainer-e5b769fe.js";import"./enums-1bc10a6c.js";import"./pixelUtils-5a36ade0.js";import"./Container-8f96c744.js";import"./VertexArrayObject-47d07736.js";import"./Texture-1175e9f5.js";import"./VertexElementDescriptor-3277c87e.js";import"./enums-873d3e5a.js";import"./Utils-4efd2b2d.js";import"./ProgramTemplate-28d6e1e9.js";import"./StyleDefinition-3f884fc8.js";import"./config-0f36ebd6.js";import"./GeometryUtils-dd2125c2.js";import"./MaterialKey-37656b1a.js";import"./earcut-a218cde0.js";import"./Bitmap-95c55ca6.js";const y=a=>{let o=class extends a{initialize(){this.exportImageParameters=new l({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get exportImageVersion(){var e;return null==(e=this.exportImageParameters)||e.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}fetchPopupFeatures(e){const{layer:t}=this;if(!e)return Promise.reject(new s("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:t}));const{popupEnabled:r}=t;if(!r)return Promise.reject(new s("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:r}));const i=this.createFetchPopupFeaturesQuery(e);if(!i)return Promise.resolve([]);const{extent:a,width:o,height:n,x:p,y:m}=i;if(!(a&&o&&n))throw new s("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:a,width:o,height:n});const h=t.fetchFeatureInfo(a,o,n,p,m);return Promise.resolve(h?[h]:[])}};return e([t()],o.prototype,"exportImageParameters",void 0),e([t({readOnly:!0})],o.prototype,"exportImageVersion",null),e([t()],o.prototype,"layer",void 0),e([t(r)],o.prototype,"timeExtent",void 0),o=e([i("esri.layers.mixins.WMSLayerView")],o),o},g=a.getLogger("esri.views.2d.layers.WMSLayerView2D");let x=class extends(y(u(h(d)))){constructor(){super(...arguments),this.container=new m}supportsSpatialReference(e){return this.layer.serviceSupportsSpatialReference(e)}update(e){this.strategy.update(e).catch((e=>{o(e)||g.error(e)}))}attach(){const{layer:e,container:t}=this,{imageMaxHeight:r,imageMaxWidth:i}=e;this.strategy=new c({container:t,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:r,imageMaxWidth:i,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.handles.add(n((()=>this.exportImageVersion),(()=>this.requestUpdate())),"exportImageVersion")}detach(){this.handles.remove("exportImageVersion"),this.strategy.destroy(),this.strategy=null,this.container.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(e){const{view:t,container:r}=this,{x:i,y:s}=e,{spatialReference:a}=t;let o=null,n=0,m=0;if(r.children.some((e=>{const{width:t,height:r,resolution:h,x:d,y:c}=e,u=d+h*t,l=c-h*r;return i>=d&&i<=u&&s<=c&&s>=l&&(o=new p({xmin:d,ymin:l,xmax:u,ymax:c,spatialReference:a}),n=t,m=r,!0)})),!o)return null;const h=o.width/n,d=Math.round((i-o.xmin)/h),c=Math.round((o.ymax-s)/h);return{extent:o,width:n,height:m,x:d,y:c}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(e,t,r,i){return this.layer.fetchImage(e,t,r,{timeExtent:this.timeExtent,...i})}};e([t()],x.prototype,"strategy",void 0),e([t()],x.prototype,"updating",void 0),x=e([i("esri.views.2d.layers.WMSLayerView2D")],x);const f=x;export{f as default};
