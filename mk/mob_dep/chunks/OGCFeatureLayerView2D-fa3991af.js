import{V as e,W as i,X as r,a}from"../main.js";import{Z as s}from"./FeatureLayerView2D-c08a9e23.js";import"./clickToleranceUtils-2a39ebc6.js";import"./definitions-d2881228.js";import"./LayerView-7892df6f.js";import"./Container-e90b2627.js";import"./mat4f32-3602232b.js";import"./schemaUtils-2df1eea6.js";import"./Utils-219210a0.js";import"./Texture-604ef65e.js";import"./MaterialKey-dd029798.js";import"./visualVariablesUtils-5bd49226.js";import"./CIMSymbolHelper-fb4f733a.js";import"./Rect-2a2f751d.js";import"./BidiEngine-c74f6d8f.js";import"./MD5-ebdd680e.js";import"./popupUtils-af554cb4.js";import"./drapedUtils-00bb6fe0.js";const t=s=>{let t=class extends s{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new a("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([r("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(s)){};l=e([r("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export default o;
