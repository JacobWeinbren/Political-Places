import{V as e,W as i,X as r,a as s}from"../main.js";import{Z as t}from"./FeatureLayerView2D-e94cbe5b.js";import"./clickToleranceUtils-bf4050f5.js";import"./definitions-402d8636.js";import"./LayerView-f179601b.js";import"./Container-d9200222.js";import"./mat4f32-3672828c.js";import"./schemaUtils-f3cc62c0.js";import"./Utils-de052f54.js";import"./Texture-802df4e0.js";import"./MaterialKey-64e15919.js";import"./visualVariablesUtils-6328bc62.js";import"./CIMSymbolHelper-bdda2d39.js";import"./Rect-756e9a32.js";import"./BidiEngine-220e093f.js";import"./MD5-31e8fb3f.js";import"./popupUtils-8d9644be.js";import"./drapedUtils-f0dd83e7.js";const a=t=>{let a=class extends t{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new s("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],a.prototype,"layer",void 0),e([i({readOnly:!0})],a.prototype,"availableFields",null),a=e([r("esri.views.layers.OGCFeatureLayerView")],a),a};let l=class extends(a(t)){};l=e([r("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export{o as default};
