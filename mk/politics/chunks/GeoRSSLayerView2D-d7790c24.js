import{K as e,dc as i,ch as t,dh as s,di as r,dj as a,Z as o,a0 as p}from"../main.js";import{f as l,u as m}from"./LayerView-2a9200ad.js";import{i as n}from"./GraphicContainer-0a97fbff.js";import{r as h}from"./BaseGraphicContainer-6b173879.js";import"./Container-4f30f201.js";import"./Utils-be23a2c6.js";import"./enums-7acaa04d.js";import"./number-b530ed41.js";import"./enums-154d47de.js";import"./Texture-8b92d5d4.js";import"./VertexElementDescriptor-d5c236cd.js";import"./CIMSymbolHelper-cbb4397a.js";import"./BidiEngine-07ac28a3.js";import"./alignmentUtils-3fedcae3.js";import"./GeometryUtils-fb44f136.js";import"./projectionSupport-8797065d.js";import"./json-c16bd509.js";import"./VertexArrayObject-a92d69a3.js";import"./FeatureContainer-71418fa3.js";import"./TileContainer-c1a76147.js";import"./WGLContainer-13b2f2d5.js";import"./pixelUtils-ea0d20a1.js";import"./ProgramTemplate-6ba228e0.js";import"./StyleDefinition-3db9be87.js";import"./config-dc0b399b.js";import"./GeometryUtils-ba0d6a93.js";import"./MaterialKey-c7d0c6a2.js";import"./earcut-9a1bd483.js";import"./visualVariablesUtils-fe844d46.js";import"./visualVariablesUtils-bfc5f6ed.js";import"./Matcher-5a877f99.js";import"./tileUtils-359d8faa.js";import"./TileClipper-b46e776d.js";import"./Geometry-35a30b9e.js";import"./cimAnalyzer-7a366be2.js";import"./quantizationUtils-6ec6d37f.js";import"./ExpandedCIM-ce334afc.js";import"./schemaUtils-9dbe5b20.js";import"./createSymbolSchema-6ec90458.js";import"./MD5-318d1b0b.js";import"./util-d39d466d.js";import"./ComputedAttributeStorage-13642635.js";import"./vec3f32-89f63e00.js";let c=class extends(l(m)){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(e,i){if(!this.graphicsViews.length)return null;const t=this.graphicsViews.reverse().map((i=>i.hitTest(e)));return(await Promise.all(t)).flat().filter(((e,i)=>(e&&(e.popupTemplate=this._popupTemplates.get(this.graphicsViews[i]),e.layer=this.layer,e.sourceLayer=this.layer),!!e)))}update(e){if(this.graphicsViews)for(const i of this.graphicsViews)i.processUpdate(e)}attach(){this.handles.add([e(this.layer,"featureCollections",(e=>{this._clear();for(const{popupInfo:a,featureSet:o,layerDefinition:p}of e){const e=i.fromJSON(o),l=new t(e.features),m=p.drawingInfo,c=a?s.fromJSON(a):null,d=r(m.renderer),y=new h({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:l,renderer:d,container:new n(this.view.featuresTilingScheme)});this._graphicsViewMap[e.geometryType]=y,this._popupTemplates.set(y,c),"polygon"!==e.geometryType||this.layer.polygonSymbol?"polyline"!==e.geometryType||this.layer.lineSymbol?"point"!==e.geometryType||this.layer.pointSymbol||(this.layer.pointSymbol=d.symbol):this.layer.lineSymbol=d.symbol:this.layer.polygonSymbol=d.symbol,this.graphicsViews.push(y),this.container.addChild(y.container)}})),e(this.layer,"polygonSymbol",(e=>{this._graphicsViewMap.polygon.renderer=new a({symbol:e})})),e(this.layer,"lineSymbol",(e=>{this._graphicsViewMap.polyline.renderer=new a({symbol:e})})),e(this.layer,"pointSymbol",(e=>{this._graphicsViewMap.point.renderer=new a({symbol:e})}))],"georsslayerview")}detach(){this.handles.remove("georsslayerview"),this._clear()}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}_clear(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};c=o([p("esri.views.2d.layers.GeoRSSLayerView2D")],c);const d=c;export{d as default};
