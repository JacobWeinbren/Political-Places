import{V as e,W as i,X as r,a as s}from"../main.js";import{Z as a}from"./FeatureLayerView2D-94c25aeb.js";import"./clickToleranceUtils-020a3191.js";import"./definitions-8d307e62.js";import"./LayerView-797c8256.js";import"./Container-0b2b2ae1.js";import"./mat4f32-2308129f.js";import"./schemaUtils-387cea70.js";import"./Utils-46b9f9c5.js";import"./Texture-8ee332c6.js";import"./MaterialKey-1338824e.js";import"./visualVariablesUtils-c064bd3d.js";import"./CIMSymbolHelper-004386ee.js";import"./Rect-531bace0.js";import"./BidiEngine-b7dfb718.js";import"./MD5-c8535b52.js";import"./popupUtils-8fc8d5ee.js";import"./drapedUtils-157a90cb.js";const t=a=>{let t=class extends a{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new s("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([r("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(a)){};l=e([r("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export{o as default};
