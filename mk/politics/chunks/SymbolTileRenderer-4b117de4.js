import{r as t,t as e,d as s,gF as r,B as i,f0 as n,b5 as a,O as h,M as o,b6 as d,D as u,y as f,bg as l,Z as c,a0 as _,j as p,an as m}from"../main.js";import{s as y}from"./CircularArray-c8fa5c99.js";import{p as g,b,I as x}from"./Utils-be23a2c6.js";import{i as w,c as v,o as E}from"./FeatureContainer-71418fa3.js";import{c as C,f as T}from"./VertexArrayObject-a92d69a3.js";import{F as B}from"./enums-154d47de.js";import{s as S}from"./schemaUtils-9dbe5b20.js";import{o as V}from"./BaseTileRenderer-5610ab83.js";import{m as A}from"./visualVariablesUtils-fe844d46.js";import{w as L}from"./WGLContainer-13b2f2d5.js";import"./enums-7acaa04d.js";import"./number-b530ed41.js";import"./Texture-8b92d5d4.js";import"./VertexElementDescriptor-d5c236cd.js";import"./TileContainer-c1a76147.js";import"./Container-4f30f201.js";import"./visualVariablesUtils-bfc5f6ed.js";import"./createSymbolSchema-6ec90458.js";import"./MaterialKey-c7d0c6a2.js";import"./alignmentUtils-3fedcae3.js";import"./CIMSymbolHelper-cbb4397a.js";import"./BidiEngine-07ac28a3.js";import"./GeometryUtils-fb44f136.js";import"./cimAnalyzer-7a366be2.js";import"./quantizationUtils-6ec6d37f.js";import"./ExpandedCIM-ce334afc.js";import"./MD5-318d1b0b.js";import"./util-d39d466d.js";import"./pixelUtils-ea0d20a1.js";import"./ProgramTemplate-6ba228e0.js";import"./StyleDefinition-3db9be87.js";import"./config-dc0b399b.js";import"./GeometryUtils-ba0d6a93.js";import"./earcut-9a1bd483.js";const M=4294967296;class k{constructor(t){this._head=t,this._cursor=t}static from(t){const e=U.from(new Float32Array(t));return new k(e)}get id(){return this._cursor.id}get baseZoom(){return this._cursor.baseZoom}get anchorX(){return this._cursor.anchorX}get anchorY(){return this._cursor.anchorY}get directionX(){return this._cursor.directionX}get directionY(){return this._cursor.directionY}get size(){return this._cursor.size}get materialKey(){return this._cursor.materialKey}get boundsCount(){return this._cursor.boundsCount}computedMinZoom(){return this._cursor.computedMinZoom()}setComputedMinZoom(t){return this._cursor.setComputedMinZoom(t)}boundsComputedAnchorX(t){return this._cursor.boundsComputedAnchorX(t)}boundsComputedAnchorY(t){return this._cursor.boundsComputedAnchorY(t)}setBoundsComputedAnchorX(t,e){return this._cursor.setBoundsComputedAnchorX(t,e)}setBoundsComputedAnchorY(t,e){return this._cursor.setBoundsComputedAnchorY(t,e)}boundsX(t){return this._cursor.boundsX(t)}boundsY(t){return this._cursor.boundsY(t)}boundsWidth(t){return this._cursor.boundsWidth(t)}boundsHeight(t){return this._cursor.boundsHeight(t)}link(e){if(t(e._head))return this._cursor.link(e._head)}getCursor(){return this.copy()}copy(){var t;const e=new k(null==(t=this._head)?void 0:t.copy());if(!e._head)return e;let s=e._head,r=e._head._link;for(;r;)s._link=r.copy(),s=r,r=s._link;return e}peekId(){var t;return null!=(t=this._cursor.peekId())?t:this._cursor._link.peekId()}nextId(){const t=this.id;for(;t===this.id;)if(!this.next())return!1;return!0}save(){this._savedCursor=this._cursor,this._savedOffset=this._cursor._offset}restore(){this._cursor=this._savedCursor,this._cursor._offset=this._savedOffset}next(){if(!this._cursor)return!1;if(!this._cursor.next()){if(!this._cursor._link)return!1;this._cursor=this._cursor._link,this._cursor._offset=0}return!0}lookup(t){for(this._cursor=this._head;this._cursor&&!this._cursor.lookup(t);){if(!this._cursor._link)return!1;this._cursor=this._cursor._link}return!!this._cursor}delete(e){let s=this._head,r=null;for(;s;){if(s.delete(e))return s.isEmpty()&&t(r)&&(r._link=s._link),!0;r=s,s=s._link}return!1}}class U{constructor(t){this._offset=-1,this._link=null,this._count=0,this._deletedCount=0,this._offsets={instance:null},this._buffer=t}static from(t){return new U(new Float32Array(t))}isEmpty(){return this._deletedCount===this.count}get count(){return this._count||(this._count=this._computeCount()),this._count}get id(){return this._buffer[this._offset+0]}set id(t){this._buffer[this._offset+0]=t}get baseZoom(){return this._buffer[this._offset+1]}get anchorX(){return this._buffer[this._offset+2]}get anchorY(){return this._buffer[this._offset+3]}get directionX(){return this._buffer[this._offset+4]}get directionY(){return this._buffer[this._offset+5]}get size(){return this._buffer[this._offset+6]}get materialKey(){return this._buffer[this._offset+7]}computedMinZoom(){return this._buffer[this._offset+8]}setComputedMinZoom(t){this._buffer[this._offset+8]=t}get boundsCount(){return this._buffer[this._offset+9]}boundsComputedAnchorX(t){return this._buffer[this._offset+10+6*t+0]}boundsComputedAnchorY(t){return this._buffer[this._offset+10+6*t+1]}setBoundsComputedAnchorX(t,e){this._buffer[this._offset+10+6*t+0]=e}setBoundsComputedAnchorY(t,e){this._buffer[this._offset+10+6*t+1]=e}boundsX(t){return this._buffer[this._offset+10+6*t+2]}boundsY(t){return this._buffer[this._offset+10+6*t+3]}boundsWidth(t){return this._buffer[this._offset+10+6*t+4]}boundsHeight(t){return this._buffer[this._offset+10+6*t+5]}link(t){let e=this;for(;e._link;)e=e._link;e._link=t}getCursor(){return this.copy()}copy(){const t=new U(this._buffer);return t._link=this._link,t._offset=this._offset,t._deletedCount=this._deletedCount,t._offsets=this._offsets,t._count=this._count,t}peekId(){const t=this._offset+10+6*this.boundsCount+0;return t>=this._buffer.length?0:this._buffer[t]}next(){let t=0;for(;this._offset<this._buffer.length&&t++<100&&(-1===this._offset?this._offset=0:this._offset+=10+6*this.boundsCount,this.id===M););return this.id!==M&&this._offset<this._buffer.length}delete(t){const e=this._offset,s=this.lookup(t);if(s)for(this.id=4294967295,++this._deletedCount;this.next()&&this.id===t;)this.id=4294967295,++this._deletedCount;return this._offset=e,s}lookup(t){const s=this._offset;if(e(this._offsets.instance)){this._offsets.instance=new Map;const t=this.copy();t._offset=-1;let e=0;for(;t.next();)t.id!==e&&(this._offsets.instance.set(t.id,t._offset),e=t.id)}return!!this._offsets.instance.has(t)&&(this._offset=this._offsets.instance.get(t),this.id!==M||(this._offset=s,!1))}_computeCount(){const t=this._offset;let e=0;for(this._offset=-1;this.next();)e++;return this._offset=t,e}}class I{constructor(t){if(!Array.isArray(t))return void(this.data=t);this.data=t[0];let e=this;for(let s=1;s<t.length;s++)e.next=new I([t[s]]),e=e.next}*values(){let t=this;for(;t;)yield t.data,t=t.next}forEach(t){let e=this;for(;e;)t(e.data),e=e.next}find(t){var e;return t(this.data)?this:null==(e=this.next)?void 0:e.find(t)}max(t,e=this){const s=t(this.data)>t(e.data)?this:e;return this.next?this.next.max(t,s):s}remove(t,e=null){return this===t?e?(e.next=this.next,e):this.next:this.next.remove(t,this)}get last(){return this.next?this.next.last:this}}class R{constructor(t){this._head=null,e(t)||(this._head=new I(t))}get head(){return this._head}maxAvailableSpace(){if(e(this._head))return 0;const t=this._head.max((t=>t.end-t.start));return t.data.end-t.data.start}firstFit(t){if(e(this._head))return null;let s=null,r=this._head;for(;r;){const e=r.data.end-r.data.start;if(e===t)return s?s.next=r.next:this._head=r.next,r.data.start;if(e>t){const e=r.data.start;return r.data.start+=t,e}s=r,r=r.next}return null}free(t,s){const r=t+s;if(e(this._head)){const e=new I({start:t,end:r});return void(this._head=e)}if(r<=this._head.data.start){if(r===this._head.data.start)return void(this._head.data.start-=s);const e=new I({start:t,end:r});return e.next=this._head,void(this._head=e)}let i=this._head,n=i.next;for(;n;){if(n.data.start>=r){if(i.data.end===t){if(i.data.end+=s,i.data.end===n.data.start){const t=n.data.end-n.data.start;return i.data.end+=t,void(i.next=n.next)}return}if(n.data.start===r)return void(n.data.start-=s);const e=new I({start:t,end:r});return e.next=i.next,void(i.next=e)}i=n,n=n.next}if(t===i.data.end)return void(i.data.end+=s);const a=new I({start:t,end:r});i.next=a}}class P{constructor(t,e,s,r,i){this.target=t,this.geometryType=e,this.materialKey=s,this.indexFrom=r,this.indexCount=i}get indexEnd(){return this.indexFrom+this.indexCount}extend(t){this.indexCount+=t}}class j{constructor(t,e){this.geometryType=0,this._target=t,this.geometryType=e}static from(e,s,r,i){const n=new j(e,s);if(t(i))for(const t of i)r.seekIndex(t),n.addRecord(r);else for(;r.next();)n.addRecord(r);return n}addRecord(t){const s=this._target,r=this.geometryType,i=t.materialKey;let n=t.indexFrom,a=t.indexCount;const h=t.vertexFrom,o=t.vertexCount;if(a||(n=h,a=o),e(this._head)){const t=new P(s,r,i,n,a);return void(this._head=new I(t))}let d=null,u=this._head;for(;u;){if(n<u.data.indexFrom)return this._insert(i,n,a,d,u);d=u,u=u.next}this._insert(i,n,a,d,null)}forEach(e){t(this._head)&&this._head.forEach(e)}*infos(){if(t(this._head))for(const t of this._head.values())yield t}_insert(s,r,i,n,a){if(e(n)&&e(a)){const t=new P(this._target,this.geometryType,s,r,i);this._head=new I(t)}return e(n)&&t(a)?this._insertAtHead(s,r,i,a):t(n)&&e(a)?this._insertAtEnd(s,r,i,n):t(n)&&t(a)?this._insertAtMiddle(s,r,i,n,a):void 0}_insertAtHead(t,e,s,r){const i=e+s;if(t===r.data.materialKey&&i===r.data.indexFrom)r.data.indexFrom=e,r.data.indexCount+=s;else{const i=new P(this._target,this.geometryType,t,e,s);this._head=new I(i),this._head.next=r}}_insertAtEnd(t,e,s,r){if(r.data.materialKey===t&&r.data.indexEnd===e)r.data.indexCount+=s;else{const i=new P(this._target,this.geometryType,t,e,s),n=new I(i);r.next=n}}_insertAtMiddle(t,e,s,r,i){const n=e+s;if(r.data.materialKey===t&&r.data.indexEnd===e)r.data.indexCount+=s,r.data.materialKey===i.data.materialKey&&r.data.indexEnd===i.data.indexFrom&&(r.data.indexCount+=i.data.indexCount,r.next=i.next);else if(t===i.data.materialKey&&n===i.data.indexFrom)i.data.indexFrom=e,i.data.indexCount+=s;else{const n=new P(this._target,this.geometryType,t,e,s),a=new I(n);r.next=a,a.next=i}}}const F=s("esri-2d-log-allocations");class q{constructor(t){this._array=t}get array(){return this._array}get length(){return this._array.length}static create(t){const e=z.acquire(t);return new q(e)}expand(t){const e=z.acquire(t);e.set(this._array),z.release(this._array),this._array=e}destroy(){z.release(this._array)}set(t,e){this._array.set(t._array,e)}slice(){const t=z.acquire(this._array.byteLength);return t.set(this._array),new q(t)}}class Y{constructor(){this._data=new ArrayBuffer(Y.BYTE_LENGTH),this._freeList=new R({start:0,end:this._data.byteLength})}static get BYTE_LENGTH(){return 64e6}get buffer(){return this._data}allocate(t){const s=this._freeList.firstFit(t);return e(s)?null:new Uint32Array(this._data,s,t/Uint32Array.BYTES_PER_ELEMENT)}free(t){this._freeList.free(t.byteOffset,t.byteLength)}}const z=new class{constructor(){this._bytesAllocated=0,this._pages=[],this._pagesByBuffer=new Map,this._addPage()}get _bytesTotal(){return this._pages.length*Y.BYTE_LENGTH}acquire(e){if(this._bytesAllocated+=e,F&&console.log(`Allocating ${e}, (${this._bytesAllocated} / ${this._bytesTotal})`),e>Y.BYTE_LENGTH)return new Uint32Array(e/Uint32Array.BYTES_PER_ELEMENT);for(const s of this._pages){const r=s.allocate(e);if(t(r))return r}return r(this._addPage().allocate(e),"Expected to allocate page")}release(t){this._bytesAllocated-=t.byteLength,F&&console.log(`Freeing ${t.byteLength}, (${this._bytesAllocated} / ${this._bytesTotal})`);const e=this._pagesByBuffer.get(t.buffer);e&&e.free(t)}_addPage(){const t=new Y;return this._pages.push(t),this._pagesByBuffer.set(t.buffer,t),t}};class D{constructor(t,e,s){const r=q.create(e*s*Uint32Array.BYTES_PER_ELEMENT);this.size=e,this.strideInt=s,this.bufferType=t,this.dirty={start:1/0,end:0},this._gpu=null,this._cpu=r,this.clear()}get elementSize(){return this._cpu.length/this.strideInt}get invalidated(){return this.bufferSize&&!this._gpu}invalidate(){this._invalidateTriangleBuffer(),i(this._gpu,(t=>t.dispose())),this._gpu=null}_invalidateTriangleBuffer(){i(this._gpuComputeTriangles,(t=>t.dispose())),this._gpuComputeTriangles=null}destroy(){i(this._gpu,(t=>t.dispose())),i(this._gpuComputeTriangles,(t=>t.dispose())),i(this._cpu,(t=>t.destroy())),i(this._cpu2,(t=>t.destroy()))}clear(){this.dirty.start=1/0,this.dirty.end=0,this.freeList=new R({start:0,end:this._cpu.length/this.strideInt}),this.fillPointer=0}ensure(t){if(!(this.maxAvailableSpace()>=t)&&t*this.strideInt>this._cpu.length-this.fillPointer){this.invalidate();const e=this._cpu.length/this.strideInt,s=Math.round(1.25*(e+t)),r=s*this.strideInt;this._cpu.expand(r*Uint32Array.BYTES_PER_ELEMENT),this.freeList.free(e,s-e)}}set(t,e){this._cpu.array[t]!==e&&(this._cpu.array[t]=e,this.dirty.start=Math.min(t,this.dirty.start),this.dirty.end=Math.max(t,this.dirty.end))}getGPUBuffer(t,s=!1){if(!this.bufferSize)return null;if(s){if("index"!==this.bufferType)throw new Error("Tired to get triangle buffer, but target is not an index buffer");return e(this._gpuComputeTriangles)&&(this._gpuComputeTriangles=this._createComputeBuffer(t)),this._gpuComputeTriangles}return e(this._gpu)&&(this._gpu=this._createBuffer(t)),this._gpu}getCPUBuffer(){if(!this._cpu2){const t=this._cpu.slice();this._cpu2=t}return this._cpu2.length!==this._cpu.length&&this._cpu2.expand(this._cpu.length*this._cpu.array.BYTES_PER_ELEMENT),this._cpu2.set(this._cpu),this._cpu2}get bufferSize(){return this._cpu.length/this.strideInt}maxAvailableSpace(){return this.freeList.maxAvailableSpace()}insert(t,e,s,i){const n=s*this.strideInt;if(!n)return 0;const a=e*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,h=new Uint32Array(t,a,n),o=r(this.freeList.firstFit(s),"First fit region must be defined")*this.strideInt,d=n,u=o/this.strideInt-e;if(0!==i)for(let t=0;t<h.length;t++)h[t]+=i;return this._cpu.array.set(h,o),this.dirty.start=Math.min(this.dirty.start,o),this.dirty.end=Math.max(this.dirty.end,o+d),this.fillPointer=Math.max(this.fillPointer,o+d),u}free(t,e,s){const r=t*this.strideInt,i=(t+e)*this.strideInt;if(!0===s)for(let s=t;s!==t+e;s++)this._cpu.array[s*this.strideInt]=2147450879;this.dirty.start=Math.min(this.dirty.start,r),this.dirty.end=Math.max(this.dirty.end,i),this.freeList.free(t,e)}upload(){if(this.dirty.end){if(this._invalidateTriangleBuffer(),e(this._gpu))return this.dirty.start=1/0,void(this.dirty.end=0);this._gpu.setSubDataFromView(this._cpu.array,this.dirty.start,this.dirty.start,this.dirty.end),this.dirty.start=1/0,this.dirty.end=0}}_createBuffer(t){const e=B.DYNAMIC_DRAW;return"index"===this.bufferType?C.createIndex(t,e,this._cpu.array):C.createVertex(t,e,this._cpu.array)}_createComputeBuffer(t){const e=B.DYNAMIC_DRAW,s=new Uint32Array(this.fillPointer/3);for(let t=0;t<this.fillPointer;t+=3)s[t/3]=this._cpu.array[t];return C.createIndex(t,e,s)}}class K{constructor(t,e){this._vaos=new Map,this._indicesInvalid=!1,this.geometryType=t}destroy(){for(const[e,s]of this._vaos)t(s)&&s.dispose(!1);this._indexBuffer=n(this._indexBuffer),this._vertexBuffer=n(this._vertexBuffer)}insert(t,e,s){if(!t.records.byteLength)return;const i=t.stride;if(this._vertexBuffer&&this._indexBuffer){const s=t.indices.byteLength/4,n=t.vertices.byteLength/i;this._indexBuffer.ensure(s),this._vertexBuffer.ensure(n);const{vertices:a,indices:h}=t,o=w.from(t.records),d=this._vertexBuffer.insert(a,0,a.byteLength/i,0),u=this._indexBuffer.insert(h,0,h.byteLength/4,d);if(o.forEach((t=>{t.indexFrom+=u,t.vertexFrom+=d})),r(this._records,"Expected records to be defined").link(o),e)this._indicesInvalid=!0;else if(this._displayList){const t=o.getCursor();for(;t.next();)this._displayList.addRecord(t)}}else{const s=t.indices.byteLength/4,r=t.vertices.byteLength/i,n=i/Uint32Array.BYTES_PER_ELEMENT;this._records=w.from(t.records),this._indexBuffer=new D("index",s,1),this._vertexBuffer=new D("vertex",r,n),this._indexBuffer.insert(t.indices,0,t.indices.byteLength/4,0),this._vertexBuffer.insert(t.vertices,0,t.vertices.byteLength/i,0),e&&(this._indicesInvalid=!0)}}remove(t){if(!e(this._records))for(const e of t){const t=this._records.getCursor();if(!t.lookup(e))continue;const s=t.indexFrom,r=t.vertexFrom;let i=t.indexCount,n=t.vertexCount;for(;t.next()&&t.id===e;)i+=t.indexCount,n+=t.vertexCount;this._indexBuffer.free(s,i),this._vertexBuffer.free(r,n,!0),this._records.delete(e)}}getVAO(t,s,r,n){if(!this._vertexBuffer||!this._indexBuffer||e(this._records)||!this._vertexBuffer.bufferSize)return null;const a=n?1:0;let h=this._vaos.get(a);(this._vertexBuffer.invalidated||this._indexBuffer.invalidated)&&(i(h,(t=>t.dispose(!1))),h=null),this._vertexBuffer.upload(),this._indexBuffer.upload();const o=this._indexBuffer.getGPUBuffer(t,1===a),d=this._vertexBuffer.getGPUBuffer(t);return h||(h=new T(t,r,s,{geometry:d},o),this._vaos.set(a,h)),h}forEachCommand(t){if(!e(this._records)){if(this._sortIndices(this._records),!this._displayList){const t=this._cursorIndexOrder;this._displayList=j.from(this,this.geometryType,this._records.getCursor(),t)}this._displayList.forEach(t)}}_sortIndices(t){const e=!!this._indexBuffer.bufferSize;if(!this._indicesInvalid)return;this._indicesInvalid=!1;let s=0;const r=t.getCursor(),i=[],n=[],a=[];for(;r.next();)n.push(r.index),a.push(r.sortKey),i.push(r.id);n.sort(((t,e)=>{const s=a[e],r=a[t];return r===s?i[e]-i[t]:s-r}));const h=t.getCursor(),o=e?this._indexBuffer.getCPUBuffer():this._vertexBuffer.getCPUBuffer();for(const t of n){if(!h.seekIndex(t))throw new Error("Expected to find index");if(e){const{indexFrom:t,indexCount:e}=h;h.indexFrom=s;for(let r=0;r<e;r++)this._indexBuffer.set(s++,o.array[t+r])}else{const{vertexFrom:t,vertexCount:e}=h,r=this._vertexBuffer.strideInt,i=t*r,n=i+e*r;h.vertexFrom=s/r;for(let t=i;t<n;t++)this._vertexBuffer.set(s++,o.array[t])}}this._cursorIndexOrder=n,this._displayList=null}}let G=0;class H extends v{constructor(t,e,s,r,i){super(t,e,s),this.instanceId=G++,this.patchCount=0,this._renderState={current:{geometry:new Map,metrics:null},next:null,swap:!1,swapFrames:0,locked:!1},this._patches=new y(100),this._bufferPatches=new y(100),this._lastCommitTime=0,this._lastMessageWasClear=!1,this.transforms.labelMat2d=a(),this._store=r,this._requestLabelUpdate=i}destroy(){super.destroy(),this._renderState.current.geometry.forEach((t=>t.destroy()))}get labelMetrics(){return this._renderState.current.metrics}get hasData(){return!!this._renderState.current.geometry.size}getGeometry(t){return this._renderState.current.geometry.get(t)}setTransform(t,e){super.setTransform(t,e);const s=this.transforms.labelMat2d,r=t.getScreenTransform(s,e),i=f();h(i,[this.x,this.y],r),o(s,i),d(s,t.viewMat2d,s)}patch(t,e){if(this.patchCount++,t.clear&&this._lastMessageWasClear)return;this._lastMessageWasClear=t.clear,t.clear&&this._patches.size>=50&&this._dropPatches();const s=t,r=s.addOrUpdate&&this.key.id!==s.addOrUpdate.tileKeyOrigin;e&&r?this._bufferPatches.enqueue(s):(s.sort=s.sort&&!e,this._patches.enqueue(s)),this.requestRender()}commit(t){if(this._lastCommitTime!==t.time){this._lastCommitTime=t.time;for(let t=0;t<4;t++)this._updateMesh(),this.isReady&&this._updateBufferMesh();this._renderState.swap&&(this._swapRenderStates(),this.requestRender())}}lock(){this._renderState.locked=!0}unlock(){this._renderState.locked=!1,this._flushUpdates(),this._swap()}_swapRenderStates(){if(this._renderState.next){if(this._renderState.locked)return this._renderState.swap=!0,void this.requestRender();if(this._renderState.swap=!0,0===this._renderState.swapFrames)return this._renderState.swapFrames=8,void this.requestRender();1==this._renderState.swapFrames--?this._swap():this.requestRender()}}_swap(){this._renderState.swap&&(this._renderState.swap=!1,t(this._renderState.next)&&(this._renderState.current.geometry.forEach((t=>t.destroy())),this._renderState.current=this._renderState.next,this._renderState.next=null,this._requestLabelUpdate()))}_flushUpdates(){let t=this._patches.maxSize;for(;this._patches.size&&t--;)this._updateMesh(),this._swap()}_updateBufferMesh(){const e=this._bufferPatches.peek();if(!t(e)||!e.clear||null===this._renderState.next)for(;this._bufferPatches.size;){const e=this._bufferPatches.dequeue();t(e)&&this._patchBuffer(e)}}_updateMesh(){const e=this._patches.peek();if(t(e)&&e.clear&&null!==this._renderState.next)return;const s=this._patches.dequeue();if(t(s)){if(!0===s.clear){if(!this.isReady)return;return this._renderState.next,void(this._renderState.next={geometry:new Map,metrics:null})}this.requestRender(),this._patch(s),s.end&&(this.ready(),this._swapRenderStates())}}_patch(t){g((e=>{this._remove(e,t.remove),this._insert(e,t,!1)}))}_patchBuffer(t){g((e=>{this._insert(e,t,!0)}))}_insert(t,s,r){try{var i;const n=u(this._renderState.next,this._renderState.current),a=null==(i=s.addOrUpdate)?void 0:i.data[t],h=n.geometry;if(e(a))return;h.has(t)||h.set(t,new K(t,this.stage)),h.get(t).insert(a,s.sort,r),t===b.LABEL&&this._insertLabelMetrics(s.type,a.metrics,s.clear)}catch(t){}}_insertLabelMetrics(t,s,r){const i=u(this._renderState.next,this._renderState.current);if(e(s))return;const n=k.from(s);if(e(i.metrics))i.metrics=n;else{if("update"===t){const t=n.getCursor();for(;t.next();)i.metrics.delete(t.id)}i.metrics.link(n)}}_remove(t,e){const s=u(this._renderState.next,this._renderState.current).geometry.get(t);e&&e.length&&s&&(s.remove(e),this._removeLabelMetrics(e))}_removeLabelMetrics(t){const{metrics:s}=u(this._renderState.next,this._renderState.current);if(!e(s)&&t.length)for(const e of t)for(;s.delete(e););}_dropPatches(){const t=new Array;let s=!1;for(;this._patches.size;){const r=this._patches.dequeue();if(e(r))break;if(r.clear){if(s)break;s=!0}t.push(r)}this._patches.clear(),t.forEach((t=>this._patches.enqueue(t)))}}const X=s("featurelayer-order-by-server-enabled");class N extends E{constructor(t,e,s,r){super(t),this._pointToCallbacks=[],this._layer=s,this._layerView=e,this._onUpdate=r}renderChildren(t){this.attributeView.update(),this.hasAnimation&&t.painter.effects.integrate.draw(t,t.attributeView),super.renderChildren(t)}hasEmptyAttributeView(){return this.attributeView.isEmpty()}isUpdating(){return this.attributeView.isUpdating()}hitTest(t){const e=l();return this._pointToCallbacks.push({point:t,resolver:e}),this.requestRender(),e.promise}onTileData(t,e){const s=X&&"orderBy"in this._layer&&this._layer.orderBy,r=(null==s?void 0:s.length)&&!s[0].valueExpression&&s[0].field,i=s&&this._layerView.orderByFields===r;t.patch(e,i),this.contains(t)||this.addChild(t),this.requestRender()}onTileError(t){this.contains(t)||this.addChild(t)}updateTransitionProperties(t,e){super.updateTransitionProperties(t,e),this._layerView.featureEffectView.transitionStep(t,e),this._layerView.featureEffectView.transitioning&&this.requestRender()}doRender(t){const{minScale:e,maxScale:s}=this._layer,r=t.state.scale;r<=(e||1/0)&&r>=s&&super.doRender(t)}onAttributeStoreUpdate(){this.hasLabels&&this._layerView.view.labelManager.requestUpdate(),this._onUpdate()}get hasAnimation(){return this.hasLabels}setStencilReference(t){if(t.rendererInfo.ddDotSize>1){const t=1;for(const e of this.children)e.stencilRef=e.key.level+t}else super.setStencilReference(t)}get hasLabels(){if("sublayers"in this._layer)return this._layer.sublayers.some((t=>t.labelingInfo&&t.labelingInfo.length&&t.labelsVisible));const t=this._layer.featureReduction,e=t&&"cluster"===t.type&&t.labelsVisible&&t.labelingInfo&&t.labelingInfo.length;return this._layer.labelingInfo&&this._layer.labelingInfo.length&&this._layer.labelsVisible||!!e}prepareRenderPasses(t){const e=t.registerRenderPass({name:"label",brushes:[L.label],target:()=>this.hasLabels?this.children:null,drawPhase:x.LABEL|x.LABEL_ALPHA}),s=t.registerRenderPass({name:"geometry",brushes:[L.fill,L.line,L.marker,L.text],target:()=>this.children,enableDefaultDraw:()=>!this._layerView.featureEffectView.hasEffects,effects:[{apply:t.effects.outsideEffect,enable:()=>this._layerView.featureEffectView.hasEffects,args:()=>this._layerView.featureEffectView.excludedEffects},{apply:t.effects.insideEffect,enable:()=>this._layerView.featureEffectView.hasEffects,args:()=>this._layerView.featureEffectView.includedEffects},{apply:t.effects.hittest,enable:()=>!!this._pointToCallbacks.length,args:()=>this._pointToCallbacks}]}),r=t.registerRenderPass({name:"highlight",brushes:[L.fill,L.line,L.marker,L.text],target:()=>this.children,drawPhase:x.HIGHLIGHT,enableDefaultDraw:()=>!1,effects:[{apply:t.effects.highlight,enable:()=>!!this._layerView.hasHighlight()}]});return[...super.prepareRenderPasses(t),s,r,e]}}let O=class extends V{install(t){const e=new N(this.tileInfoView,this.layerView,this.layer,(()=>this.notifyChange("updating")));this.featuresView=e,t.addChild(e)}uninstall(t){t.removeChild(this.featuresView),this.featuresView.destroy(),this.featuresView=null}fetchResource(t,e){const{url:s}=t,r=this.featuresView.stage;try{return r.resourceManager.fetchResource(s,{signal:e.signal})}catch(t){return p(t)?Promise.resolve({width:0,height:0}):Promise.reject(t)}}isUpdating(){var t;const e=super.isUpdating(),r=!this.featuresView||this.featuresView.isUpdating(),i=null==(t=this.featuresView)?void 0:t.hasEmptyAttributeView(),n=e||r||e&&i;return s("esri-2d-log-updating")&&console.log(`Updating SymbolTileRenderer ${n}\n  -> updatingTiles ${e}\n  -> hasFeaturesView ${!!this.featuresView}\n  -> updatingFeaturesView ${r}`),n}hitTest(t){return this.featuresView.hitTest(t)}supportsRenderer(t){return null!=t&&-1!==["simple","class-breaks","unique-value","dot-density","dictionary"].indexOf(t.type)}onConfigUpdate(t){let e=null;if("visualVariables"in t){const s=(S(t).visualVariables||[]).map((t=>{const e=t.clone();return"normalizationField"in t&&(e.normalizationField=null),t.valueExpression&&"$view.scale"!==t.valueExpression&&(e.valueExpression=null,e.field="nop"),e}));e=A(s)}this.featuresView.setRendererInfo(t,e,this.layerView.featureEffect)}onTileData(t){const e=this.tiles.get(t.tileKey);e&&t.data&&this.featuresView.onTileData(e,t.data),this.layerView.view.labelManager.requestUpdate()}onTileError(t){const e=this.tiles.get(t.tileKey);e&&this.featuresView.onTileError(e)}forceAttributeTextureUpload(){this.featuresView.attributeView.forceTextureUpload()}lockGPUUploads(){this.featuresView.attributeView.lockTextureUpload(),this.tiles.forEach((t=>t.lock()))}unlockGPUUploads(){this.featuresView.attributeView.unlockTextureUpload(),this.tiles.forEach((t=>t.unlock()))}async getMaterialItems(t){return this.featuresView.getMaterialItems(t)}invalidateLabels(){this.featuresView.hasLabels&&this.layerView.view.labelManager.requestUpdate()}createTile(t){const e=this.tileInfoView.getTileBounds(m(),t);return new H(t,e[0],e[3],this.featuresView.attributeView,(()=>this.layerView.view.labelManager.requestUpdate()))}disposeTile(t){this.featuresView.removeChild(t),t.destroy(),this.layerView.view.labelManager.requestUpdate()}};O=c([_("esri.views.2d.layers.features.tileRenderers.SymbolTileRenderer")],O);const $=O;export{$ as default};
