import{V as e,W as i,X as r,a as s}from"../main.js";import{Z as a}from"./FeatureLayerView2D-6e1a1008.js";import"./clickToleranceUtils-020a3191.js";import"./definitions-8d307e62.js";import"./LayerView-252e16da.js";import"./Container-55721a37.js";import"./mat4f32-2308129f.js";import"./schemaUtils-1841980c.js";import"./Utils-f167e884.js";import"./Texture-d7d94757.js";import"./MaterialKey-b4a6cfdf.js";import"./visualVariablesUtils-43f09940.js";import"./CIMSymbolHelper-d49479df.js";import"./Rect-531bace0.js";import"./BidiEngine-b7dfb718.js";import"./MD5-c8535b52.js";import"./popupUtils-720682e4.js";import"./drapedUtils-95f6b7f3.js";const t=a=>{let t=class extends a{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new s("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([r("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(a)){};l=e([r("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export{o as default};
