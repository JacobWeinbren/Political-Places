import{V as e,W as i,X as r,a as s}from"../main.js";import{Z as t}from"./FeatureLayerView2D-bd49092e.js";import"./clickToleranceUtils-020a3191.js";import"./definitions-8d307e62.js";import"./LayerView-9077be91.js";import"./Container-d91b8230.js";import"./mat4f32-2308129f.js";import"./schemaUtils-461070ac.js";import"./Utils-ffcc0714.js";import"./Texture-3e3bfae4.js";import"./MaterialKey-84211613.js";import"./visualVariablesUtils-17697e42.js";import"./CIMSymbolHelper-7a8bfc71.js";import"./Rect-531bace0.js";import"./BidiEngine-b7dfb718.js";import"./MD5-c8535b52.js";import"./popupUtils-4089e4bc.js";import"./drapedUtils-ebece83f.js";const a=t=>{let a=class extends t{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new s("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],a.prototype,"layer",void 0),e([i({readOnly:!0})],a.prototype,"availableFields",null),a=e([r("esri.views.layers.OGCFeatureLayerView")],a),a};let l=class extends(a(t)){};l=e([r("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export{o as default};
