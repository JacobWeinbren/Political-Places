import{ef as e,Z as t,_ as r,eg as i,a0 as s,cg as o,b3 as n,e as a,eh as l,C as u,ei as c,e6 as d,dE as p,r as m,cd as f}from"../main.js";import{a as h}from"./GPMessage-9e80dd12.js";class y{constructor(e={}){this._options=e}toQueryParams(e){if(!e)return null;const t=e.toJSON(),r={};return Object.keys(t).forEach((e=>{const i=this._options[e];if(i){const s="boolean"!=typeof i&&i.name?i.name:e,o="boolean"!=typeof i&&i.getter?i.getter(t):t[e];null!=o&&(r[s]=(e=>{if(!Array.isArray(e))return!1;const[t]=e;return"number"==typeof t||"string"==typeof t})(o)?o.join(","):"object"==typeof o?JSON.stringify(o):o)}else r[e]=t[e]}),this),r}}function v(e){return new y(e)}const N=e()({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"}),g=e()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),A=e()({esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds"}),T=e()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),w=e()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"});e()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"});const b=e()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"});e()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),e()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"});const M=e()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"}),k=e()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),S=e()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),U=e()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),O=e()({1:"right",2:"left"},{useNumericKeys:!0}),D=e()({0:"restriction",1:"added-cost"},{useNumericKeys:!0}),j=e()({0:"permit",1:"restrict"},{useNumericKeys:!0}),K=e()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation"},{useNumericKeys:!0}),L=e()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0});var F;let P=F=class extends o{constructor(e){super(e),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}clone(){return new F(n({attributeParameterValues:this.attributeParameterValues,description:this.description,distanceAttributeName:this.distanceAttributeName,id:this.id,impedanceAttributeName:this.impedanceAttributeName,name:this.name,restrictionAttributeNames:this.restrictionAttributeNames,simplificationTolerance:this.simplificationTolerance,simplificationToleranceUnits:this.simplificationToleranceUnits,timeAttributeName:this.timeAttributeName,type:this.type,useHierarchy:this.useHierarchy,uturnAtJunctions:this.uturnAtJunctions}))}};t([r({type:[Object],json:{write:!0}})],P.prototype,"attributeParameterValues",void 0),t([r({type:String,json:{write:!0}})],P.prototype,"description",void 0),t([r({type:String,json:{write:!0}})],P.prototype,"distanceAttributeName",void 0),t([r({type:String,json:{write:!0}})],P.prototype,"id",void 0),t([r({type:String,json:{write:!0}})],P.prototype,"impedanceAttributeName",void 0),t([r({type:String,json:{write:!0}})],P.prototype,"name",void 0),t([r({type:[String],json:{write:!0}})],P.prototype,"restrictionAttributeNames",void 0),t([r({type:Number,json:{write:{allowNull:!0}}})],P.prototype,"simplificationTolerance",void 0),t([i(N)],P.prototype,"simplificationToleranceUnits",void 0),t([r({type:String,json:{write:!0}})],P.prototype,"timeAttributeName",void 0),t([i(M)],P.prototype,"type",void 0),t([r({type:Boolean,json:{write:!0}})],P.prototype,"useHierarchy",void 0),t([i(b)],P.prototype,"uturnAtJunctions",void 0),P=F=t([s("esri.rest.support.TravelMode")],P);const E=P;let B=class extends o{constructor(e){super(e),this.accumulateAttributeNames=null,this.currentVersion=null,this.defaultTravelMode=null,this.directionsLanguage=null,this.directionsLengthUnits=null,this.directionsSupportedLanguages=null,this.directionsTimeAttribute=null,this.hasZ=null,this.impedance=null,this.networkDataset=null,this.supportedTravelModes=null}};t([r()],B.prototype,"accumulateAttributeNames",void 0),t([r()],B.prototype,"currentVersion",void 0),t([r()],B.prototype,"defaultTravelMode",void 0),t([r()],B.prototype,"directionsLanguage",void 0),t([i(g)],B.prototype,"directionsLengthUnits",void 0),t([r()],B.prototype,"directionsSupportedLanguages",void 0),t([r()],B.prototype,"directionsTimeAttribute",void 0),t([r()],B.prototype,"hasZ",void 0),t([r()],B.prototype,"impedance",void 0),t([r()],B.prototype,"networkDataset",void 0),t([r({type:[E]})],B.prototype,"supportedTravelModes",void 0),B=t([s("esri.rest.support.NetworkServiceDescription")],B);const J=B;function C(e,t,r,i){i[r]=[t.length,t.length+e.length],e.forEach((e=>{t.push(e.geometry)}))}function V(e,t){for(let r=0;r<t.length;r++){const i=e[t[r]];if(i&&i.length)for(const e of i)e.z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}function H(e,t){for(let r=0;r<t.length;r++){const i=e[t[r]];if(i&&i.length)for(const e of i)if(m(e)&&e.hasZ)return!0}return!1}async function I(e,t,r){if(!e)throw new a("network-service:missing-url","Url to Network service is missing");const i=l({f:"json",token:t},r),{data:s}=await u(e,i);s.supportedTravelModes||(s.supportedTravelModes=[]);for(let e=0;e<s.supportedTravelModes.length;e++)s.supportedTravelModes[e].id||(s.supportedTravelModes[e].id=s.supportedTravelModes[e].itemId);const o=s.currentVersion>=10.4?async function(e,t,r){try{const i=l({f:"json",token:t},r),s=c(e)+"/retrieveTravelModes",{data:{supportedTravelModes:o,defaultTravelMode:n}}=await u(s,i);return{supportedTravelModes:o,defaultTravelMode:n}}catch(e){throw new a("network-service:retrieveTravelModes","Could not get to the NAServer's retrieveTravelModes.",{error:e})}}(e,t,r):async function(e,t){var r,i;const s=l({f:"json"},t),{data:o}=await u(e.replace(/\/rest\/.*$/i,"/info"),s);if(!o||!o.owningSystemUrl)return{supportedTravelModes:[],defaultTravelMode:null};const{owningSystemUrl:n}=o,a=c(n)+"/sharing/rest/portals/self",{data:m}=await u(a,s),f=d("helperServices.routingUtilities.url",m);if(!f)return{supportedTravelModes:[],defaultTravelMode:null};const h=p(n),y=/\/solve$/i.test(h.path)?"Route":/\/solveclosestfacility$/i.test(h.path)?"ClosestFacility":"ServiceAreas",v=l({f:"json",serviceName:y},t),N=c(f)+"/GetTravelModes/execute",g=await u(N,v),A=[];let T=null;if(null!=g&&null!=(r=g.data)&&null!=(i=r.results)&&i.length){const e=g.data.results;for(const t of e){var w;if("supportedTravelModes"===t.paramName){if(null!=(w=t.value)&&w.features)for(const{attributes:e}of t.value.features)if(e){const t=JSON.parse(e.TravelMode);A.push(t)}}else"defaultTravelMode"===t.paramName&&(T=t.value)}}return{supportedTravelModes:A,defaultTravelMode:T}}(e,r),{defaultTravelMode:n,supportedTravelModes:m}=await o;return s.defaultTravelMode=n,s.supportedTravelModes=m,J.fromJSON(s)}const Z=new f({0:"informative",1:"process-definition",2:"process-start",3:"process-stop",50:"warning",100:"error",101:"empty",200:"abort"});let x=class extends h{constructor(e){super(e),this.type=null}};t([r({type:String,json:{read:Z.read,write:Z.write}})],x.prototype,"type",void 0),x=t([s("esri.rest.support.NAMessage")],x);const R=x;export{j as A,U as N,R as a,O as b,b as c,V as d,S as e,I as f,A as g,D as h,C as i,E as l,k as m,w as n,v as o,K as p,N as r,T as s,g as t,H as u,L as y};
