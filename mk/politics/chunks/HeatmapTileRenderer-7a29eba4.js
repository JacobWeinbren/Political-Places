import{V as t,X as e}from"../main.js";import{a as i,n}from"./heatmapUtils-c95f9d12.js";import{n as s}from"./BitmapTileContainer-714c41d4.js";import{o as r}from"./BaseTileRenderer-635b671f.js";import"./Bitmap-fef5d461.js";import"./VertexArrayObject-faa99832.js";import"./Texture-1722ee47.js";import"./Container-4f0796f7.js";import"./mat4f32-2308129f.js";import"./TileContainer-a1c182ba.js";import"./Utils-a6360ab9.js";import"./WGLContainer-d8d6409d.js";import"./definitions-8d307e62.js";import"./ShaderCompiler-0141bd89.js";import"./config-31d4f506.js";import"./GeometryUtils-9ff4b746.js";import"./MaterialKey-2b9ba730.js";import"./earcut-0cc318b8.js";class a{constructor(){this.gradient=null,this.height=512,this.width=512}render(t){i(t,512,this.intensities,this.gradient,this.minPixelIntensity,this.maxPixelIntensity)}}let o=class extends r{constructor(t){super(t),this._intensityInfo={minPixelIntensity:0,maxPixelIntensity:0},this.featuresView={attributeView:{initialize:()=>{},requestUpdate:()=>{}},requestRender:()=>{}},this._container=new s(t.tileInfoView)}createTile(t){const e=this._container.createTile(t);return this.tileInfoView.getTileCoords(e.bitmap,t),e.bitmap.resolution=this.tileInfoView.getTileResolution(t),e}onConfigUpdate(){const t=this.layer.renderer;if("heatmap"===t.type){const{minPixelIntensity:e,maxPixelIntensity:i}=t;this._intensityInfo.minPixelIntensity=e,this._intensityInfo.maxPixelIntensity=i,this._gradient=n(t.toJSON()),this.tiles.forEach((t=>{const n=t.bitmap.source;n&&(n.minPixelIntensity=e,n.maxPixelIntensity=i,n.gradient=this._gradient,t.bitmap.invalidateTexture())}))}}hitTest(){return Promise.resolve([])}install(t){t.addChild(this._container)}uninstall(t){this._container.removeAllChildren(),t.removeChild(this._container)}disposeTile(t){this._container.removeChild(t),t.destroy()}supportsRenderer(t){return t&&"heatmap"===t.type}onTileData(t){const e=this.tiles.get(t.tileKey);if(!e)return;const i=t.intensityInfo,{minPixelIntensity:n,maxPixelIntensity:s}=this._intensityInfo,r=e.bitmap.source||new a;r.intensities=i&&i.matrix||null,r.minPixelIntensity=n,r.maxPixelIntensity=s,r.gradient=this._gradient,e.bitmap.source=r,this._container.addChild(e),this.requestUpdate()}onTileError(t){console.error(t)}lockGPUUploads(){}unlockGPUUploads(){}};o=t([e("esri.views.2d.layers.features.tileRenderers.HeatmapTileRenderer")],o);var l=o;export{l as default};
