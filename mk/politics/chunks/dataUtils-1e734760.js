import{cd as t,t as e,g as n,r,s as o,k as a,ao as i,cp as s,b_ as l,dp as h}from"../main.js";import{i as c,u}from"./pixelUtils-ea0d20a1.js";const f=new Map;f.set("meter-per-second",1),f.set("kilometer-per-hour",.277778),f.set("knots",.514444),f.set("feet-per-second",.3048),f.set("mile-per-hour",.44704);const d=180/Math.PI,p=new t({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function m(t,e){return f.get(t)/f.get(e)||1}function g(t){return(450-t)%360}function w(t,e="geographic"){const[n,r]=t,o=Math.sqrt(n*n+r*r);let a=Math.atan2(r,n)*d;return a=(360+a)%360,"geographic"===e&&(a=g(a)),[o,a]}function M(t,e="geographic"){let n=t[1];"geographic"===e&&(n=g(n)),n%=360;const r=t[0];return[r*Math.cos(n/d),r*Math.sin(n/d)]}function x(t,r,o,a="geographic"){if(!c(t)||e(o))return t;const i="vector-magdir"===r?t.clone():n(y(t,r)),s=i.pixels[1];for(let t=0;t<s.length;t++)s[t]="geographic"===a?(s[t]+o[t]+270)%360:(s[t]+360-o[t])%360;return"vector-magdir"===r?i:y(i,"vector-magdir")}function y(t,e,n="geographic",r=1){if(!c(t))return t;const{pixels:o,width:a,height:i}=t,s=a*i,l=o[0],h=o[1],f=t.pixelType.startsWith("f")?t.pixelType:"f32",d=u.createEmptyBand(f,s),p=u.createEmptyBand(f,s);let m=0;for(let t=0;t<i;t++)for(let t=0;t<a;t++)"vector-uv"===e?([d[m],p[m]]=w([l[m],h[m]],n),d[m]*=r):([d[m],p[m]]=M([l[m],h[m]],n),d[m]*=r,p[m]*=r),m++;const g=new u({pixelType:f,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[d,p]});return g.updateStatistics(),g}function k(t,e,n=1){if(1===n||!c(t))return t;const r=t.clone(),{pixels:o,width:a,height:i}=r,s=o[0],l=o[1];let h=0;for(let t=0;t<i;t++)for(let t=0;t<a;t++)"vector-uv"===e?(s[h]*=n,l[h]*=n):s[h]*=n,h++;return r.updateStatistics(),r}function v(t,e,n,o,a){if(!r(a)||!a.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/o),height:Math.round(n/o),resolution:t.width/e};const i=a.xmin,s=a.ymax,l=(t.xmax-t.xmin)/e*o,h=(t.ymax-t.ymin)/n*o,c=(l+h)/2;return t.xmin=i+Math.floor((t.xmin-i)/l)*l,t.xmax=i+Math.ceil((t.xmax-i)/l)*l,t.ymin=s+Math.floor((t.ymin-s)/h)*h,t.ymax=s+Math.ceil((t.ymax-s)/h)*h,{extent:t,width:Math.round(t.width/l),height:Math.round(t.height/h),resolution:c}}const P=function(t=0,e=0,n=Math.PI,r=!0){r&&(n=(2*Math.PI-n)%(2*Math.PI));const o=r?-1:1,a=13*o,i=-7*o,s=-2*o,l=-16*o,h=21.75,[c,u]=b(0,e+a,n,h),[f,d]=b(t-5.5,e+i,n,h),[p,m]=b(t+5.5,e+i,n,h),[g,w]=b(t-1.5,e+s,n,h),[M,x]=b(t+1.5,e+s,n,h),[y,k]=b(t-1.5,e+l,n,h),[v,P]=b(t+1.5,e+l,n,h);return[c,u,f,d,g,w,M,x,p,m,y,k,v,P]}(0,0,0);function A(t=0,e=Math.PI,n=!0){n&&(e=(2*Math.PI-e)%(2*Math.PI));const r=n?-1:1,o=5*r,a=20*r,i=25*r,s=45,l=2*r;let[h,c]=[5,0-a],[u,f]=[h+2,c],[d,p]=[u-0,f+l],[m,g]=[-5,0-i],[w,M]=[m+0,g-l],x=Math.ceil(t/5),y=Math.floor(x/10);x-=8*y;const k=[],v=[];for(let t=0;t<x/2;t++,y--){y<=0&&x%2==1&&t===(x-1)/2&&(m=0,w=m+0,g=(g+c)/2,M=g-l);const[n,r]=b(m,g,e,s);if(y>0){const[t,o]=b(u,g,e,s),[a,i]=b(h,c,e,s);k.push(t),k.push(o),k.push(n),k.push(r),k.push(a),k.push(i)}else{const[t,o]=b(u,f,e,s),[a,i]=b(d,p,e,s),[l,h]=b(w,M,e,s);v.push(n),v.push(r),v.push(l),v.push(h),v.push(a),v.push(i),v.push(t),v.push(o)}g+=o,c+=o,f+=o,p+=o,M+=o}const[P,A]=b(5,0+a,e,s),[I,F]=b(7,0+a,e,s),[S,D]=b(5,0-i,e,s),[_,V]=b(7,0-i,e,s);return{pennants:k,barbs:v,shaft:[P,A,I,F,S,D,_,V]}}function b(t,e,n,r=1){const o=Math.sqrt(t*t+e*e)/r,a=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[o,(2*Math.PI+a-n)%(2*Math.PI)]}const I=[0,1,3,6,10,16,21,27,33,40,47,55,63],F=[0,.5,1,1.5,2],S=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function D(t,e,n,r){const o=m(r||"knots",n);let a;for(a=1;a<e.length;a++)if(a===e.length-1){if(t<e[a]*o)break}else if(t<=e[a]*o)break;return Math.min(a-1,e.length-2)}function _(t,e,n,r,o){let a=0;switch(e){case"beaufort_kn":a=D(t,I,"knots",n);break;case"beaufort_km":a=D(t,I,"kilometer-per-hour",n);break;case"beaufort_ft":a=D(t,I,"feet-per-second",n);break;case"beaufort_m":a=D(t,I,"meter-per-second",n);break;case"classified_arrow":a=D(t,o,r,n);break;case"ocean_current_m":a=D(t,F,"meter-per-second",n);break;case"ocean_current_kn":a=D(t,S,"knots",n)}return a}const V=[];function U(t,e){let n=0,r=0;const{width:o,height:a,mask:i}=t,s=t.pixels[0],l=[],h=[],c=m(p.fromJSON(e.inputUnit),"knots"),u="wind_speed"===e.style?5:Number.MAX_VALUE;for(let t=0;t<a;t++)for(let e=0;e<o;e++){const f=s[t*o+e]*c;if((!i||i[t*o+e])&&f<u){for(let r=0;r<4;r++)l[n++]=(e+.5)/o,l[n++]=(t+.5)/a,l[n++]=r<2?-.5:.5,l[n++]=r%2==0?-.5:.5,l[n++]=0,l[n++]=f;const i=4*(n/24-1);h[r++]=i,h[r++]=i+1,h[r++]=i+2,h[r++]=i+1,h[r++]=i+2,h[r++]=i+3}}return{vertexData:new Float32Array(l),indexData:new Uint32Array(h)}}function L(t,e){return"simple_scalar"===e.style?U(t,e):"wind_speed"===e.style?function(t,e){if(0===V.length)for(let t=0;t<30;t++)V.push(A(5*t,0));const n=m(p.fromJSON(e.inputUnit),"knots"),{width:r,height:o,mask:a}=t,i=t.pixels[0],s=t.pixels[1],l=[],h=[];let c=0,u=0;for(let t=0;t<o;t++)for(let e=0;e<r;e++){const d=t*r+e,p=i[d]*n;if((!a||a[t*r+e])&&p>=5){var f;const n=null!=(f=(s[d]+360)%360/180*Math.PI)?f:2*Math.PI*Math.random(),{pennants:a,barbs:i,shaft:m}=V[Math.min(Math.floor(p/5),29)];if(a.length+i.length===0)continue;let g=l.length/6;const w=(e+.5)/r,M=(t+.5)/o;for(let t=0;t<a.length;t+=2)l[c++]=w,l[c++]=M,l[c++]=a[t],l[c++]=a[t+1]+n,l[c++]=0,l[c++]=p;for(let t=0;t<i.length;t+=2)l[c++]=w,l[c++]=M,l[c++]=i[t],l[c++]=i[t+1]+n,l[c++]=0,l[c++]=p;for(let t=0;t<m.length;t+=2)l[c++]=w,l[c++]=M,l[c++]=m[t],l[c++]=m[t+1]+n,l[c++]=0,l[c++]=p;for(let t=0;t<a.length/6;t++)h[u++]=g,h[u++]=g+1,h[u++]=g+2,g+=3;for(let t=0;t<i.length/8;t++)h[u++]=g,h[u++]=g+1,h[u++]=g+2,h[u++]=g+1,h[u++]=g+2,h[u++]=g+3,g+=4;h[u++]=g+0,h[u++]=g+1,h[u++]=g+2,h[u++]=g+1,h[u++]=g+3,h[u++]=g+2,g+=4}}return{vertexData:new Float32Array(l),indexData:new Uint32Array(h)}}(t,e):function(t,e){const{style:n,inputUnit:r,outputUnit:o,breakValues:a}=e,i=p.fromJSON(r),s=p.fromJSON(o);let l=0,h=0;const{width:c,height:u,mask:f}=t,d=t.pixels[0],m=t.pixels[1],g=f?f.filter((t=>t>0)).length:c*u,w=new Float32Array(42*g),M=new Uint32Array(15*g);for(let t=0;t<u;t++)for(let e=0;e<c;e++){const r=t*c+e;if(!f||f[t*c+e]){var x;const o=null!=(x=(m[r]+360)%360/180*Math.PI)?x:2*Math.PI*Math.random(),f=_(d[r],n,i,s,a);for(let n=0;n<P.length;n+=2)w[l++]=(e+.5)/c,w[l++]=(t+.5)/u,w[l++]=P[n],w[l++]=P[n+1]+o,w[l++]=f,w[l++]=d[r];const p=7*(l/42-1);M[h++]=p,M[h++]=p+1,M[h++]=p+2,M[h++]=p+0,M[h++]=p+4,M[h++]=p+3,M[h++]=p+0,M[h++]=p+2,M[h++]=p+3,M[h++]=p+2,M[h++]=p+5,M[h++]=p+3,M[h++]=p+5,M[h++]=p+6,M[h++]=p+3}}return{vertexData:w,indexData:M}}(t,e)}function T(t,e,n,r=[0,0],o=.5){const{width:a,height:i,mask:s}=t,[l,h]=t.pixels,[c,f]=r,d=Math.round((a-c)/n),p=Math.round((i-f)/n),m=d*p,g=new Float32Array(m),x=new Float32Array(m),y=new Uint8Array(m),k="vector-uv"===e;for(let t=0;t<p;t++)for(let e=0;e<d;e++){let r=0;const u=t*d+e,p=Math.max(0,t*n+f),m=Math.max(0,e*n+c),v=Math.min(i,p+n),P=Math.min(a,m+n);for(let t=p;t<v;t++)for(let e=m;e<P;e++){const n=t*a+e;if(!s||s[n]){r++;const t=k?[l[n],h[n]]:[l[n],(360+h[n])%360],[e,o]=k?t:M(t);g[u]+=e,x[u]+=o}}if(r>=(v-p)*(P-m)*(1-o)){y[u]=1;const[t,e]=w([g[u]/r,x[u]/r]);g[u]=t,x[u]=e}else y[u]=0,g[u]=0,x[u]=0}const v=new u({width:d,height:p,pixels:[g,x],mask:y});return v.updateStatistics(),v}const q=o.getLogger("esri.views.2d.engine.flow.dataUtils");async function O(t,e,n){const r=performance.now(),o=B(t,e),i=performance.now(),s=R(t,o,e.width,e.height),h=performance.now(),c=function(t,e){const n=new l,r=t.reduce(((t,e)=>t+e.length),0),o=new Float32Array(4*r),a=new Array(t.length);let i=0,s=0;for(const r of t){const t=i;for(const t of r)o[4*i+0]=t.x,o[4*i+1]=t.y,o[4*i+2]=t.t,o[4*i+3]=t.speed,i++;a[s++]={startVertex:t,numberOfVertices:r.length,totalTime:r[r.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:o,lineDescriptors:a}}(s,!0),u=performance.now(),f=E(c),d=performance.now();if(t.profile){const t={"_createFlowFieldFromData()":Math.round(i-r),"_getStreamlines()":Math.round(h-i),"createAnimatedLinesData()":Math.round(u-h),"createLinesMesh()":Math.round(d-u),"Total elapsed time":Math.round(d-r)};q.info("createStreamlinesMesh profile",t)}return await Promise.resolve(),a(n),f}function B(t,e){const n=function(t,e,n,r){if(0===r)return t;const o=Math.round(3*r),a=new Array(2*o+1);let i=0;for(let t=-o;t<=o;t++){const e=Math.exp(-t*t/(r*r));a[t+o]=e,i+=e}for(let t=-o;t<=o;t++)a[t+o]/=i;const s=new Float32Array(t.length);for(let r=0;r<n;r++)for(let n=0;n<e;n++){let i=0,l=0;for(let s=-o;s<=o;s++){if(n+s<0||n+s>=e)continue;const h=a[s+o];i+=h*t[2*(r*e+(n+s))+0],l+=h*t[2*(r*e+(n+s))+1]}s[2*(r*e+n)+0]=i,s[2*(r*e+n)+1]=l}const l=new Float32Array(t.length);for(let t=0;t<e;t++)for(let r=0;r<n;r++){let i=0,h=0;for(let l=-o;l<=o;l++){if(r+l<0||r+l>=n)continue;const c=a[l+o];i+=c*s[2*((r+l)*e+t)+0],h+=c*s[2*((r+l)*e+t)+1]}l[2*(r*e+t)+0]=i,l[2*(r*e+t)+1]=h}return l}(e.data,e.width,e.height,t.smoothing);return t.interpolate?(t,r)=>{const o=Math.floor(t),a=Math.floor(r);if(o<0||o>=e.width)return[0,0];if(a<0||a>=e.height)return[0,0];const i=t-o,s=r-a,l=o,h=a,c=o<e.width-1?o+1:o,u=a<e.height-1?a+1:a,f=n[2*(h*e.width+l)],d=n[2*(h*e.width+c)],p=n[2*(u*e.width+l)],m=n[2*(u*e.width+c)],g=n[2*(h*e.width+l)+1],w=n[2*(h*e.width+c)+1];return[(f*(1-s)+p*s)*(1-i)+(d*(1-s)+m*s)*i,(g*(1-s)+n[2*(u*e.width+l)+1]*s)*(1-i)+(w*(1-s)+n[2*(u*e.width+c)+1]*s)*i]}:(t,r)=>{const o=Math.round(t),a=Math.round(r);return o<0||o>=e.width||a<0||a>=e.height?[0,0]:[n[2*(a*e.width+o)+0],n[2*(a*e.width+o)+1]]}}function N(t,e,n,r,o,a,i,s,l){const h=[];let c=n,u=r,f=0,[d,p]=e(c,u);d*=t.velocityScale,p*=t.velocityScale;const m=Math.sqrt(d*d+p*p);let g,w;h.push({x:c,y:u,t:f,speed:m});for(let n=0;n<t.verticesPerLine;n++){let[n,r]=e(c,u);n*=t.velocityScale,r*=t.velocityScale;const d=Math.sqrt(n*n+r*r);if(d<t.minSpeedThreshold)return h;const p=n/d,m=r/d;if(c+=p*t.segmentLength,u+=m*t.segmentLength,f+=t.segmentLength/d,Math.acos(p*g+m*w)>t.maxTurnAngle)return h;if(t.mergeLines){const t=Math.round(c*l),e=Math.round(u*l);if(t<0||t>i-1||e<0||e>s-1)return h;const n=a[e*i+t];if(-1!==n&&n!==o)return h;a[e*i+t]=o}h.push({x:c,y:u,t:f,speed:d}),g=p,w=m}return h}function R(t,e,n,r){const o=[],a=new l,i=1/Math.max(t.lineCollisionWidth,1),s=Math.round(n*i),h=Math.round(r*i),c=new Int32Array(s*h);for(let t=0;t<c.length;t++)c[t]=-1;const u=[];for(let e=0;e<r;e+=t.lineSpacing)for(let r=0;r<n;r+=t.lineSpacing)u.push({x:r,y:e,sort:a.getFloat()});u.sort(((t,e)=>t.sort-e.sort));for(const{x:n,y:r}of u)if(a.getFloat()<t.density){const a=N(t,e,n,r,o.length,c,s,h,i);if(a.length<2)continue;o.push(a)}return o}function E(t,e=10){const{lineVertices:n,lineDescriptors:r}=t;let o=0,a=0;for(const t of r)o+=2*t.numberOfVertices,a+=6*(t.numberOfVertices-1);const i=new Float32Array(9*o),s=new Uint32Array(a);let l=0,h=0;function c(){s[h++]=l-2,s[h++]=l,s[h++]=l-1,s[h++]=l,s[h++]=l+1,s[h++]=l-1}function u(t,e,n,r,o,a,s,h){const c=9*l;let u=0;i[c+u++]=t,i[c+u++]=e,i[c+u++]=1,i[c+u++]=n,i[c+u++]=a,i[c+u++]=s,i[c+u++]=r/2,i[c+u++]=o/2,i[c+u++]=h,l++,i[c+u++]=t,i[c+u++]=e,i[c+u++]=-1,i[c+u++]=n,i[c+u++]=a,i[c+u++]=s,i[c+u++]=-r/2,i[c+u++]=-o/2,i[c+u++]=h,l++}for(const t of r){const{totalTime:r,timeSeed:o}=t;let a=null,i=null,s=null,l=null,h=null,f=null;for(let d=0;d<t.numberOfVertices;d++){const p=n[4*(t.startVertex+d)+0],m=n[4*(t.startVertex+d)+1],g=n[4*(t.startVertex+d)+2],w=n[4*(t.startVertex+d)+3];let M=null,x=null,y=null,k=null;if(d>0){M=p-a,x=m-i;const t=Math.sqrt(M*M+x*x);if(M/=t,x/=t,d>1){let t=M+h,n=x+f;const r=Math.sqrt(t*t+n*n);t/=r,n/=r;const o=Math.min(1/(t*M+n*x),e);t*=o,n*=o,y=-n,k=t}else y=-x,k=M;null!==y&&null!==k&&(u(a,i,s,y,k,r,o,w),c())}a=p,i=m,s=g,h=M,f=x,l=w}u(a,i,s,-f,h,r,o,l)}return{vertexData:i,indexData:s}}function J(t,e){const n=e.pixels,{width:r,height:o}=e,a=new Float32Array(r*o*2);if("vector-uv"===t)for(let t=0;t<r*o;t++)a[2*t+0]=n[0][t],a[2*t+1]=-n[1][t];else if("vector-magdir"===t)for(let t=0;t<r*o;t++){const e=n[0][t],r=h(n[1][t]),o=Math.cos(r-Math.PI/2),i=Math.sin(r-Math.PI/2);a[2*t+0]=o*e,a[2*t+1]=i*e}return{data:a,width:r,height:o}}async function j(t,e,n,r,o,a){const l=i(e.spatialReference);if(!l)return C(t,e,n,r,o,a);const[h,c]=l.valid,u=c-h,f=Math.ceil(e.width/u),d=e.width/f,p=Math.round(n/f);let m=e.xmin;const g=[];for(let n=0;n<f;n++){const n=new s({xmin:m,xmax:m+d,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});g.push(C(t,n,p,r,o,a)),m+=d}const w=await Promise.all(g),M={data:new Float32Array(n*r*2),width:n,height:r};let x=0;for(const t of w){for(let e=0;e<t.height;e++)for(let r=0;r<t.width;r++)x+r>=n||(M.data[2*(e*n+x+r)+0]=t.data[2*(e*t.width+r)+0],M.data[2*(e*n+x+r)+1]=t.data[2*(e*t.width+r)+1]);x+=t.width}return M}async function C(t,n,o,a,i,s){const l={requestProjectedLocalDirections:!0,signal:s};if(r(i)&&(l.timeExtent=i),"imagery"===t.type){await t.load({signal:s});const r=t.rasterInfo.dataType,i=await t.fetchImage(n,o,a,l);return!i||e(i.pixelData)||e(i.pixelData.pixelBlock)?{data:new Float32Array(o*a*2),width:o,height:a}:J(r,i.pixelData.pixelBlock)}await t.load({signal:s});const h=t.rasterInfo.dataType,c=await t.fetchPixels(n,o,a,l);return!c||e(c.pixelBlock)?{data:new Float32Array(o*a*2),width:o,height:a}:J(h,c.pixelBlock)}export{U as D,L as F,k as M,m as c,y as d,w as f,v as g,O as h,T as j,p as l,x as m,j as y};
