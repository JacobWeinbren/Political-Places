import{s as e,kn as t,ko as a,kp as r,kq as n,gn as s,kr as l,e as u,ks as i}from"../main.js";const o=e.getLogger("esri.layers.support.labelFormatUtils"),c={type:"simple",evaluate:()=>null},p={getAttribute:(e,t)=>e.field(t)};async function f(e,r,n){if(!e||!e.symbol)return c;const s=e.where,l=t(e),f=s?await import("./WhereClause-71493fcb.js"):null;let m;if("arcade"===l.type){const e=await a(l.expression,n,r);m={type:"arcade",evaluate(t){try{const a=e.evaluate({$feature:"attributes"in t?e.repurposeFeature(t):t});if(null!=a)return a.toString()}catch(e){o.error(new u("bad-arcade-expression","Encountered an error when evaluating label expression for feature",{feature:t,expression:l}))}return null},needsHydrationToEvaluate:()=>null==i(l.expression)}}else m={type:"simple",evaluate:e=>l.expression.replace(/{[^}]*}/g,(t=>{const a=t.slice(1,-1),n=r.get(a);if(!n)return t;let s=null;return"attributes"in e?e&&e.attributes&&(s=e.attributes[n.name]):s=e.field(n.name),null==s?"":d(s,n)}))};if(s){let e;try{e=f.WhereClause.create(s,r)}catch(e){return c}const t=m.evaluate;m.evaluate=a=>{const r="attributes"in a?void 0:p;return e.testFeature(a,r)?t(a):null}}return m}function d(e,t){if(null==e)return"";const a=t.domain;if(a)if("codedValue"===a.type||"coded-value"===a.type){const t=e;for(const e of a.codedValues)if(e.code===t)return e.name}else if("range"===a.type){const t=+e,r="range"in a?a.range[0]:a.minValue,n="range"in a?a.range[1]:a.maxValue;if(r<=t&&t<=n)return a.name}let u=e;return"date"===t.type||"esriFieldTypeDate"===t.type?u=r(u,n("short-date")):s(t)&&(u=l(+u)),u||""}export{f as createLabelFunction,d as formatField};
