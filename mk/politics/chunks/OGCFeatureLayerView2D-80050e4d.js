import{V as e,W as i,X as a,a as r}from"../main.js";import{Z as s}from"./FeatureLayerView2D-a1292b3e.js";import"./clickToleranceUtils-020a3191.js";import"./definitions-8d307e62.js";import"./LayerView-e344cad3.js";import"./Container-4f0796f7.js";import"./mat4f32-2308129f.js";import"./schemaUtils-a84d5118.js";import"./Utils-a6360ab9.js";import"./Texture-1722ee47.js";import"./MaterialKey-2b9ba730.js";import"./visualVariablesUtils-8d911ce2.js";import"./CIMSymbolHelper-4c241148.js";import"./Rect-531bace0.js";import"./BidiEngine-b7dfb718.js";import"./MD5-c8535b52.js";import"./popupUtils-9c3fe1d7.js";import"./drapedUtils-ec23ba4b.js";const t=s=>{let t=class extends s{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new r("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([a("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(s)){};l=e([a("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export{o as default};
