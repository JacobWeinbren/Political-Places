import{V as e,W as i,X as a,a as r}from"../main.js";import{Z as s}from"./FeatureLayerView2D-12283e2e.js";import"./clickToleranceUtils-fafedc93.js";import"./definitions-bed6fa82.js";import"./LayerView-1a21bf7a.js";import"./Container-4c789dcd.js";import"./mat4f32-c792828b.js";import"./schemaUtils-0b1a48b9.js";import"./Utils-5ca71fda.js";import"./Texture-985b002d.js";import"./MaterialKey-e4d8bf43.js";import"./visualVariablesUtils-f36e6e93.js";import"./CIMSymbolHelper-7e9b7a1b.js";import"./Rect-7efb79ab.js";import"./BidiEngine-b4bf30d1.js";import"./MD5-dea8f45f.js";import"./popupUtils-bc1bf976.js";import"./drapedUtils-fff1f27c.js";const t=s=>{let t=class extends s{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new r("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([a("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(s)){};l=e([a("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export default o;
