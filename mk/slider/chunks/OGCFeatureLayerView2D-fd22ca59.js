import{V as e,W as i,X as a,a as r}from"../main.js";import{Z as s}from"./FeatureLayerView2D-54542285.js";import"./clickToleranceUtils-5a33ba15.js";import"./definitions-666095f0.js";import"./LayerView-d73fcd33.js";import"./Container-3505320a.js";import"./mat4f32-85cc7f8e.js";import"./schemaUtils-4cee232d.js";import"./Utils-295a84b6.js";import"./Texture-636b9053.js";import"./MaterialKey-c9114260.js";import"./visualVariablesUtils-806c1450.js";import"./CIMSymbolHelper-d93529bf.js";import"./Rect-eeb1baba.js";import"./BidiEngine-3eae5fd5.js";import"./MD5-54f385ab.js";import"./popupUtils-cfa9873d.js";import"./drapedUtils-763777a9.js";const t=s=>{let t=class extends s{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new r("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([a("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(s)){};l=e([a("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export default o;
