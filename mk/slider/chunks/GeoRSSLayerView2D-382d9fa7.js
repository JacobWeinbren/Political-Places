import{c_ as e,c8 as i,cb as s,e5 as t,e6 as r,F as a,bJ as o,V as p,X as l}from"../main.js";import{l as n,d as h}from"./LayerView-d73fcd33.js";import{i as m}from"./GraphicContainer-9de96e7a.js";import{i as c}from"./BaseGraphicContainer-59e2c4a9.js";import"./Container-3505320a.js";import"./mat4f32-85cc7f8e.js";import"./Utils-295a84b6.js";import"./Texture-636b9053.js";import"./projectionSupport-926aaaf8.js";import"./json-961aa744.js";import"./Matcher-88c7f9bb.js";import"./definitions-666095f0.js";import"./TileStore-feed8a20.js";import"./FeatureSetReader-1caec9b2.js";import"./centroid-6e341db9.js";import"./visualVariablesUtils-60a35702.js";import"./visualVariablesUtils-806c1450.js";import"./quickselect-8c077a37.js";import"./tileUtils-8fc43c49.js";import"./schemaUtils-4cee232d.js";import"./MaterialKey-c9114260.js";import"./CIMSymbolHelper-d93529bf.js";import"./Rect-eeb1baba.js";import"./BidiEngine-3eae5fd5.js";import"./MD5-54f385ab.js";import"./GeometryUtils-d8d541eb.js";import"./earcut-c458cc7d.js";import"./TileClipper-de4463c1.js";import"./VertexArrayObject-eae45e3a.js";import"./FeatureContainer-5e1817fb.js";import"./TileContainer-260ec730.js";import"./WGLContainer-a79ebaf7.js";import"./ShaderCompiler-b19b2f49.js";import"./config-a192e994.js";let y=class extends(n(h)){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}hitTest(e,i){if(this.suspended||!this.graphicsViews.length)return Promise.resolve(null);const s=this.graphicsViews.reverse().map((s=>s.hitTest(e,i)));return Promise.all(s).then((e=>e.filter(((e,i)=>(e&&(e.popupTemplate=this._popupTemplates.get(this.graphicsViews[i]),e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){if(this.graphicsViews)for(const i of this.graphicsViews)i.processUpdate(e)}attach(){this.layer.featureCollections.forEach((a=>{const o=e.fromJSON(a.featureSet),p=new(i.ofType(s))(o.features);let l;if(this._graphicsViewMap[o.geometryType])l=this._graphicsViewMap[o.geometryType],l.graphics.addMany(p);else{const e=a.layerDefinition.drawingInfo,i=a.popupInfo?t.fromJSON(a.popupInfo):null,s=r(e.renderer);l=new c({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:s,container:new m(this.view.featuresTilingScheme)}),this._graphicsViewMap[o.geometryType]=l,this._popupTemplates.set(l,i),"polygon"!==o.geometryType||this.layer.polygonSymbol?"polyline"!==o.geometryType||this.layer.lineSymbol?"point"!==o.geometryType||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}})),this.handles.add([a(this.layer,"polygonSymbol",(e=>{this._graphicsViewMap.polygon.renderer=new o({symbol:e})})),a(this.layer,"lineSymbol",(e=>{this._graphicsViewMap.polyline.renderer=new o({symbol:e})})),a(this.layer,"pointSymbol",(e=>{this._graphicsViewMap.point.renderer=new o({symbol:e})}))])}detach(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this.graphicsViews.length=0}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}};y=p([l("esri.views.2d.layers.GeoRSSLayerView2D")],y);var d=y;export default d;
