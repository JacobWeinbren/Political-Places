import{r as e,cb as i,c8 as s,F as t,dP as r,t as a,V as o,X as n}from"../main.js";import{l as p,d as c}from"./LayerView-c4fa1a74.js";import{i as h}from"./GraphicContainer-3db71182.js";import{i as l}from"./BaseGraphicContainer-f4534701.js";import"./Container-a6a24cec.js";import"./mat4f32-85cc7f8e.js";import"./Utils-35d958ae.js";import"./Texture-2e226ed8.js";import"./projectionSupport-e2ddce21.js";import"./json-961aa744.js";import"./Matcher-28e096dd.js";import"./definitions-666095f0.js";import"./TileStore-3feb5295.js";import"./FeatureSetReader-84e04b02.js";import"./centroid-6e341db9.js";import"./visualVariablesUtils-5841f97c.js";import"./visualVariablesUtils-cad1c62a.js";import"./quickselect-8c077a37.js";import"./tileUtils-6dd07ea3.js";import"./schemaUtils-232a3cf1.js";import"./MaterialKey-109c8370.js";import"./CIMSymbolHelper-46c8c25d.js";import"./Rect-eeb1baba.js";import"./BidiEngine-3eae5fd5.js";import"./MD5-54f385ab.js";import"./GeometryUtils-d8d541eb.js";import"./earcut-c458cc7d.js";import"./TileClipper-d08e9b38.js";import"./VertexArrayObject-7c8fe18f.js";import"./FeatureContainer-c541c2b9.js";import"./TileContainer-c7d0a77e.js";import"./WGLContainer-c17d1ffc.js";import"./ShaderCompiler-86e7b04d.js";import"./config-a192e994.js";const d="sublayers",u="layerView",m=Object.freeze({remove(){},pause(){},resume(){}});let f=class extends(p(c)){async fetchPopupFeatures(e){return(await Promise.all(Array.from(this.graphicsViews(),(i=>i.searchFeatures(e).then((e=>e.filter((e=>!!e.popupTemplate)))))))).flat()}*graphicsViews(){e(this._graphicsViewsFeatureCollectionMap)?yield*this._graphicsViewsFeatureCollectionMap.keys():e(this._graphicsViews)?yield*this._graphicsViews:yield*[]}async hitTest(i,s){if(this.suspended)return null;const t=Array.from(this.graphicsViews(),(async t=>{const r=await t.hitTest(i,s);if(r){if(e(this._graphicsViewsFeatureCollectionMap)){const e=this._graphicsViewsFeatureCollectionMap.get(t);!r.popupTemplate&&e.popupTemplate&&(r.popupTemplate=e.popupTemplate)}return r}return null}));return(await Promise.all(t)).filter((e=>!!e))[0]||null}highlight(e){let t;if("number"==typeof e?t=[e]:e instanceof i?t=[e.uid]:Array.isArray(e)&&e.length>0?t="number"==typeof e[0]?e:e.map((e=>e&&e.uid)):s.isCollection(e)&&(t=e.map((e=>e&&e.uid)).toArray()),t=t.filter((e=>null!=e)),!t.length)return m;for(const e of this.graphicsViews())e.addHighlight(t);return{remove:()=>{for(const e of this.graphicsViews())e.removeHighlight(t)}}}update(e){for(const i of this.graphicsViews())i.processUpdate(e)}attach(){const i=this.view,s=()=>this.requestUpdate(),a=this.layer.featureCollections;if(e(a)&&a.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const e of a){const r=new h(this.view.featuresTilingScheme);r.fadeTransitionEnabled=!0;const a=new l({view:i,graphics:e.source,renderer:e.renderer,requestUpdateCallback:s,container:r});this._graphicsViewsFeatureCollectionMap.set(a,e),this.container.addChild(a.container),this.handles.add([t(e,"visible",(e=>a.container.visible=e)),t(a,"updating",(()=>this.notifyChange("updating")))],u)}}else e(this.layer.sublayers)&&this.handles.add(r(this.layer,"sublayers","change",(()=>this._createGraphicsViews()),(()=>this._createGraphicsViews()),(()=>this._destroyGraphicsViews())),d)}detach(){this._destroyGraphicsViews(),this.handles.remove(d)}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews())e.viewChange()}isUpdating(){for(const e of this.graphicsViews())if(e.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.handles.remove(u);for(const e of this.graphicsViews())e.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),a(this.layer.sublayers))return;const e=[],i=this.view,s=()=>this.requestUpdate();for(const r of this.layer.sublayers){const a=new h(this.view.featuresTilingScheme);a.fadeTransitionEnabled=!0;const o=new l({view:i,graphics:r.graphics,requestUpdateCallback:s,container:a});this.handles.add([r.on("graphic-update",o.graphicUpdateHandler),t(r,"visible",(e=>o.container.visible=e)),t(o,"updating",(()=>this.notifyChange("updating")))],u),this.container.addChild(o.container),e.push(o)}this._graphicsViews=e}};f=o([n("esri.views.2d.layers.MapNotesLayerView2D")],f);var g=f;export default g;
