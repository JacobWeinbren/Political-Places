import{V as e,X as i,F as s,t as r,dN as t}from"../main.js";import a from"./FeatureLayerView2D-583d4f4f.js";import"./clickToleranceUtils-63c82886.js";import"./definitions-541a827f.js";import"./LayerView-4a0c43ec.js";import"./Container-48598a31.js";import"./mat4f32-4d6347a3.js";import"./schemaUtils-2f83f043.js";import"./Utils-603370fc.js";import"./Texture-5b95822c.js";import"./MaterialKey-0c72ec0b.js";import"./visualVariablesUtils-7b39870f.js";import"./CIMSymbolHelper-e6c8dfca.js";import"./Rect-8eaeb735.js";import"./BidiEngine-3c9378fc.js";import"./MD5-4268822b.js";import"./popupUtils-6804921a.js";import"./drapedUtils-441548c1.js";let l=class extends a{initialize(){this.handles.add([s(this.view,"viewpoint",(()=>this._update()))])}_injectOverrides(e){const i=super._injectOverrides(e),s=this.view.scale,a=this.layer.sublayers.filter((e=>function(e,i){return!e.visible||0!==e.minScale&&i>e.minScale||0!==e.maxScale&&i<e.maxScale}(e,s))).map((e=>e.subtypeCode));if(!a.length)return i;const l=`NOT ${this.layer.subtypeField} IN (${a.join(",")})`;if(r(i))return new t({where:l});const o=i.clone();return o.where+=` AND ${l}`,o}_setLayersForFeature(e){const i=this.layer.fieldsIndex.get(this.layer.subtypeField),s=e.attributes[i.name],r=this.layer.sublayers.find((e=>e.subtypeCode===s));e.layer=r,e.sourceLayer=this.layer}_createSchemaConfig(){const e={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map((e=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:e.labelingInfo,labelsVisible:e.labelsVisible,renderer:e.renderer,subtypeCode:e.subtypeCode})))},i=this.layer.sublayers.map((e=>e.subtypeCode)).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${i})`:"1=2";let r=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return r+=s,{...super._createSchemaConfig(),...e,definitionExpression:r}}};l=e([i("esri.views.2d.layers.SubtypeGroupLayerView2D")],l);var o=l;export default o;
