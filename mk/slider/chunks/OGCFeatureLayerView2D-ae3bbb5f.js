import{V as e,W as i,X as a,a as r}from"../main.js";import{Z as s}from"./FeatureLayerView2D-42303842.js";import"./clickToleranceUtils-096306aa.js";import"./definitions-8d42c7e4.js";import"./LayerView-05d838b2.js";import"./Container-e937e375.js";import"./mat4f32-bd01a79c.js";import"./schemaUtils-aea2b217.js";import"./Utils-699ce6bc.js";import"./Texture-ab78374c.js";import"./MaterialKey-c108b1ad.js";import"./visualVariablesUtils-8ef51f15.js";import"./CIMSymbolHelper-34678fa8.js";import"./Rect-6e88f247.js";import"./BidiEngine-a0a00b6c.js";import"./MD5-0f7e0dfe.js";import"./popupUtils-d2af6207.js";import"./drapedUtils-857aa458.js";const t=s=>{let t=class extends s{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new r("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([a("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(s)){};l=e([a("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export default o;
