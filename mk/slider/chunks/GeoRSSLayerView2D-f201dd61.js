import{c_ as e,c8 as i,cb as s,e5 as t,e6 as r,F as a,bJ as o,V as p,X as l}from"../main.js";import{l as n,d as h}from"./LayerView-68c3c97b.js";import{i as m}from"./GraphicContainer-cbd759ef.js";import{i as c}from"./BaseGraphicContainer-c34fba26.js";import"./Container-a6e95168.js";import"./mat4f32-4d6347a3.js";import"./Utils-7e645faa.js";import"./Texture-3e9bcc53.js";import"./projectionSupport-fd6f2a36.js";import"./json-b23062ef.js";import"./Matcher-20056a22.js";import"./definitions-541a827f.js";import"./TileStore-b48e5f5d.js";import"./FeatureSetReader-bae06f87.js";import"./centroid-20dfb5f1.js";import"./visualVariablesUtils-b777b8fe.js";import"./visualVariablesUtils-b7312a7a.js";import"./quickselect-6bf00e39.js";import"./tileUtils-a8ac2825.js";import"./schemaUtils-df9e45ca.js";import"./MaterialKey-a7b0f43d.js";import"./CIMSymbolHelper-a7f52185.js";import"./Rect-8eaeb735.js";import"./BidiEngine-3c9378fc.js";import"./MD5-4268822b.js";import"./GeometryUtils-58894e90.js";import"./earcut-46e6738f.js";import"./TileClipper-1b4ed4cb.js";import"./VertexArrayObject-2fe693bc.js";import"./FeatureContainer-43ab23a1.js";import"./TileContainer-98e4e904.js";import"./WGLContainer-b2f4c144.js";import"./ShaderCompiler-54154800.js";import"./config-2213493a.js";let y=class extends(n(h)){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}hitTest(e,i){if(this.suspended||!this.graphicsViews.length)return Promise.resolve(null);const s=this.graphicsViews.reverse().map((s=>s.hitTest(e,i)));return Promise.all(s).then((e=>e.filter(((e,i)=>(e&&(e.popupTemplate=this._popupTemplates.get(this.graphicsViews[i]),e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){if(this.graphicsViews)for(const i of this.graphicsViews)i.processUpdate(e)}attach(){this.layer.featureCollections.forEach((a=>{const o=e.fromJSON(a.featureSet),p=new(i.ofType(s))(o.features);let l;if(this._graphicsViewMap[o.geometryType])l=this._graphicsViewMap[o.geometryType],l.graphics.addMany(p);else{const e=a.layerDefinition.drawingInfo,i=a.popupInfo?t.fromJSON(a.popupInfo):null,s=r(e.renderer);l=new c({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:s,container:new m(this.view.featuresTilingScheme)}),this._graphicsViewMap[o.geometryType]=l,this._popupTemplates.set(l,i),"polygon"!==o.geometryType||this.layer.polygonSymbol?"polyline"!==o.geometryType||this.layer.lineSymbol?"point"!==o.geometryType||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}})),this.handles.add([a(this.layer,"polygonSymbol",(e=>{this._graphicsViewMap.polygon.renderer=new o({symbol:e})})),a(this.layer,"lineSymbol",(e=>{this._graphicsViewMap.polyline.renderer=new o({symbol:e})})),a(this.layer,"pointSymbol",(e=>{this._graphicsViewMap.point.renderer=new o({symbol:e})}))])}detach(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this.graphicsViews.length=0}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}};y=p([l("esri.views.2d.layers.GeoRSSLayerView2D")],y);var f=y;export default f;
