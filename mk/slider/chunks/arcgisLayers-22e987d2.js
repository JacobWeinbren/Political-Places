import{cV as e,t as r,a,cW as t,r as n,cX as l,cp as s,L as o}from"../main.js";import{a as u}from"./lazyLayerLoader-dff14b0c.js";async function i(e){var r;const a=null==(r=e.properties)?void 0:r.customParameters,t=await d(e.url,a),n={...e.properties,url:e.url};if(!t.sublayerIds)return null!=t.layerOrTableId&&(n.layerId=t.layerOrTableId,n.sourceJSON=t.sourceJSON),new t.Constructor(n);const l=new((await import("../main.js").then((function(e){return e.j1}))).default)({title:t.parsedUrl.title});return c(l,t,n),l}function y(e,r){return e?e.find((e=>e.id===r)):null}function c(e,r,a){function t(e,t){const l={...a,layerId:e,sublayerTitleMode:"service-name"};return n(t)&&(l.sourceJSON=t),new r.Constructor(l)}r.sublayerIds.forEach((a=>{const n=t(a,y(r.sublayerInfos,a));e.add(n)})),r.tableIds.forEach((a=>{const n=t(a,y(r.tableInfos,a));e.tables.add(n)}))}async function d(t,n){let l=e(t);if(r(l)&&(l=await f(t,n)),r(l))throw new a("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:t});const{serverType:s,sublayer:o}=l;let i;const y={FeatureServer:"FeatureLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer"};switch(s){case"MapServer":i=null!=o?"FeatureLayer":async function(e,r){return(await b(e,r)).tileInfo}(t,n).then((e=>e?"TileLayer":"MapImageLayer"));break;case"ImageServer":i=b(t,n).then((e=>{const r=e.tileInfo&&e.tileInfo.format;return e.tileInfo?!r||"LERC"!==r.toUpperCase()||e.cacheType&&"elevation"!==e.cacheType.toLowerCase()?"ImageryTileLayer":"ElevationLayer":"ImageryLayer"}));break;case"SceneServer":i=b(l.url.path,n).then((e=>{const r={Point:"SceneLayer","3DObject":"SceneLayer",IntegratedMesh:"IntegratedMeshLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};if(e&&Array.isArray(e.layers)&&e.layers.length>0){const a=e.layers[0].layerType;if(null!=r[a])return r[a]}return"SceneLayer"}));break;default:i=y[s]}const c="FeatureServer"===s,d={parsedUrl:l,Constructor:null,layerOrTableId:c?o:null,sublayerIds:null,tableIds:null},p=await i;if({FeatureLayer:!0,SceneLayer:!0}[p]&&null==o){const e=await v(t,s,n);if(c&&(d.sublayerInfos=e.layerInfos,d.tableInfos=e.tableInfos),1!==e.layerIds.length+e.tableIds.length)d.sublayerIds=e.layerIds,d.tableIds=e.tableIds;else if(c){var I,S;d.layerOrTableId=null!=(I=e.layerIds[0])?I:e.tableIds[0],d.sourceJSON=null!=(S=e.layerInfos[0])?S:e.tableInfos[0]}}return d.Constructor=await async function(e){return(0,u[e])()}(p),d}async function f(e,r){var a;const o=await b(e,r);let u=null,i=null;const y=o.type;if("Feature Layer"===y||"Table"===y?(u="FeatureServer",i=o.id):"indexedVector"===y?u="VectorTileServer":o.hasOwnProperty("mapName")?u="MapServer":o.hasOwnProperty("bandCount")&&o.hasOwnProperty("pixelSizeX")?u="ImageServer":o.hasOwnProperty("maxRecordCount")&&o.hasOwnProperty("allowGeometryUpdates")?u="FeatureServer":o.hasOwnProperty("streamUrls")?u="StreamServer":p(o)?(u="SceneServer",i=o.id):o.hasOwnProperty("layers")&&p(null==(a=o.layers)?void 0:a[0])&&(u="SceneServer"),!u)return null;const c=null!=i?t(e):null;return{title:n(c)&&o.name||l(e),serverType:u,sublayer:i,url:{path:n(c)?c.serviceUrl:s(e).path}}}function p(e){return(null==e?void 0:e.hasOwnProperty("store"))&&e.hasOwnProperty("id")&&"number"==typeof e.id}async function v(e,r,a){var t,n;let l,s=!1;if("FeatureServer"===r){const r=await async function(e,r){var a,t;let n=await b(e,r);n=n||{},n.layers=(null==(a=n.layers)?void 0:a.filter(I))||[];const l={serviceJSON:n};if(n.currentVersion<10.5)return l;const s=await b(e+"/layers",r);return l.layersJSON={layers:(null==s||null==(t=s.layers)?void 0:t.filter(I))||[],tables:(null==s?void 0:s.tables)||[]},l}(e,a);s=!!r.layersJSON,l=r.layersJSON||r.serviceJSON}else l=await b(e,a);const o=null==(t=l)?void 0:t.layers,u=null==(n=l)?void 0:n.tables;return{layerIds:(null==o?void 0:o.map((e=>e.id)).reverse())||[],tableIds:(null==u?void 0:u.map((e=>e.id)).reverse())||[],layerInfos:s?o:[],tableInfos:s?u:[]}}function I(e){return!e.type||"Feature Layer"===e.type}async function b(e,r){return(await o(e,{responseType:"json",query:{f:"json",...r}})).data}export{i as fromUrl};
