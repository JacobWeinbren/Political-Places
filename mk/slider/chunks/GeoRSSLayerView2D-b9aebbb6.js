import{cm as e,c5 as i,ck as s,dE as t,dF as r,F as a,bD as o,V as p,X as l}from"../main.js";import{l as n,d as m}from"./LayerView-1a21bf7a.js";import{i as h}from"./GraphicContainer-ab966a42.js";import{i as c}from"./BaseGraphicContainer-36c658c3.js";import"./Container-4c789dcd.js";import"./mat4f32-c792828b.js";import"./Utils-5ca71fda.js";import"./Texture-985b002d.js";import"./quantizationUtils-8410433c.js";import"./json-d4de2d54.js";import"./Matcher-23f3b3ca.js";import"./definitions-bed6fa82.js";import"./TileStore-f63aba89.js";import"./FeatureSetReader-1fd2de45.js";import"./centroid-a4fbaa26.js";import"./visualVariablesUtils-eee4b9c2.js";import"./visualVariablesUtils-f36e6e93.js";import"./quickselect-f9fed392.js";import"./tileUtils-67fe9ec7.js";import"./schemaUtils-0b1a48b9.js";import"./MaterialKey-e4d8bf43.js";import"./CIMSymbolHelper-7e9b7a1b.js";import"./Rect-7efb79ab.js";import"./BidiEngine-b4bf30d1.js";import"./MD5-dea8f45f.js";import"./GeometryUtils-fcb6a2d9.js";import"./earcut-f770eba4.js";import"./TileClipper-b83d4778.js";import"./VertexArrayObject-9b598883.js";import"./FeatureContainer-ff1cd4a8.js";import"./TileContainer-609069e2.js";import"./WGLContainer-4911ff2d.js";import"./ShaderCompiler-c6da5fe6.js";import"./config-90cc2904.js";let y=class extends(n(m)){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}hitTest(e,i){if(this.suspended||!this.graphicsViews.length)return Promise.resolve(null);const s=this.graphicsViews.reverse().map((s=>s.hitTest(e,i)));return Promise.all(s).then((e=>e.filter(((e,i)=>(e&&(e.popupTemplate=this._popupTemplates.get(this.graphicsViews[i]),e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){if(this.graphicsViews)for(const i of this.graphicsViews)i.processUpdate(e)}attach(){this.layer.featureCollections.forEach((a=>{const o=e.fromJSON(a.featureSet),p=new(i.ofType(s))(o.features);let l;if(this._graphicsViewMap[o.geometryType])l=this._graphicsViewMap[o.geometryType],l.graphics.addMany(p);else{const e=a.layerDefinition.drawingInfo,i=a.popupInfo?t.fromJSON(a.popupInfo):null,s=r(e.renderer);l=new c({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:s,container:new h(this.view.featuresTilingScheme)}),this._graphicsViewMap[o.geometryType]=l,this._popupTemplates.set(l,i),"polygon"!==o.geometryType||this.layer.polygonSymbol?"polyline"!==o.geometryType||this.layer.lineSymbol?"point"!==o.geometryType||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}})),this.handles.add([a(this.layer,"polygonSymbol",(e=>{this._graphicsViewMap.polygon.renderer=new o({symbol:e})})),a(this.layer,"lineSymbol",(e=>{this._graphicsViewMap.polyline.renderer=new o({symbol:e})})),a(this.layer,"pointSymbol",(e=>{this._graphicsViewMap.point.renderer=new o({symbol:e})}))])}detach(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this.graphicsViews.length=0}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}};y=p([l("esri.views.2d.layers.GeoRSSLayerView2D")],y);var d=y;export default d;
