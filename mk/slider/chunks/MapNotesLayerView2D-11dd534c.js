import{r as e,ck as i,c5 as s,F as t,dl as r,t as a,V as o,X as n}from"../main.js";import{l as p,d as c}from"./LayerView-1a21bf7a.js";import{i as h}from"./GraphicContainer-ab966a42.js";import{i as l}from"./BaseGraphicContainer-36c658c3.js";import"./Container-4c789dcd.js";import"./mat4f32-c792828b.js";import"./Utils-5ca71fda.js";import"./Texture-985b002d.js";import"./quantizationUtils-8410433c.js";import"./json-d4de2d54.js";import"./Matcher-23f3b3ca.js";import"./definitions-bed6fa82.js";import"./TileStore-f63aba89.js";import"./FeatureSetReader-1fd2de45.js";import"./centroid-a4fbaa26.js";import"./visualVariablesUtils-eee4b9c2.js";import"./visualVariablesUtils-f36e6e93.js";import"./quickselect-f9fed392.js";import"./tileUtils-67fe9ec7.js";import"./schemaUtils-0b1a48b9.js";import"./MaterialKey-e4d8bf43.js";import"./CIMSymbolHelper-7e9b7a1b.js";import"./Rect-7efb79ab.js";import"./BidiEngine-b4bf30d1.js";import"./MD5-dea8f45f.js";import"./GeometryUtils-fcb6a2d9.js";import"./earcut-f770eba4.js";import"./TileClipper-b83d4778.js";import"./VertexArrayObject-9b598883.js";import"./FeatureContainer-ff1cd4a8.js";import"./TileContainer-609069e2.js";import"./WGLContainer-4911ff2d.js";import"./ShaderCompiler-c6da5fe6.js";import"./config-90cc2904.js";const d="sublayers",f="layerView",u=Object.freeze({remove(){},pause(){},resume(){}});let m=class extends(p(c)){async fetchPopupFeatures(e){return(await Promise.all(Array.from(this.graphicsViews(),(i=>i.searchFeatures(e).then((e=>e.filter((e=>!!e.popupTemplate)))))))).flat()}*graphicsViews(){e(this._graphicsViewsFeatureCollectionMap)?yield*this._graphicsViewsFeatureCollectionMap.keys():e(this._graphicsViews)?yield*this._graphicsViews:yield*[]}async hitTest(i,s){if(this.suspended)return null;const t=Array.from(this.graphicsViews(),(async t=>{const r=await t.hitTest(i,s);if(r){if(e(this._graphicsViewsFeatureCollectionMap)){const e=this._graphicsViewsFeatureCollectionMap.get(t);!r.popupTemplate&&e.popupTemplate&&(r.popupTemplate=e.popupTemplate)}return r}return null}));return(await Promise.all(t)).filter((e=>!!e))[0]||null}highlight(e){let t;if("number"==typeof e?t=[e]:e instanceof i?t=[e.uid]:Array.isArray(e)&&e.length>0?t="number"==typeof e[0]?e:e.map((e=>e&&e.uid)):s.isCollection(e)&&(t=e.map((e=>e&&e.uid)).toArray()),t=t.filter((e=>null!=e)),!t.length)return u;for(const e of this.graphicsViews())e.addHighlight(t);return{remove:()=>{for(const e of this.graphicsViews())e.removeHighlight(t)}}}update(e){for(const i of this.graphicsViews())i.processUpdate(e)}attach(){const i=this.view,s=()=>this.requestUpdate(),a=this.layer.featureCollections;if(e(a)&&a.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const e of a){const r=new h(this.view.featuresTilingScheme);r.fadeTransitionEnabled=!0;const a=new l({view:i,graphics:e.source,renderer:e.renderer,requestUpdateCallback:s,container:r});this._graphicsViewsFeatureCollectionMap.set(a,e),this.container.addChild(a.container),this.handles.add([t(e,"visible",(e=>a.container.visible=e)),t(a,"updating",(()=>this.notifyChange("updating")))],f)}}else e(this.layer.sublayers)&&this.handles.add(r(this.layer,"sublayers","change",(()=>this._createGraphicsViews()),(()=>this._createGraphicsViews()),(()=>this._destroyGraphicsViews())),d)}detach(){this._destroyGraphicsViews(),this.handles.remove(d)}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews())e.viewChange()}isUpdating(){for(const e of this.graphicsViews())if(e.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.handles.remove(f);for(const e of this.graphicsViews())e.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),a(this.layer.sublayers))return;const e=[],i=this.view,s=()=>this.requestUpdate();for(const r of this.layer.sublayers){const a=new h(this.view.featuresTilingScheme);a.fadeTransitionEnabled=!0;const o=new l({view:i,graphics:r.graphics,requestUpdateCallback:s,container:a});this.handles.add([r.on("graphic-update",o.graphicUpdateHandler),t(r,"visible",(e=>o.container.visible=e)),t(o,"updating",(()=>this.notifyChange("updating")))],f),this.container.addChild(o.container),e.push(o)}this._graphicsViews=e}};m=o([n("esri.views.2d.layers.MapNotesLayerView2D")],m);var g=m;export default g;
