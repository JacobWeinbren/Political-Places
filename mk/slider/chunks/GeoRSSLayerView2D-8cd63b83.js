import{c_ as e,c8 as i,cb as s,e5 as t,e6 as r,F as o,bJ as a,V as p,X as l}from"../main.js";import{l as n,d as h}from"./LayerView-5391b41b.js";import{i as m}from"./GraphicContainer-a3dc6636.js";import{i as c}from"./BaseGraphicContainer-3e478c7e.js";import"./Container-12e12298.js";import"./mat4f32-5e348668.js";import"./Utils-f6d79cd0.js";import"./Texture-5a2fbc0d.js";import"./projectionSupport-6f4fe32d.js";import"./json-3a3fc42c.js";import"./Matcher-3efcb50e.js";import"./definitions-30f7e45a.js";import"./TileStore-d4a0f9d9.js";import"./FeatureSetReader-0c003706.js";import"./centroid-c29b5012.js";import"./visualVariablesUtils-a5b1ecd3.js";import"./visualVariablesUtils-4dc4b5ab.js";import"./quickselect-9877202c.js";import"./tileUtils-0a7f5e5b.js";import"./schemaUtils-9e8e2a1c.js";import"./MaterialKey-f79173bf.js";import"./CIMSymbolHelper-fc1e883f.js";import"./Rect-1683c0fa.js";import"./BidiEngine-731d4943.js";import"./MD5-6e40d272.js";import"./GeometryUtils-a85960f4.js";import"./earcut-d9732b07.js";import"./TileClipper-5026c4ce.js";import"./VertexArrayObject-c629a0c4.js";import"./FeatureContainer-ee864ebb.js";import"./TileContainer-2e3ef466.js";import"./WGLContainer-2ed440b8.js";import"./ShaderCompiler-9587cc22.js";import"./config-f93f8d9e.js";let y=class extends(n(h)){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}hitTest(e,i){if(this.suspended||!this.graphicsViews.length)return Promise.resolve(null);const s=this.graphicsViews.reverse().map((s=>s.hitTest(e,i)));return Promise.all(s).then((e=>e.filter(((e,i)=>(e&&(e.popupTemplate=this._popupTemplates.get(this.graphicsViews[i]),e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){if(this.graphicsViews)for(const i of this.graphicsViews)i.processUpdate(e)}attach(){this.layer.featureCollections.forEach((o=>{const a=e.fromJSON(o.featureSet),p=new(i.ofType(s))(a.features);let l;if(this._graphicsViewMap[a.geometryType])l=this._graphicsViewMap[a.geometryType],l.graphics.addMany(p);else{const e=o.layerDefinition.drawingInfo,i=o.popupInfo?t.fromJSON(o.popupInfo):null,s=r(e.renderer);l=new c({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:s,container:new m(this.view.featuresTilingScheme)}),this._graphicsViewMap[a.geometryType]=l,this._popupTemplates.set(l,i),"polygon"!==a.geometryType||this.layer.polygonSymbol?"polyline"!==a.geometryType||this.layer.lineSymbol?"point"!==a.geometryType||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}})),this.handles.add([o(this.layer,"polygonSymbol",(e=>{this._graphicsViewMap.polygon.renderer=new a({symbol:e})})),o(this.layer,"lineSymbol",(e=>{this._graphicsViewMap.polyline.renderer=new a({symbol:e})})),o(this.layer,"pointSymbol",(e=>{this._graphicsViewMap.point.renderer=new a({symbol:e})}))])}detach(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this.graphicsViews.length=0}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}};y=p([l("esri.views.2d.layers.GeoRSSLayerView2D")],y);var f=y;export default f;
