import{c_ as e,c8 as i,cb as s,e5 as t,e6 as r,F as o,bJ as a,V as p,X as l}from"../main.js";import{l as n,d as c}from"./LayerView-c4fa1a74.js";import{i as h}from"./GraphicContainer-3db71182.js";import{i as m}from"./BaseGraphicContainer-f4534701.js";import"./Container-a6a24cec.js";import"./mat4f32-85cc7f8e.js";import"./Utils-35d958ae.js";import"./Texture-2e226ed8.js";import"./projectionSupport-e2ddce21.js";import"./json-961aa744.js";import"./Matcher-28e096dd.js";import"./definitions-666095f0.js";import"./TileStore-3feb5295.js";import"./FeatureSetReader-84e04b02.js";import"./centroid-6e341db9.js";import"./visualVariablesUtils-5841f97c.js";import"./visualVariablesUtils-cad1c62a.js";import"./quickselect-8c077a37.js";import"./tileUtils-6dd07ea3.js";import"./schemaUtils-232a3cf1.js";import"./MaterialKey-109c8370.js";import"./CIMSymbolHelper-46c8c25d.js";import"./Rect-eeb1baba.js";import"./BidiEngine-3eae5fd5.js";import"./MD5-54f385ab.js";import"./GeometryUtils-d8d541eb.js";import"./earcut-c458cc7d.js";import"./TileClipper-d08e9b38.js";import"./VertexArrayObject-7c8fe18f.js";import"./FeatureContainer-c541c2b9.js";import"./TileContainer-c7d0a77e.js";import"./WGLContainer-c17d1ffc.js";import"./ShaderCompiler-86e7b04d.js";import"./config-a192e994.js";let y=class extends(n(c)){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}hitTest(e,i){if(this.suspended||!this.graphicsViews.length)return Promise.resolve(null);const s=this.graphicsViews.reverse().map((s=>s.hitTest(e,i)));return Promise.all(s).then((e=>e.filter(((e,i)=>(e&&(e.popupTemplate=this._popupTemplates.get(this.graphicsViews[i]),e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){if(this.graphicsViews)for(const i of this.graphicsViews)i.processUpdate(e)}attach(){this.layer.featureCollections.forEach((o=>{const a=e.fromJSON(o.featureSet),p=new(i.ofType(s))(a.features);let l;if(this._graphicsViewMap[a.geometryType])l=this._graphicsViewMap[a.geometryType],l.graphics.addMany(p);else{const e=o.layerDefinition.drawingInfo,i=o.popupInfo?t.fromJSON(o.popupInfo):null,s=r(e.renderer);l=new m({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:s,container:new h(this.view.featuresTilingScheme)}),this._graphicsViewMap[a.geometryType]=l,this._popupTemplates.set(l,i),"polygon"!==a.geometryType||this.layer.polygonSymbol?"polyline"!==a.geometryType||this.layer.lineSymbol?"point"!==a.geometryType||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}})),this.handles.add([o(this.layer,"polygonSymbol",(e=>{this._graphicsViewMap.polygon.renderer=new a({symbol:e})})),o(this.layer,"lineSymbol",(e=>{this._graphicsViewMap.polyline.renderer=new a({symbol:e})})),o(this.layer,"pointSymbol",(e=>{this._graphicsViewMap.point.renderer=new a({symbol:e})}))])}detach(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this.graphicsViews.length=0}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}};y=p([l("esri.views.2d.layers.GeoRSSLayerView2D")],y);var d=y;export default d;
