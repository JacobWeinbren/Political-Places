import{V as e,W as i,X as r,a as s}from"../main.js";import{Z as t}from"./FeatureLayerView2D-155be714.js";import"./clickToleranceUtils-53824153.js";import"./definitions-30f7e45a.js";import"./LayerView-5391b41b.js";import"./Container-12e12298.js";import"./mat4f32-5e348668.js";import"./schemaUtils-9e8e2a1c.js";import"./Utils-f6d79cd0.js";import"./Texture-5a2fbc0d.js";import"./MaterialKey-f79173bf.js";import"./visualVariablesUtils-4dc4b5ab.js";import"./CIMSymbolHelper-fc1e883f.js";import"./Rect-1683c0fa.js";import"./BidiEngine-731d4943.js";import"./MD5-6e40d272.js";import"./popupUtils-76451d02.js";import"./drapedUtils-18123af5.js";const a=t=>{let a=class extends t{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new s("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],a.prototype,"layer",void 0),e([i({readOnly:!0})],a.prototype,"availableFields",null),a=e([r("esri.views.layers.OGCFeatureLayerView")],a),a};let l=class extends(a(t)){};l=e([r("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export default o;
