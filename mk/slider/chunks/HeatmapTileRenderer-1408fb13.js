import{im as e,V as t,X as i,io as n}from"../main.js";import{n as s}from"./BitmapTileContainer-7a0d9f75.js";import{o as r}from"./BaseTileRenderer-2f897ee9.js";import"./Bitmap-052406a3.js";import"./VertexArrayObject-5f9bcf53.js";import"./Texture-d1d1c480.js";import"./Container-21fb493e.js";import"./mat4f32-85cc7f8e.js";import"./TileContainer-552ae3a3.js";import"./Utils-d78dae70.js";import"./WGLContainer-9672293b.js";import"./definitions-666095f0.js";import"./ShaderCompiler-7a762e28.js";import"./config-a192e994.js";import"./GeometryUtils-d8d541eb.js";import"./MaterialKey-0da97f4d.js";import"./earcut-c458cc7d.js";class a{constructor(){this.gradient=null,this.height=512,this.width=512}render(t){e(t,512,this.intensities,this.gradient,this.minPixelIntensity,this.maxPixelIntensity)}}let o=class extends r{constructor(e){super(e),this._intensityInfo={minPixelIntensity:0,maxPixelIntensity:0},this.featuresView={attributeView:{initialize:()=>{},requestUpdate:()=>{}},requestRender:()=>{}},this._container=new s(e.tileInfoView)}createTile(e){const t=this._container.createTile(e);return this.tileInfoView.getTileCoords(t.bitmap,e),t.bitmap.resolution=this.tileInfoView.getTileResolution(e),t}onConfigUpdate(){const e=this.layer.renderer;if("heatmap"===e.type){const{minPixelIntensity:t,maxPixelIntensity:i}=e;this._intensityInfo.minPixelIntensity=t,this._intensityInfo.maxPixelIntensity=i,this._gradient=n(e.toJSON()),this.tiles.forEach((e=>{const n=e.bitmap.source;n&&(n.minPixelIntensity=t,n.maxPixelIntensity=i,n.gradient=this._gradient,e.bitmap.invalidateTexture())}))}}hitTest(){return Promise.resolve([])}install(e){e.addChild(this._container)}uninstall(e){this._container.removeAllChildren(),e.removeChild(this._container)}disposeTile(e){this._container.removeChild(e),e.destroy()}supportsRenderer(e){return e&&"heatmap"===e.type}onTileData(e){const t=this.tiles.get(e.tileKey);if(!t)return;const i=e.intensityInfo,{minPixelIntensity:n,maxPixelIntensity:s}=this._intensityInfo,r=t.bitmap.source||new a;r.intensities=i&&i.matrix||null,r.minPixelIntensity=n,r.maxPixelIntensity=s,r.gradient=this._gradient,t.bitmap.source=r,this._container.addChild(t),this.requestUpdate()}onTileError(e){console.error(e)}lockGPUUploads(){}unlockGPUUploads(){}};o=t([i("esri.views.2d.layers.features.tileRenderers.HeatmapTileRenderer")],o);var l=o;export default l;
