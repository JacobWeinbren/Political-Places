import{V as e,W as i,X as r,a as s}from"../main.js";import t from"./FeatureLayerView2D-c468897e.js";import"./clickToleranceUtils-63c82886.js";import"./definitions-541a827f.js";import"./LayerView-76ededc1.js";import"./Container-32e21fcc.js";import"./mat4f32-4d6347a3.js";import"./schemaUtils-d5905b20.js";import"./Utils-72b22d6f.js";import"./Texture-383d5e97.js";import"./MaterialKey-a3cf65ce.js";import"./visualVariablesUtils-aa5dd017.js";import"./CIMSymbolHelper-e611e1e2.js";import"./Rect-8eaeb735.js";import"./BidiEngine-3c9378fc.js";import"./MD5-4268822b.js";import"./popupUtils-18438627.js";import"./drapedUtils-354d9f94.js";const a=t=>{let a=class extends t{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new s("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],a.prototype,"layer",void 0),e([i({readOnly:!0})],a.prototype,"availableFields",null),a=e([r("esri.views.layers.OGCFeatureLayerView")],a),a};let l=class extends(a(t)){};l=e([r("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export default o;
