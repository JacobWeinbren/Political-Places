import{V as e,W as i,X as a,a as r}from"../main.js";import s from"./FeatureLayerView2D-32280c3a.js";import"./clickToleranceUtils-63c82886.js";import"./definitions-541a827f.js";import"./LayerView-68c3c97b.js";import"./Container-a6e95168.js";import"./mat4f32-4d6347a3.js";import"./schemaUtils-df9e45ca.js";import"./Utils-7e645faa.js";import"./Texture-3e9bcc53.js";import"./MaterialKey-a7b0f43d.js";import"./visualVariablesUtils-b7312a7a.js";import"./CIMSymbolHelper-a7f52185.js";import"./Rect-8eaeb735.js";import"./BidiEngine-3c9378fc.js";import"./MD5-4268822b.js";import"./popupUtils-0c19e96b.js";import"./drapedUtils-8b0fce85.js";const t=s=>{let t=class extends s{initialize(){const{layer:e,view:i}=this;e.source.supportsSpatialReference(i.spatialReference)||this.addResolvingPromise(Promise.reject(new r("layerview:spatial-reference-incompatible","The spatial references supported by this OGC layer are incompatible with the spatial reference of the view",{layer:e})))}get availableFields(){return this.layer.fieldsIndex.fields.map((e=>e.name))}};return e([i()],t.prototype,"layer",void 0),e([i({readOnly:!0})],t.prototype,"availableFields",null),t=e([a("esri.views.layers.OGCFeatureLayerView")],t),t};let l=class extends(t(s)){};l=e([a("esri.views.2d.layers.OGCFeatureLayerView2D")],l);var o=l;export default o;
