import{c_ as e,c8 as i,cb as s,e5 as t,e6 as r,F as o,bJ as a,V as p,X as l}from"../main.js";import{l as n,d as h}from"./LayerView-ce864cbf.js";import{i as m}from"./GraphicContainer-a5d63ec5.js";import{i as c}from"./BaseGraphicContainer-71189828.js";import"./Container-783a9c35.js";import"./mat4f32-cfee47e9.js";import"./Utils-ec7f800e.js";import"./Texture-de2c3ed0.js";import"./projectionSupport-1d31fcb1.js";import"./json-8f5951cf.js";import"./Matcher-8c76a2f0.js";import"./definitions-2e4d5fbc.js";import"./TileStore-4296b53b.js";import"./FeatureSetReader-704d28f0.js";import"./centroid-f08b0fb4.js";import"./visualVariablesUtils-f05c26bc.js";import"./visualVariablesUtils-03634024.js";import"./quickselect-6d9046e6.js";import"./tileUtils-978b711e.js";import"./schemaUtils-260b7b4b.js";import"./MaterialKey-dc8991b4.js";import"./CIMSymbolHelper-06604369.js";import"./Rect-d509ee5a.js";import"./BidiEngine-c0dea1b1.js";import"./MD5-9535e672.js";import"./GeometryUtils-650cb5e0.js";import"./earcut-4936b6c5.js";import"./TileClipper-8d8d6346.js";import"./VertexArrayObject-175f9e00.js";import"./FeatureContainer-54199285.js";import"./TileContainer-4c3e4436.js";import"./WGLContainer-af8003e9.js";import"./ShaderCompiler-1db8cc9f.js";import"./config-be6ab4aa.js";let y=class extends(n(h)){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}hitTest(e,i){if(this.suspended||!this.graphicsViews.length)return Promise.resolve(null);const s=this.graphicsViews.reverse().map((s=>s.hitTest(e,i)));return Promise.all(s).then((e=>e.filter(((e,i)=>(e&&(e.popupTemplate=this._popupTemplates.get(this.graphicsViews[i]),e.layer=this.layer,e.sourceLayer=this.layer),!!e)))[0]||null))}update(e){if(this.graphicsViews)for(const i of this.graphicsViews)i.processUpdate(e)}attach(){this.layer.featureCollections.forEach((o=>{const a=e.fromJSON(o.featureSet),p=new(i.ofType(s))(a.features);let l;if(this._graphicsViewMap[a.geometryType])l=this._graphicsViewMap[a.geometryType],l.graphics.addMany(p);else{const e=o.layerDefinition.drawingInfo,i=o.popupInfo?t.fromJSON(o.popupInfo):null,s=r(e.renderer);l=new c({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:s,container:new m(this.view.featuresTilingScheme)}),this._graphicsViewMap[a.geometryType]=l,this._popupTemplates.set(l,i),"polygon"!==a.geometryType||this.layer.polygonSymbol?"polyline"!==a.geometryType||this.layer.lineSymbol?"point"!==a.geometryType||this.layer.pointSymbol||(this.layer.pointSymbol=s.symbol):this.layer.lineSymbol=s.symbol:this.layer.polygonSymbol=s.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}})),this.handles.add([o(this.layer,"polygonSymbol",(e=>{this._graphicsViewMap.polygon.renderer=new a({symbol:e})})),o(this.layer,"lineSymbol",(e=>{this._graphicsViewMap.polyline.renderer=new a({symbol:e})})),o(this.layer,"pointSymbol",(e=>{this._graphicsViewMap.point.renderer=new a({symbol:e})}))])}detach(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this.graphicsViews.length=0}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}};y=p([l("esri.views.2d.layers.GeoRSSLayerView2D")],y);var d=y;export default d;
